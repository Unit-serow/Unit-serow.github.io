<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GNU CLISP</title>
    <url>/2020/02/02/CLISP/</url>
    <content><![CDATA[<h3 id="GNU-ANSI-Common-Lisp"><a href="#GNU-ANSI-Common-Lisp" class="headerlink" title="GNU ANSI Common Lisp"></a>GNU ANSI Common Lisp</h3><p><strong>概述:</strong></p>
<p>摘要:</p>
<blockquote>
<p>用于实现 ANSI Common Lisp <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>中所描述的语言标准，并且拥有许多拓展<br>CLISP于大多数GNU与Unix系统上运行，还包括windows NT,ME等等，只需要4MB的RAM<br>common lisp是一种面向对象的通用高级编程语言<br>common lisp算是lisp语言的一种方言吧</p>
</blockquote>
<p>参考文献:<br>ANSI Common Lisp 中文翻译版<a href="https://acl.readthedocs.io/en/latest/" target="_blank" rel="noopener">跳转</a><br><code>https://acl.readthedocs.io/en/latest/</code></p>
<p>电子书版本<a href="https://web.archive.org/web/20020805060924/http://www.lisp.org/HyperSpec/FrontMatter/index.html" target="_blank" rel="noopener">跳转</a><br><code>https://web.archive.org/web/20020805060924/http://www.lisp.org/HyperSpec/FrontMatter/index.html</code></p>
<p>官方网站<a href="https://clisp.sourceforge.io/summary.html" target="_blank" rel="noopener">跳转</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;clisp.sourceforge.io&#x2F;summary.html</span><br><span class="line">https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;clisp&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;clisp.sourceforge.io&#x2F;</span><br></pre></td></tr></table></figure>

<p>参考手册<a href="https://clisp.sourceforge.io/impnotes/clisp.html" target="_blank" rel="noopener">跳转</a><br><code>https://clisp.sourceforge.io/impnotes/clisp.html</code></p>
<p>获取:<br><a href="http/SF">跳转</a>/<a href="http://ftp.gnu.org/pub/gnu/clisp/" target="_blank" rel="noopener">跳转</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http&#x2F;SF</span><br><span class="line">http:&#x2F;&#x2F;ftp.gnu.org&#x2F;pub&#x2F;gnu&#x2F;clisp&#x2F;</span><br></pre></td></tr></table></figure>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">基于ANSI标准的common lisp语言的实现(编译器、调试器和解释器)
---</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Gettext</title>
    <url>/2020/02/02/Gettext/</url>
    <content><![CDATA[<h3 id="GNU-Gettext-第一章节"><a href="#GNU-Gettext-第一章节" class="headerlink" title="GNU Gettext 第一章节"></a>GNU Gettext 第一章节</h3><p><strong>GNU 国际化(i18n)库</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>国际化与本地化函数库</li>
<li>GNU gettext是GNU translation project中最重要的一步 </li>
<li>GNU通用性翻译计划</li>
<li>这个项目的达成将会让GNU拥有更大的经济与用户结构，从而拥有更多的资本</li>
</ul>
<p><strong>引用自官方文档:</strong></p>
<blockquote>
<p>在以前，通常GNU内部或大量其它的自由软件中的程序源代码都是拿英文编写或记录的，并且在与用户交互的界面所使用的也是英语<br>当世界上所有的开发人员之间使用一种通用的语言去交流会让开发的过程变得极为方便<br>但是，在全世界范围内的大多数人对于英文的理解能力和学习深度远不如母语，所以它们更愿意使用母语进行日常工作<br>并且大多数人只是希望让屏幕上其它晦涩难懂的语言少一点，而自己的母语多一点<br>所以就有了GNU Gettext<br>该软件包为程序员，翻译人员与用户提供了一套完善的工具和文档集<br>更准确的说，gnu gettext所使用的程序是一组工具，提供了一个框架来帮助其他GNU软件包生成多语言的消息</p>
</blockquote>
<p><strong>这个工具包括了以下的一组程序:</strong></p>
<ul>
<li>一套如何编写程序，从而让消息目录支持的规则</li>
<li>一套如何为目录本身和文件命名的规则</li>
<li>一个运行时库，用于支持检索翻译后的消息</li>
<li>一些独立程序，以各种方式处理可翻译的字符串或已翻译字符串的集合</li>
</ul>
<p>GNU Emacs拥有实现这套程序的插件或拓展，感兴趣的可以去查询有关GNU Emacs的消息</p>
<hr>
<p>逻辑简述:<br>以下内容参考自:<a href="https://www.gnu.org/software/gettext/manual/html_node/Program-Index.html#Program-Index" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gettext/manual/html_node/Program-Index.html#Program-Index</code></p>
<ul>
<li>xgettext程序从源代码生成.pot文件，作为源代码中序翻译内容的模板</li>
<li>而翻译者需要工作的对象是.po文件，它是有msginit程序从.pot模板文件生成的</li>
<li>翻译者用maginit初始化中文翻译文件时可以执行<code>msginit --locale=cn --input=name.pot</code></li>
<li>然后编辑所生成的.po文件</li>
<li>最后.po文件需要使用msgfmt编译为.mo文件以用作发布</li>
<li>使其运行需要使用UNIX操作系统中的用户需要修改环境变量中的<code>LC_MESSAGES</code>或<code>LANG</code>，程序将自动从相应的.mo文件中读取语言信息</li>
</ul>
<p>使用方法:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在使用gettext()方法的时候通常以标记别名_的形式使用</span><br><span class="line">如printf(gettext(&quot;name is %s. \n&quot;), first_name);</span><br><span class="line">可以写作printf(_(&quot;name is %s.\n&quot;), first_name);</span><br></pre></td></tr></table></figure>

<hr>
<p>参考资料:<br>官方网站<a href="https://www.gnu.org/software/gettext/" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gettext/</code><br>获取<a href="https://ftp.gnu.org/pub/gnu/gettext/gettext-0.20.1.tar.gz" target="_blank" rel="noopener">跳转</a><br><code>https://ftp.gnu.org/pub/gnu/gettext/gettext-0.20.1.tar.gz</code><br>社区<a href="https://savannah.gnu.org/projects/gettext/" target="_blank" rel="noopener">跳转</a><br><code>https://savannah.gnu.org/projects/gettext/</code><br>文档<a href="https://www.gnu.org/software/gettext/manual/gettext.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gettext/manual/gettext.html</code></p>
]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Portable Threads/Pth</title>
    <url>/2020/02/02/Pth/</url>
    <content><![CDATA[<h3 id="GNU-Portable-Threads-第一章节"><a href="#GNU-Portable-Threads-第一章节" class="headerlink" title="GNU Portable Threads 第一章节"></a>GNU Portable Threads 第一章节</h3><p><strong>GNU 可移植线程库 Pth</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>GNU计划重要的一部分</li>
<li>GNU Pth 是用于UNIX平台下基于POSIX与ANSI C的用户空间线程库</li>
<li>GNU Pth还包含了POSIX线程的API，以达成向后兼容的目的</li>
</ul>
<p>GNU Pth使用到内核空间线程的N:1映射，所以说调度完全将完全由GNU Pth库进行<br>内核将不会干涉用户空间中任何数量的线程，所以利用不到SMP<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>所拥有的机制，因为SMP必须由内核派遣</p>
<p><strong>存在目的:</strong></p>
<ul>
<li>GNU Pth的目的是针对任意线程的处理达到高度的可移植性</li>
<li>其次是为了让多线程应用提供基于优先级的调度</li>
</ul>
<hr>
<p><strong>参考资料:</strong></p>
<p>官方网站<a href="https://www.gnu.org/software/pth/" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/pth</code></p>
<p>官方手册<a href="https://www.gnu.org/software/pth/pth-manual.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/pth/pth-manual.html</code></p>
<p>多线程库列表<a href="https://www.gnu.org/software/pth/related.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/pth/related.html</code></p>
<p><a href="https://www.gnu.org/software/pth/related.html" target="_blank" rel="noopener">多线程库文档，包含了Unix系统中所有对于已知多线程库的调用</a><br><code>https://www.gnu.org/software/pth/related.html</code></p>
<p>关于OSSP pth<a href="http://www.ossp.org/pkg/lib/pth/" target="_blank" rel="noopener">跳转</a><br><code>http://www.ossp.org/pkg/lib/pth</code></p>
<p>论文引用:<br><a href="http://heather.cs.ucdavis.edu/~matloff/pth.html" target="_blank" rel="noopener">对于GNU pth的使用与描述</a><br><code>http://heather.cs.ucdavis.edu/~matloff/pth.html</code></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">均衡多处理架构</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU C libary/Libc</title>
    <url>/2020/02/02/Libc/</url>
    <content><![CDATA[<h3 id="GNU-C-Library-第一章节"><a href="#GNU-C-Library-第一章节" class="headerlink" title="GNU C Library 第一章节"></a>GNU C Library 第一章节</h3><p><strong>C 标准函数库 Libc</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>GNU/Linux操作系统一个重要的组成部分</li>
<li>FSF为GNU所写，作用是配合linux内核,是Linux下基于ANSI C<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>标准的GNU C<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>标准函数库</li>
</ul>
<p><strong>存在目的:</strong></p>
<ul>
<li>目的是为linux内核的操作系统提供核心库文件，库提供了关键的API，当然也包括Linux内核的API</li>
<li>虽说称为C的标准函数库，但还支持很多其他的程序语言</li>
</ul>
<hr>
<p><strong>其它C 标准库</strong></p>
<p>C POSIX library</p>
<ul>
<li>C 可移植标准接口库</li>
<li>包含了一些在C 标准库之外的函数，这里指ANSI所定制的C 标准库</li>
</ul>
<p>CRT/C Run-time Library</p>
<ul>
<li>C 运行时期库</li>
<li>C 程序运行时需要这些库中的函数</li>
<li>包含于程序运行时使用到的一些API集合，这里的API是预先编译后存放在linux系统中的二进制代码形式的文件</li>
<li>CRT通常作为C编译程序发布</li>
<li>CRT含有初始化代码，还有错误处理代码(例如divide by zero处理)</li>
</ul>
<hr>
<p><strong>其它资料:</strong><br>ANSI C库可以根据头文件划分为15个类别<br>其中包括:</p>
<ul>
<li>字符类型 ()</li>
<li>错误码()</li>
<li>浮点常数 ()</li>
<li>数学常数 ()</li>
<li>标准定义 ()</li>
<li>标准 I/O ()</li>
<li>工具函数 ()</li>
<li>字符串操作 ()</li>
<li>时间和日期 ()</li>
<li>可变参数表 ()</li>
<li>信号 ()</li>
<li>非局部跳转 ()</li>
<li>本地信息 ()</li>
<li>程序断言 () 等等</li>
<li>这在其他的C语言的IDE中都是有的</li>
</ul>
<h2 id="以上内容引用自百度百科条目"><a href="#以上内容引用自百度百科条目" class="headerlink" title="以上内容引用自百度百科条目"></a>以上内容引用自百度百科<a href="https://baike.baidu.com/item/libc" target="_blank" rel="noopener">条目</a></h2><p>参考资料:</p>
<p>GNU C Library连接<a href="https://www.gnu.org/software/libc/involved.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/libc/involved.html</code></p>
<p>C POSIX库参考文献<a href="https://web.archive.org/web/20100724201155/http://www.space.unibe.ch/comp_doc/c_manual/C/FUNCTIONS/funcref.htm" target="_blank" rel="noopener">跳转</a><br><code>https://web.archive.org/web/20100724201155/http://www.space.unibe.ch/comp_doc/c_manual/C/FUNCTIONS/funcref.htm</code></p>
<p>C 标准函式库<a href="https://pubs.opengroup.org/onlinepubs/9699919799/idx/head.html" target="_blank" rel="noopener">跳转</a><br><code>https://pubs.opengroup.org/onlinepubs/9699919799/idx/head.html</code></p>
<p>C POSIX library-wiki<a href="https://zh.wikipedia.org/wiki/C_POSIX_library" target="_blank" rel="noopener">跳转</a><br><code>https://zh.wikipedia.org/wiki/C_POSIX_library</code></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">由美国国家标准局所制定的C语言发布标准-是最基本的C语言函数库，包含了C语言最基本的库函数并且是C语言最初的标准</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">由LGPL许可协议发布的，自由的，公开源代码并且方便下载的C编译程序</span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Libtool</title>
    <url>/2020/02/01/Libtool/</url>
    <content><![CDATA[<h3 id="GNU-libtool-第一章节"><a href="#GNU-libtool-第一章节" class="headerlink" title="GNU libtool 第一章节"></a>GNU libtool 第一章节</h3><p><strong>GNU 构建系统</strong></p>
<p><strong>概述与解释:</strong></p>
<ul>
<li>GNU Libtool是一种属于<a href="https://unit-serow.github.io/2020/01/29/Autotools/" target="_blank" rel="noopener">GNU构建系统</a>的GNU程序设计工具</li>
<li>GNU Libtool是一个用于支持通用库的脚本程序</li>
<li>用于解决在不同的操作系统中使用共享库进行代码移植的复杂性，在不同的系统中建立动态链接库，以隐藏不同系统之间的差异性</li>
<li>从而给开发人员提供一致的接口</li>
<li>但还是需要底层系统对所创建链接库的支持，所以libtool不能在不支持动态连接库的系统中创建动态链接库</li>
</ul>
<hr>
<p><strong>存在目的:</strong></p>
<ul>
<li>用于产生/建立便携式的库，它既可以建立动态链接库，也可以建立动态链接库，还可以包含两者</li>
<li>GNU libtool的目的是使每一个主机类型的完整功能都可以通过一个泛用接口来产生</li>
<li>GNU libtool的目标是使接口一致</li>
</ul>
<hr>
<p><strong>使用方法</strong><br>本章节不对应用进行过多阐述<br>libtool通常与GNU建构系统中的autoconf和automake这两个工具一起使用<br>需要参照系统手册（构建通用库所需要执行的命令）以及修改相应makefile的makefile.in或makefile.in文件<br>相关内容可查询<a href="https://www.gnu.org/software/libtool/manual/libtool.html" target="_blank" rel="noopener">libtool文档</a></p>
<hr>
<p>参考资料</p>
<p>GNU Libtool手册<a href="https://www.gnu.org/software/libtool/manual/libtool.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/libtool/manual/libtool.html</code></p>
<p>使用GNU Libtoo创建库<a href="https://www.ibm.com/developerworks/cn/aix/library/1007_wuxh_libtool/index.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.ibm.com/developerworks/cn/aix/library/1007_wuxh_libtool/index.html</code></p>
<p>官方网站<a href="https://www.gnu.org/software/libtool/news.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/libtool/news.html</code></p>
<p>autobook<a href="http://www.sourceware.org/autobook/" target="_blank" rel="noopener">跳转</a><br><code>http://www.sourceware.org/autobook/</code></p>
<p>获取:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http: http:&#x2F;&#x2F;ftpmirror.gnu.org&#x2F;libtool&#x2F;</span><br><span class="line">ftp: ftp:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;libtool&#x2F; </span><br><span class="line">克隆: git clone git:&#x2F;&#x2F;git.savannah.gnu.org&#x2F;libtool.git</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Binutils</title>
    <url>/2020/02/01/Binutils/</url>
    <content><![CDATA[<h3 id="GNU-Binutils-第一部分"><a href="#GNU-Binutils-第一部分" class="headerlink" title="GNU Binutils 第一部分"></a>GNU Binutils 第一部分</h3><p><strong>GNU 二进制工具包</strong></p>
<p><strong>工具包内包含程序</strong><br>主要包含ld与as，分别是GNU链接器-GAS与GNU汇编器-GLD</p>
<p><strong>其他程序</strong></p>
<ul>
<li>ar-用于建立，修改，提取归档文件(archive)<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>/用于对归档/静态库做创建，修改和提取的操作</li>
<li>addr2line-将目标文件的虚拟地址转换为文件的行号或符号</li>
<li>c++filt-解码C++的符号</li>
<li>dlltool-用于构建与使用DLL文件，也就是创建windows动态库</li>
<li>gold-正在测试的功能，一个新型且效率更高的ELF的链接器</li>
<li>ELF是一种用于可执行文件，目标文件，共享库和核心转储的标准文件格式，可执行与可连接格式，ELF所产生的数据结构与工具不做阐述</li>
<li>gprof-用于显示性能的分析信息/性能分析工具</li>
<li>nlmconv-将目标代码转换为NetWare Loadable Module/NLM文件格式</li>
<li>nm-列出并显示目标文件中的符号</li>
<li>objcopy-复制并编译目标文件，其过程中可以修改</li>
<li>objdump-显示目标文件中的相关信息，可用于反汇编</li>
<li>ranlib-生成静态库索引</li>
<li>readelf-用于显示任何ELF格式文件的内容</li>
<li>size-列出对象总体或归档文件的节数/大小</li>
<li>strings-列出目标二进制文件中的可打印/可显示字符串</li>
<li>strip-从目标文件中移除符号</li>
<li>windmc-兼容windows消息的编译器，用于产生windows的消息资源</li>
<li>windres-windows资源文件的编译器</li>
</ul>
<hr>
<p><strong>杂项及存在意义</strong></p>
<ul>
<li>大部分的复杂代码都存于Binary File Descriptor library和libopcodes库内</li>
<li>所以它是一整套编程语言工具程序,用于处理许多格式的目标文件</li>
<li>这些程序大多数使用BFD-二进制文件描述库</li>
<li>主要的目的还是为GNU项目用于解决不同格式的目标文件的可移植性问题的主要机制</li>
</ul>
<hr>
<p><strong>参考:</strong></p>
<p>获取：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;binutils</span><br><span class="line">http:&#x2F;&#x2F;ftpmirror.gnu.org&#x2F;binutils</span><br><span class="line">apt-get install binutils*</span><br><span class="line">克隆：git clone git:&#x2F;&#x2F;sourceware.org&#x2F;git&#x2F;binutils-gdb.git</span><br></pre></td></tr></table></figure>

<p>官网<a href="https://www.gnu.org/software/binutils/binutils.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/binutils/binutils.html</code></p>
<p>文档<a href="https://sourceware.org/binutils/docs-2.33.1/" target="_blank" rel="noopener">跳转</a><br><code>https://sourceware.org/binutils/docs-2.33.1/</code></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">archive是一个包含多个被包含文件的单一库文件,它可以保证从中检索到原始的被包含文件-mumber,而member用于保存archive的各种基本属性，当member被提取后，archive的属性将被还原到初始状态</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Make</title>
    <url>/2020/02/01/Make/</url>
    <content><![CDATA[<h3 id="GNU-Make-第一部分"><a href="#GNU-Make-第一部分" class="headerlink" title="GNU Make 第一部分"></a>GNU Make 第一部分</h3><p><strong>GNU 自动化建构</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>在软件开发的过程中，make通常作为一个工具程序(unility software),经由makefile，从而实现自动化构建软件</li>
<li>在经由makefile时make工具会根据情况转换文件形式至target，转换的同时还会检查文件的依赖关系，检查依赖关系的方式本部分不做阐述</li>
<li>所以在编写软件时，应该先编写一个makefile，之后再让make去进行构建和安装</li>
</ul>
<p>或称为</p>
<ul>
<li><p>用于编译源代码，从而生成结果代码，然后将结果代码链接起来，最后生成可执行文件</p>
</li>
<li><p>其中名为makefile的文件用来确定某一target文件的以来关系，然后把生成target相关的命令转给机器的shell去执行</p>
</li>
<li><p>IDE通常包含了make，make多用于UNIX下的软件开发</p>
</li>
<li><p>本质如同UNIX底层的其他基本程序，批量执行生成目标的命令，同时检查文件的依赖关系</p>
</li>
</ul>
<hr>
<p>参考<br>官方网站<a href="https://www.gnu.org/software/make/make.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/make/make.html</code></p>
<p>获取<br><code>http: http://ftp.gnu.org/gnu/make/</code><br><code>ftp: ftp://ftp.gnu.org/gnu/make/</code></p>
<p>make手册<a href="https://www.gnu.org/software/make/manual/" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/make/manual/</code></p>
<p>makefile手册<a href="https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html#Makefile-Conventions" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html#Makefile-Conventions</code></p>
<p>make源码所在目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;share&#x2F;doc&#x2F;make&#x2F;</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;doc&#x2F;make&#x2F;</span><br></pre></td></tr></table></figure>

<p>make帮助指令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make --help</span><br><span class="line">info make</span><br><span class="line">man make</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Compiler Collection</title>
    <url>/2020/02/01/GCC/</url>
    <content><![CDATA[<h3 id="GNU-Compiler-Collection-第一部分"><a href="#GNU-Compiler-Collection-第一部分" class="headerlink" title="GNU Compiler Collection 第一部分"></a>GNU Compiler Collection 第一部分</h3><p><strong>GNU 编译器套装 GCC</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>它是GNU计划中关键的一环</li>
<li>基于GPL与LGPL软件许可,并且为free software-自由软件</li>
<li>UNIX-like，Linux，BSD类的操作系统都采用GCC为标准编译器</li>
<li>其他的C编译器LLVM,Clang</li>
<li>GCC通常是跨平台编译器的首选</li>
</ul>
<hr>
<p><strong>GCC的执行逻辑与过程</strong><br>GCC的作用是将源代码生成可执行文件大体需要四个步骤:</p>
<ul>
<li>预处理/预编译-preprocessing</li>
<li>编译-compilation</li>
<li>汇编-assembly</li>
<li>连接-linking</li>
</ul>
<p><strong>由下至上的处理过程</strong></p>
<ul>
<li>GCC先调用cpp进行预处理-预处理的作用是对源码文件中的文件包含-include,预编译语句-宏定义define等进行分析,预处理的主要功能大概分为三个:宏定义,文件包含,条件编译</li>
<li>然后调用cc1进行编译,这个阶段根据输入文件生成以.i为后缀的目标文件</li>
<li>然后调用as进行汇编工作,一般的汇编语言源码由.s为后缀,s为后缀的汇编语言文件经由编译器和汇编之后会生成.o后缀的目标文件</li>
<li>当所有目标文件都生成后,GCC就调用ld来完成最后阶段的工作-连接</li>
<li>在连接阶段,所有目标文件被自动生成并同时分配依赖条件/文件应该所处的位置</li>
<li>最后,该程序内所用的库函数也会被链接到所对应的位置</li>
</ul>
<hr>
<p><strong>GCC语言编译器的结构</strong><br>语言编译器的结构-由下至上/底层到顶层</p>
<ul>
<li>GCC内置了大量语言的编译器,每个语言的编译器都是独立的程序</li>
<li>编译器的作用是处理输入的源码,从而输出组合语言码</li>
<li>全部的语言编译器都有共同的中介架构</li>
<li>语言编译器的结构分为三个部分:前端接口,中介接口以及后端接口</li>
<li>前端接口负责解析符合此语言的原始码,并产生一个抽象语法树以及翻译此语法树,使其成为GCC的暂存器转换语言-RTL的后端，GCC编译器最佳化与静态程序解码技术应用于此时程序的代码上</li>
<li>最后适应于硬件架构的组合语言经由某一不可知算法产出</li>
</ul>
<hr>
<p><strong>参考:</strong></p>
<p>官方网站<a href="https://gcc.gnu.org" target="_blank" rel="noopener">跳转</a><br><code>https://gcc.gnu.org/</code></p>
<p>获取<br><code>apt-get install gcc*</code></p>
<p>涉及编译器深层原理的内容此章节不做阐述</p>
]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Debugger</title>
    <url>/2020/02/01/Debugger/</url>
    <content><![CDATA[<h3 id="GNU-Debugger-第一部分"><a href="#GNU-Debugger-第一部分" class="headerlink" title="GNU Debugger 第一部分"></a>GNU Debugger 第一部分</h3><p><strong>GNU 调试工具 GDB</strong></p>
<p><strong>概述:</strong></p>
<p>存在的意义/作用:</p>
<ul>
<li>GDB大多数UNIX及UNIX-like下的调试工具</li>
<li>GDB可以根据自定义的要求启动所选程序</li>
<li>让被调试的程序在指定的调试断点停住，其断点可以是条件表达式，当程序被停住时可以去检查该程序中正在处理的事务</li>
<li>GDB还可以用于修改程序，以此来修复BUG所带来的影响</li>
<li>GDB相比于其他具有GUI的调式工具的优点就是具有修复网络断点以及恢复链接等功能</li>
<li>还可以把GDB理解为一个强大的命令行调试工具，命令行的优点就是可以形成一个完整的执行序列，以此来形成脚本程序<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></li>
</ul>
<p><strong>使用方法简述:</strong></p>
<p><strong>启动</strong></p>
<ul>
<li>可以直接执行GDB以启动GDB命令行，<code>quit</code>退出GDB命令行</li>
<li>执行<code>gdb file name</code>来选中被调试的目标文件，并进入GDB命令行</li>
<li><code>run</code>用于执行程序，后面可以接GDB已有的缺省参数</li>
</ul>
<p><strong>断点</strong></p>
<ul>
<li>执行break命令，可以简写为b，用来给调试的程序中设置断点</li>
<li>从断电处继续运行执行continue命令</li>
<li>GDB还内置了断点的管理工具</li>
<li><code>info break</code> 用于显示当前GDB所有的断点信息</li>
<li><code>break breakpoint 编号</code> 用于删除指定编号的断点，如果不带编号将删除所有的断点</li>
<li><code>disable breakpoint 编号</code> 用于禁止使用指定编号的断点，同时info break的enb域变为n</li>
<li><code>enable breakpoint 编号</code> 允许指定断点，同时info break的enb域变为y</li>
</ul>
<p><strong>其他功能简述</strong></p>
<ul>
<li>单步执行：next不进入单步执行，step进入单步执行</li>
<li>函数调用：call function name调用和执行一个函数，执行finish结束当前的函数，如果有返回值就会显示其返回值</li>
<li>机器语言工具，信号处理与变量复制的检查</li>
</ul>
<hr>
<p><strong>参考资料:</strong></p>
<p>官方网站<a href="https://www.gnu.org/software/gdb/" target="_blank" rel="noopener">跳转</a><br><a href="https://www.gnu.org/software/gdb/" target="_blank" rel="noopener">https://www.gnu.org/software/gdb/</a></p>
<p>GDB手册<a href="https://sourceware.org/gdb/current/onlinedocs/gdb/" target="_blank" rel="noopener">跳转</a><br><a href="https://sourceware.org/gdb/current/onlinedocs/gdb/" target="_blank" rel="noopener">https://sourceware.org/gdb/current/onlinedocs/gdb/</a></p>
<p>深入GDB<a href="https://web.archive.org/web/20080616054054/http://sources.redhat.com/gdb/current/onlinedocs/gdbint.html" target="_blank" rel="noopener">跳转</a><br><a href="https://web.archive.org/web/20080616054054/http://sources.redhat.com/gdb/current/onlinedocs/gdbint.html" target="_blank" rel="noopener">https://web.archive.org/web/20080616054054/http://sources.redhat.com/gdb/current/onlinedocs/gdbint.html</a></p>
<p>开源程序的体系结构-GDB<a href="http://www.aosabook.org/en/gdb.html" target="_blank" rel="noopener">跳转</a><br><a href="http://www.aosabook.org/en/gdb.html" target="_blank" rel="noopener">http://www.aosabook.org/en/gdb.html</a><br><a href="http://www.aosabook.or" target="_blank" rel="noopener">http://www.aosabook.or</a></p>
<hr>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">因为UNIX下的软件基本上都是命令行的，所以它们具有天生的优势-可以很方便的把简单的已有工具的命令集成在一起，从而做出一个功能强大的程序
---</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU Lib</title>
    <url>/2020/01/30/Lib/</url>
    <content><![CDATA[<h3 id="GNU-Lib-第一部分"><a href="#GNU-Lib-第一部分" class="headerlink" title="GNU Lib 第一部分"></a>GNU Lib 第一部分</h3><p><strong>GNU 可移植性库</strong></p>
<p><strong>概述:</strong></p>
<ul>
<li>GNU Lib 存在的意义是实现所有gnu代码关于移植性问题处理方法的统一化</li>
<li>使任何基于GNU标准的软件，可以顺利的移植到任何其他的操作系统上，关于操作系统移植问题的方法统一化</li>
<li>所以可以把GNU Lib理解为所有基于GNU标准的软件的子程序，这些子程序将GNU软件互相链接，从而实现GNU软件包之间的完全共享</li>
<li>其中gcc因为libiberty库的原因，很难脱离GNU的构建树，但GNU Lib与其完全不同，构成它的子程序会实现资源等级的划分，使所有基于GNU协议的软件实现代码共享，从而解决移植性问题，而绝非去构建，安装或者链接库</li>
<li>因此GNU Lib没有发行版的概念，只需要将GNU Lib的源码复制到使用者的代码树中即可</li>
</ul>
<hr>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>官网<a href="https://www.gnu.org/software/gnulib" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gnulib</code></p>
<p>手册<a href="https://www.gnu.org/software/gnulib/manual" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gnulib/manual</code></p>
<p>获取<br><code>git clone git: //git.savannah.gnu.org/gnulib.git</code></p>
<p>GNU Lib模块列表<a href="https://www.gnu.org/software/gnulib/MODULES.html" target="_blank" rel="noopener">跳转</a><br><code>https://www.gnu.org/software/gnulib/MODULES.html</code></p>
<p>社区<a href="http://git.savannah.gnu.org/gitweb/?=gnulib.get" target="_blank" rel="noopener">跳转</a><br><code>http://savannah.gnu.org</code><br><code>http://git.savannah.gnu.org/gitweb/?p=gnulib.get</code></p>
<p>帮助指令:<code>./gnulib-tool --help</code></p>
<hr>
]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔 2020-1.30 pm1.23</title>
    <url>/2020/01/30/%E5%AF%B9%E4%BA%8E%E8%87%AA%E8%BA%AB%E7%9A%84%E4%B8%BB%E8%A7%82%E6%80%A7%E8%AF%84%E4%BB%B7/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">输入密码</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="6030bb0cffa7ca8f07462a49c500b4995f1c3e7d05240ec03f3bca4a1868be50">7a8f959bb63d40699b4d0a1f5e996a58a02df4c21f1e7f76c3e51383d2373ae6be5942458e39c22961c21164b4e5b9d530737192bc62a6ee7a23d7f27b5852c94be2dad15ec5210996c8441162c12a595049d0812ef531a492403755545bec7990de5c7ebabaa66860db89592eb6e4c3fd58731803477406ed77d0624b72af6acb70341758da01893ce49c701f95514f48a265637cf897de664108eecd9744df97a7f20e383a714dc0ad8741861c1d939aee6104067711b9c8be6c5046f530fc0069e2786d9096d8c3b521e6bb886f506c11c3dc5de17e24155d3eada8f386d521c476f78657a640c159f590145884b28d03ec5c36340ba902b263286c68da732f374f41dda8a03fca5a3cbc4f39815ea7281ed69715523c7fc1fa024c42d9cac21d9b7f060946b72c16b545057f91b1f7789966187fc4dc78d79dc0bb5037aefab6eccc87e01ad4289564b2fd1ca53a676346fa01223ad4e8c73cbe44eac86e60efc611dedde8aa498429225b8109e287eb3a7ca35305bada35b2a90e3f99deeaf0d5bd82c7ddf686f766ac5e5ce9d3121488418128adf2bcad9ada5dab6fbac8582bfdc840b41b32dbc4a34feda9ade35026509d65b18ba6feb2cd5847014416bb1a5ed36637d5e05ba805e756a32c0a0c4d7746100ec0294a5df81b32bd9b3098c03187bccb6a3d650c8ec26ff81dbf0ec9fb13d3f17839b83c0a5438d15f4bce8f71b16da54ab8f7b7bf10abb58e4df2a9595571740f6ba69f9f23b22aae1553770df7b0550cdbb61c2cf826a4922bf1f00beeaaaaf9516b116924a9b0aabf9ac4ae8e4023cc85a509c04096838509206fe60ef8238dce365cc5b3adef80756a8a4dda3d069bbe60e34fb8eaef5c2fee35bb3f7821fede00d191e64d524e3a7f14ade701d2b010cc9442a770d1d1345c55942a3a63508cedbfee6a5e9b9e57d85328a0f664e53f63d3eb5f639cb5e8e9f49bf6d944d06a6d9d48bdf371bdc44f6c39ed7deb80584c460bd337d836f10e192da8cd5aa5166b2052803c90b0a96386f4cd70a5d068f5fafac78ce093bc3c2916f06d5de0d84e72c656315cdbad3a9528020bff197faee067055c92a679c0d4d04ef6a390a5354616e43f365b3b15f0243ac12da0e74aa0e4f61c6997d48192cb0d8588767a51f0463120fcd369d7c5c3a650ba0de8b935b22cde9cd5576cfbdbf69c31bc55e506056ff59aa117eba6a5ccd4fc6066c8994ef2737ae1299daab3911499afe093d51e94b92ff2a951bd118a0cc978f999537597158442797bff3a9281485927e81cd42741fe92eb7abdbf6d346683c51061298b2de3ea35016c4452b070b0d458eef62e4c142868cc0e4064fd08868947ccec41cba4e41c584193f730dd46be979db6d13251560c0bd9642b420b11b6c2051fd8382f995ed8dd80dff3be085b3fd65dbba2f5f8394c13931771f076455f2df67cd6e44b092827da48dbb0d62ff0d21ed756fb7e8daecb7b20228625312a22ffaa5132a2eec8cd08c717dfb265a17833095badf7baed13bade6820efa2580a565296b929506b0c49210167281d678af1a1dfe2c18bced21f908ba944e4b9659dc58ab69106804d154c2419f3f0aabddd8d879dc5b63d413671ddb5eaa02fbec0ff7978dc23ba6cbe6c2658d1fd7d042e08fe71a72a2e33b0b327202ed12b14f58ae898d5c9246aff48eda36b8e45069e4a70d38bb2578a9ecbd4dd827d9fd3337245ed4bbe398be94110adaa3c431acb360c8aa301ba12def3c97c0fd9f85e38b269dd03793bff019ec2d48bc2bf260a20bbcbae4477882d10efcbebbdad7100674f0d953407353ce0d8cb5cf2fde6b117bb55451c385c656a7030384fe8ffe562b68ac75c19861b939f0db6bb8f1713e20d2e4971b9a883573ddd29a82b2d47d0030ac298d989d61fb045d539a2348408cceccdfc05b8975bf0a639a72389f796fcb9d90da7bcf34f53dcfd5b50733fa3c07ae725de49b0ea0ebabbd88b80e32008196df4e799f52d176870b49285ef71a9040c0832b6651b3923ddd048dd8a6f6a79b61f53330f63ac88bd1f8adeba51d74a84cf7d6170246adde718809b6fe0a8c4a299a53828ba85fafd357d50180075fd6cc457ec299afd535b396aa0d05e1f7053c2c3be1498fa1da5941e46400599586d7453268a826c35cfbc291d8e2db7c2fed7a2dfff6574e7cf22920b3a4c09c214f20e72d408e99f339a1d5b74a0148540ebad4adabb3c890363204b4166510d980a01d11b2fc412c980cfa603c583155b6940d5920ee8e44c20b048d2884a292eb009e68d991c4d60b53b4bef12aa8eac51e8c9e8c6548cfae2d15e9fcce8619a27913273ab885bee758a1282cdf64a0149fcd0e1af25ce79dc9ff290387adc09c91d622e8e74cb086287034d0ee205c2342b308b4c7222cde3ad0a7ebc3a19da9c341d26ccc99aeda056e57c59e549d75b3ee27e45db5adae26ed29e558dfb7295d4e541ff23f24732f133d1301fc383addf6e57966508b6c958ef8a013405cf1cb981f4c3b8089ce62e83fb7e15010fc318198c19f2b5fe3b1dbcca51bb0394c3769123323e40a7d4e6ef3855be14fe9c9271caade5ad4f286985d3ba95cac363b2e0e8577e67bdb46f13147404c469cd1ba79bf41387993f85d16e288c75df144194470c66f9f49cb969da34fe4872501d208d0201074b1dfb12b8db23c207b3614ad475f1c049bca76a07f0f8cdbbae8acc5703303fbf75d9ce1bd209cc287b78d8c96c1c3d294ccaffdc99a7b8c8235a245b4da2e08efb6d053f58bbcbe3eb3fcf85e3ad06f65cb17fd2fa5345a263697212bf990de4c59af2a188dc69d6eaeee14147f310ced6c123b341453117d3c5f812a8982179e151c6292ac5a2c0fe4e2c823a3fbf55c55eec6bbb803965bf86c1682ee57cb2b3e1c2e55bda66cc7f49fc9c4e74441d4a429d2f2e956781ded9000725ba59ed8b45634b5b4a15f99a58140be56a99a585fc9c5939ed66990b6df48ce582692f47d801699301a8819fc6b1fd13ca2c270e5e5ca25db6b877612cb938b4809e9ee01df8956940bc55720802884d9b8ae76622856c81b10b2831fe2fb3e9c8bbdf4ed08fc3e755a9498a894d581041a05bd189677cfe7ce50dca6f3ae9e83a25a3291005b806e9a08a7be797defbd3c338cafba3bc8702e0f5199e2bf45f09001292a1f4049422b0318913b80082ae33160a9b0aed21d92240a468dadf723e5571fd1a2110fdc0617f4e05c43029aad633dcf0279eb0c2e361616fbf507bd2fc3978a7cd6dd2534aa2c194973ddd092629574d6caa0335d1bf96d1ff40ff4db37cb68407b1edfbf2f11ef5e05062481f9ab3be407ce2651bf94719ede8218a3449853cd86ba73a56765e0c7d569c91351d59825bdf1a58cae800cac4500a45a26f5aa6776255c95bc0737f172d11b24ccd08bc9fba8faf62fdd42b22fc40a63b749a1a801afd67af7ed797f3876d9016032ed4277904aa0587e927ee83ed3f907527d95e58b5b03a36f1a58f59b4ddf64c5de8e29e70b7bb96eb32ba60bc5bd1071ffff7433de8c827d3e731061b4a49e1061ed0e8d788343e385a1d52c830d4713a111d0a986c0c3c6c86e71c5b10d2e1643da3d89316165b8639485c672180f024aa9d19db6c679d57d347f5b81fdd5ceb5bc72718347ed4988152b0e55afad3bfd6832b0aca1c150cb00d924ef04e19a26e55492373fbd02c111e61bad81f7d7c749d4320a4dffd83a345b0082f10da993514087c05b49e193d4c3aba65e8660f650b46a20abe187136777533e93887ca9dd1f530f2e2be5a3a890a07ac4c9fc9c591b5221165b43a69be0bd905a0d5050e3a69792193507d9489d125536165ab09f6b65c53b74033737a028b2015f6a7e33a04b78568d82d38070834cdf533be52f82131e85b91a5e3f547fce07e7d094c264f11fd673776dc27c15e15553c949d230fed8271d940ebe03c31be00ccd9a6067decb6c54838174eaf0a8a5cd7c42371b203a00fc63864c5185480492e379ec0fe76cd412ee0ade4bb880710c129d9acadcee943cce7850171623114bc3d25d533f0c167f0489c5e6940adc5d9363e7b3db828ff06b3ec3d211cf098b63eeec8f9c637a0ee0fb35e2762575ca965d6b6d5014af527d1c67629a26e6d501eb903d2408f2dcf1a45e3896159024ff2369c123888814b0117a87ba0c5845ec895038bdccabdce087987c0202eb318cbcd8e7ad589adb2d474014f738e4f8f513451de79b9d84cf6606656798f65419b130b757912019a17073b25df1304ff77f394ddea420ca26cd1d7bd92da4ece4a589371dd3a5e0f2a6b2db7a12fb4a5ca3fa95893d6477e0c61d1ccc19fb8a2a467266de47212ede3ee9745738beebddf69dfdf0baac3f3c0cb400f0280696133704ab3dcaf1520c63e3c55da729f0c5ce2034cf87c8dbda261983fb0409edb0878df600c50690349e9f7f8972c6dd5792d227147259af576d6166ffc5f2d5fdee36afd9d96212f60431b3123e7299e4e220d5f50563833fbf51fc609e9f341a7caec19a90bc33443a21ec66e72b4f8409bfc0fe844fc9d7b3b56a1233937c37e4894bf8ed976d25afa43f78b8b8dc6edc2808a44d1215d464ec0fa428e0d7a875813ae9aa1ed75c1e3c5f18335539af2983d632fccaa1ddaef9ea150b3ebaffcd91fa0286886955aa12eb5250db874fdaf795dc789aa2214fa454f1ef4cef43eaa15a6112030b7b360367dae42113df0393ff10b15f9c79a09b05ba919b1bacc4046fd3a658a4b3f6eff92006b82c8e8ae494f4b4f55c92f9eef22fa08fe7c1e2bfe228d43f7387d27dadd2036d27a25f3171447743ea44d5c16a229df9934f34f7be4190320ee36ec2c4cb2a079c0032411b59b18ddaaefbaa25be502f2a566f3b0346646999cb260f798b38731bc8c8b462ce6f694c15c7fa8ee95871005b9c10220084cf728595af4671faa7fd5d00f8789c2f125679ab2df0a28ede93a524512c6aee57bce97567ac22476d4ff9e41bfc2aed4d29d7671b0fbd0d59664d3432aba7c7779227eef71f9253d9c22849acd07bf0074718afa8de816dc7f4c6ad14a47c183e1988aff682b504251879db529dfd7488ebe2496dd0822aef49cf5abecaeeee9d67e4e68de86da76889e696545e756fe6d83ee3b98e0859bc079502d5e3b4c6f8ecdca9384e9eefc368fc852c77b8e11a9f9bf18e734e884d253fd9df7898e35fca508faaf814eb0e291988f9b6c07d4cb4d344ba74485ddc13329ef90fcacbf08fdcd738294ff0f9b155fe09c1be10ed307</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>随笔，杂项</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU  Autotools</title>
    <url>/2020/01/29/Autotools/</url>
    <content><![CDATA[<h3 id="GNU-Autotools-第一部分"><a href="#GNU-Autotools-第一部分" class="headerlink" title="GNU Autotools 第一部分"></a>GNU Autotools 第一部分</h3><p><strong>GNU 构建系统</strong></p>
<p><strong>概述:</strong><br>autotools存在的目的就是用于生成makefile，从而实现降低makefile的维护难度与开发难度<br>autotools是一个工具集，它包含了一下程序<br>aclocal<br>autoscan<br>autoconf<br>autoheader<br>automake</p>
<hr>
<p><strong>aclocal</strong><br>aclocal(automake)<br>根据已安装的宏，用户定义宏和acinclude.m4文件中的宏将configure.ac文件所需要的宏集中定义到文件aclocal.m4文件中<br>aclocal由perl脚本所编写，定义为 <code>aclocal - create aclocal.m4 by scanning configure.ac</code></p>
<hr>
<p><strong>autoscan</strong><br>autoscan(autoconf)<br>用于扫描源代码以搜寻普通的可移植性问题，如检查编译器，库，头文件等<br>从而生成文件configure.scan，它是configure.ac的原型之一</p>
<hr>
<p><strong>autoheader</strong><br>autoheader(autoconf)<br>根据configure.ac中的某些宏，运行m4,<br>如ccp宏定义则声称config.h.in</p>
<hr>
<p><strong>Automake</strong><br>automake将makefile.am中定义的结构建立起makefile.in，然后configure脚本将生成的makefile.in文件转换为makefie<br>如果在configure.ac中有特殊定义的宏，比如AC-PROG-LIBTOOL,automake会调用libtoolize，否则产生config.guess和config.sub</p>
<p>官方网站:<a href="https://www.gnu.org/software/automake/" target="_blank" rel="noopener">https://www.gnu.org/software/automake/</a><br><a href="https://www.gnu.org/software/automake/" target="_blank" rel="noopener">跳转</a></p>
<p>官方文档:<code>https://www.gnu.org/software/automake/manual/automake.html</code><br><a href="https://www.gnu.org/software/automake/manual/automake.html" target="_blank" rel="noopener">跳转</a></p>
<p>获取方式:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ftp: ftp:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;automake&#x2F; </span><br><span class="line">http: http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;automake&#x2F;</span><br></pre></td></tr></table></figure>
<p>帮助指令: <code>automake --help</code>与<code>man automake</code></p>
<hr>
<p><strong>Autoconf</strong><br>作用是将configure.ac中的宏展开，生成configure脚本/shell脚本，此过程中可能需要用到aclocal.m4中定义的宏<br>以达成自动配置软件源代码包</p>
<p>官方网站: <code>https://www.gnu.org/software/autoconf/autoconf.html</code><br><a href="https://www.gnu.org/software/autoconf/autoconf.html" target="_blank" rel="noopener">跳转</a></p>
<p>官方文档：<code>https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/autconf.html</code><br><a href="https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/autoconf.html" target="_blank" rel="noopener">跳转</a></p>
<p>获取方式: </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ftp: ftp:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;autoconf&#x2F;</span><br><span class="line">http: http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;autoconf&#x2F;</span><br><span class="line">git: git clone http:&#x2F;&#x2F;git.sv.gnu.org&#x2F;r&#x2F;autoconf.git</span><br><span class="line">apt-get: apt-get install autoconf*</span><br></pre></td></tr></table></figure>
<p>帮助指令: <code>autoconf --help</code>与<code>man autoconf</code></p>
<hr>
<p><strong>Autotools</strong></p>
<p>获取方式:<br><code>apt-get install autotools</code></p>
<p>以上五个程序皆可称为M4宏的扩展包,文件处理的步骤与顺序，逻辑关系，应用等深度刨析第一部分里不做赘述<br>以上内容仅为主观理解，仅供参考</p>
<hr>
]]></content>
      <categories>
        <category>软件</category>
        <category>GNU</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>GNU M4</title>
    <url>/2020/01/29/M4/</url>
    <content><![CDATA[<h3 id="GNU-M4-第一部分"><a href="#GNU-M4-第一部分" class="headerlink" title="GNU M4 第一部分"></a>GNU M4 第一部分</h3><p><strong>GNU 宏处理器</strong></p>
<p><strong>概述:</strong><br>GNU M4是一种宏处理器<br>因为基于POSIX标准，所以兼容大部分SVR4<br>SVR4: UNIX操作系统的一种内核标准<br>其主要作用于GNU Autoconf project，通常是在安装autoconf时需要m4依赖才会安装它</p>
<p>获取途径:<br>git: <code>git clone http://git.savannah.gnu.org/r/m4.git</code><br>http: <code>http://ftp.gnu.org/gnu/m4</code><br>ftp: <code>ftp://ftp.gnu.org/gnu/m4</code><br>apt-get: <code>apt-get install m4-doc或m4*</code></p>
<hr>
<p><strong>学习途径</strong></p>
<p>官方文档:<br><code>https://www.gnu.org/software/m4/m4.html</code><br><a href="https://www.gnu.org/software/m4/m4.html" target="_blank" rel="noopener">跳转</a></p>
<p>M4 宏语言手册<br><code>http://mbreen.com/m4.html</code><br><a href="http://mbreen.com/m4.html" target="_blank" rel="noopener">跳转</a></p>
<p>GNU M4 社区<br><code>http://savannah.gnu.org/projects/m4/</code><br><a href="http://savanah.gnu.org/project/m4" target="_blank" rel="noopener">跳转</a></p>
<p>默认帮助文档<br><code>m4 --help与man m4</code></p>
<hr>
]]></content>
      <categories>
        <category>软件</category>
        <category>Debian GNU/Linux</category>
      </categories>
      <tags>
        <tag>GNU/Linux</tag>
        <tag>1.认识与概述</tag>
      </tags>
  </entry>
  <entry>
    <title>基于debian使用hexo框架-next主题搭建并配置博客</title>
    <url>/2020/01/28/%E5%9F%BA%E4%BA%8Edebian%E4%BD%BF%E7%94%A8hexo%E6%A1%86%E6%9E%B6-next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="对于debian的基本配置与hexo的安装"><a href="#对于debian的基本配置与hexo的安装" class="headerlink" title="对于debian的基本配置与hexo的安装"></a>对于debian的基本配置与hexo的安装</h3><p>apt源的设置与一些基本软件的配置和准备这里就不过多阐述了<br>先修改一下/etc/hosts内的所配置IP,保证机器能ping通github.com<br><code>vim /etc/hosts</code> 内添加 <code>192.30.253.113 github.com</code></p>
<p>接下来安装hexo所依赖的几个程序：npm，git，node.js<br><code>apt-get install npm*</code><br><code>apt-get install git*</code><br><code>apt-get install node.js*</code><br>安装完之后检查一下版本或者whereis一下看看所否健在<br>最后再安装hexo软件<br><code>npm install -g hexo-cli</code><br>安装完–version检查一下版本</p>
<hr>
<h3 id="hexo的基本操作"><a href="#hexo的基本操作" class="headerlink" title="hexo的基本操作"></a>hexo的基本操作</h3><p>hexo –help<br><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方中文文档与手册</a><br>hexo安装完毕后可以先进行一下测试<br>于任意目录下新建一个文件夹 <code>mkdir blog</code><br>进入文件夹后分别执行<code>hexo init,hexo g,hexo s</code><br>然后使用浏览器访问<u>localhost:4000</u>查看所否成功 </p>
<hr>
<h3 id="hexo链接github库"><a href="#hexo链接github库" class="headerlink" title="hexo链接github库"></a>hexo链接github库</h3><p>利用npm安装hexo部署程序/插件<br><code>npm install --save hexo-deployer-git</code><br><code>vim /*/blog/_config.yml</code><br>修改最下方的#deployment配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;你所建立的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>执行<code>hexo d</code>开始远程部署，其中需要用户输入仓库所在帐号的帐号和密码</p>
<hr>
<h3 id="hexo修改主题"><a href="#hexo修改主题" class="headerlink" title="hexo修改主题"></a>hexo修改主题</h3><p>这里推荐两个个人感觉生态最好的两个hexo主题-next与yilia<br>进入blog目录下直接执行克隆命令<br><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code><br>或<br><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code><br>此时的主题文件被存储于/blog/theme目录下<br><code>cd _condig.yml</code><br>修改#extensions中的theme，将原主题landscape修改为next或yilia</p>
<hr>
<h3 id="hexo安装搜索插件与RSS插件"><a href="#hexo安装搜索插件与RSS插件" class="headerlink" title="hexo安装搜索插件与RSS插件"></a>hexo安装搜索插件与RSS插件</h3><p>添加并配置RSS<br><code>npm install hexo-generator-feed --save</code><br>修改hexo配置文件为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">        plugins:</span><br><span class="line">                hexo-generator-feed</span><br><span class="line">                #Feed Atom</span><br><span class="line">        feed:</span><br><span class="line">                type: atom</span><br><span class="line">                path: atom.xml</span><br><span class="line">                limit: 20</span><br></pre></td></tr></table></figure>
<p>对主题文件添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">feed:</span><br><span class="line">        type: rss2</span><br><span class="line">        path: rss2.xml</span><br><span class="line">        limit: 5</span><br><span class="line">        hub:</span><br><span class="line">                content: &#39;true&#39;</span><br></pre></td></tr></table></figure>

<p>添加并配置search-搜索<br><code>npm install hexo-generator-searchdb --save</code><br>修改hexo配置文件为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 搜索</span><br><span class="line">  search:</span><br><span class="line">          path: search.xml</span><br><span class="line">          field: post</span><br><span class="line">          format: html</span><br><span class="line">          limit: 10000</span><br></pre></td></tr></table></figure>
<p>修改主题配置文件为<br>找到local search，然后把enable设置为true</p>
<p>其余类似于菜单，头像，链接与装饰的配置可以<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">参考官方文档</a></p>
<hr>
<h3 id="关于文章的书写格式与基本要求"><a href="#关于文章的书写格式与基本要求" class="headerlink" title="关于文章的书写格式与基本要求"></a>关于文章的书写格式与基本要求</h3><p>hexo文章书写的语法都来自于Markdown<br>Markdown所一种可以使用普通文本编辑器编写的标记语言<br>目的是通过简单的语法来让普通文本的内容具有一定的格式<br>详情参考: <a href="https://markdown-zh.readthedocs.io/en/latest" target="_blank" rel="noopener">Markdown中文文档</a></p>
<hr>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
