<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UNIT</title>
  
  <subtitle>不精之精，而至纯粹</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://unit-serow.github.io/"/>
  <updated>2020-02-18T11:59:25.361Z</updated>
  <id>https://unit-serow.github.io/</id>
  
  <author>
    <name>serow</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MBR-1</title>
    <link href="https://unit-serow.github.io/2020/02/18/MBR-1/"/>
    <id>https://unit-serow.github.io/2020/02/18/MBR-1/</id>
    <published>2020-02-18T10:16:09.000Z</published>
    <updated>2020-02-18T11:59:25.361Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 19:59:58 GMT+0800 (中国标准时间) --><h2 id="硬盘结构-主引导扇区-1-MBR-1"><a href="#硬盘结构-主引导扇区-1-MBR-1" class="headerlink" title="硬盘结构-主引导扇区-1/MBR-1"></a>硬盘结构-主引导扇区-1/MBR-1</h2><ul><li>以下内容中的MBR特指主引导记录，而不泛指主引导扇区</li><li>主引导扇区泛指以下的所有内容</li><li>磁盘-机械硬盘概念</li></ul><h3 id="MBR主引导记录-master-boot-record"><a href="#MBR主引导记录-master-boot-record" class="headerlink" title="MBR主引导记录(master boot record)"></a>MBR主引导记录(master boot record)</h3><ul><li><p>计算机访问硬盘时所必须读取的首个分区</p></li><li><p>用于记录本身的相关信息与硬盘各个分区的大小及位置信息</p></li><li><p>还包含了基本数据结构的信息</p></li><li><p>硬盘上的三维地址(柱面，磁头，扇区)=(0,0,1)</p></li><li><p>开头的446字节内容</p><blockquote><p>后4个16个字节为磁盘分区表(DPT)<br>结束标志字:2字节结束标准(55AA)</p></blockquote></li><li><p>对于硬盘而言，一个扇区可能的字节数为128×2n(n=0,1,2,3)</p><blockquote><p>大多情况下，取n=2，即一个扇区(sector)的大小为512字节</p></blockquote></li></ul><p><strong>MBR主引导记录构成:</strong></p><ul><li>启动代码<blockquote><p>主引导记录最开头的第一阶段是引导代码<br>其中的硬盘引导程序的主要作用是检查分区表是否正确<br>同时在系统硬件完成自检后将控制权交给硬盘上的引导程序(如GNU GRUB)<br>此阶段不依赖任何操作系统<br>启动代码可以改变，以用于实现多系统引导</p></blockquote></li></ul><hr><h3 id="磁盘分区表-DPT"><a href="#磁盘分区表-DPT" class="headerlink" title="磁盘分区表(DPT)"></a>磁盘分区表(DPT)</h3><ul><li><p>磁盘分区表占据主引导扇区的64个字节(偏移01BEH–偏移01FDE)</p></li><li><p>可对四个分区的信息进行描述，其中每个分区的信息占据16个字节</p></li><li><p>字节定义:参考硬盘分区结构信息</p></li><li><p>示例:</p></li><li><p>假设某一分区在硬盘分区表的信息:</p><blockquote><p><code>80 01 01 00 0B FE BF FC 3F 00 00 00 7E 86 BB 00</code></p></blockquote></li><li><p>说明:</p><blockquote><p>最前面的”80”是一个分区的激活标志，表示系统可引导<br>“01 01 00”表示分区开始的磁头号为1，开始的扇区号为1，开始的柱面号为0<br>“0B”表示分区的系统类型是FAT32，其他比较常用的有04(FAT16)，07(NTFS)<br>“FE BF FC”表示分区结束的磁头号为254，分区结束的扇区号为63、分区结束的柱面号为764<br>“3F 00 00 00”表示首扇区的相对扇区号为63(小端序)<br>“7E 86 BB 00”表示总扇区数为12289662(小端序)</p></blockquote></li><li><p>对于大于8.4G的现代硬盘，CHS已经无法表示, BIOS使用LBA模式</p><blockquote><p>对于超出的部分，CHS值通常设为0xFEFFFF，并加以忽略<br>直接使用Offset 0x08-0x0c的4字节相对值，再进行内部转换</p></blockquote></li><li><p>结束标志字55，AA(偏移1FEH－偏移1FFH)</p><blockquote><p>最后两个字节是检验主引导记录是否有效的标志</p></blockquote></li></ul><hr><h3 id="主引导扇区读取逻辑-流程"><a href="#主引导扇区读取逻辑-流程" class="headerlink" title="主引导扇区读取逻辑(流程):"></a>主引导扇区读取逻辑(流程):</h3><ol><li>BIOS加电/引导自检(Power On Self Test – POST)<blockquote><p>BIOS执行内存地址为FFFF:0000H处的跳转指令，跳转到固化在ROM中的自检程序处，对系统硬件(包括内存)进行检查</p></blockquote></li><li>读取主引导记录(MBR)<blockquote><p>当BIOS检查到硬件正常并与CMOS中的设置相符后，按照CMOS中对启动设备的设置顺序检测可用的启动设备<br>BIOS将相应启动设备的第一个扇区(也就是MBR扇区)读入内存地址为0000:7C00H处</p></blockquote></li><li>检查0000:7DFEH-0000:7DFFH(MBR的结束标志位)是否等于55AAH，若不等于则转去尝试其他启动设备<blockquote><p>如果没有启动设备满足要求则显示”NO ROM BASIC”然后死机</p></blockquote></li><li>检测到有启动设备满足要求后，BIOS将控制权交给相应启动设备<blockquote><p>启动设备的MBR将自己复制到0000:0600H处，然后继续执行</p></blockquote></li><li>根据MBR中的引导代码启动引导程序(如GNU GRUB)</li></ol><ul><li>BIOS不仅检查0000:7DFEH-0000:7DFFH（MBR的结束标志位）是否等于55AAH，往往还对磁盘是否有写保护、主引导扇区中是否存在活动分区等进行检查</li><li>如果发现磁盘有写保护，则显示磁盘写保护出错信息</li><li>如果发现磁盘中不存在活动分区，则显示类似如下的信息“Remove disk or other media Press any key to restart”</li></ul><hr><h3 id="硬盘分区简述"><a href="#硬盘分区简述" class="headerlink" title="硬盘分区简述:"></a>硬盘分区简述:</h3><ul><li><p>MBR(主引导记录)只包含了64个字节的DPT(磁盘分区表)</p><blockquote><p>因为每个分区需要占有16个字节，所以对于MBR型分区结构的硬盘，最多只能识别4个主要分区(Primary partition)<br>如果此时想要得到4个以上的主要分区，就需要引出拓展分区了<br>拓展分区被归类为主分区(是主分区的一种)<br>但与主分区在理论上不同的是拓展分区可以被划分为无数个逻辑分区</p></blockquote></li><li><p>拓展分区</p><blockquote><p>拓展分区中的逻辑驱动器的引导记录是链式的<br>每个逻辑分区都有一个扩展引导记录(EBR/结构类似于MBR)<br>其中表的第一项指向逻辑分区本身的引导扇区<br>第二项指向下一个逻辑驱动器的EBR，分区表的第三，第四项没有用到</p></blockquote></li><li><p>windows操作系统在一般情况下，只会划分一个主分区用于存储操作系统，其余全部划入拓展分区</p></li><li><p><code>[1-主分区]-[3-逻辑分区-&gt;N-逻辑分区]</code></p></li></ul><hr><p><strong>MBR分区表与GPT分区表</strong></p><ul><li><p>MBR分区表</p><blockquote><p>MBR磁盘分区样式支持的最大卷为2TB(Terabytes)，并且最多四个主分区(或3个主分区，1个扩展分区和无限制的逻辑驱动器)</p></blockquote></li><li><p>GPT分区表</p><blockquote><p>GPT磁盘分区样式在理论上最大支持128个分隔，一个分割最大18 EB(Exabytes)<br>GPT分区磁盘有备份分区表，用以提高分区数据结构的完整性<br>如果硬盘太大则必须改用GPT</p></blockquote></li><li><p>操作系统限制问题</p><blockquote><p>分区表本身需要占有一定空间，规划硬盘时留给分区表的空间决定了最多可以有多少个分区<br>IA-64版Windows限制最多有128个分区，同时这也是EFI规定的分区表最小尺寸<br>GPT与MBR在分区的磁盘不同点是GPT将至关重要的平台操作系统位于分区，而非位于非分区或隐藏分区<br>在UEFI系统上，通常是通过ESP分区中的EFI应用程序文件来引导GPT硬盘上的操作系统，而不是活动主分区上的引导程序</p></blockquote></li><li><p>系统分区可以设为活动主分区，但不是必须的，需要根据引导程序而定</p></li><li><p>一个硬盘的分区个数还要受到分区大小的限制，因为硬盘是按照柱面分区的：一个分区至少要占一个柱面</p></li><li><p>现在的硬盘结构已经和老式硬盘有了很大区别，其寻址结构也不再是CHS寻址，所以这里的柱面大小不同于相关软件显示的柱面大小</p></li><li><p>对于物理结构上有n个面的硬盘，其分区空间的最小值为:<code>n*扇区/磁道*512字节</code></p></li><li><p>根据16字节分区表的结构:当前分区的扇区数用4个字节表示，前面各分区扇区数的总和也是4个字节，而<code>232*512 ＝ 2 199 023 255 552 Byte</code></p></li></ul><hr><h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念:"></a>相关概念:</h3><ul><li>BIOS</li><li>UEFI</li><li>MBR</li><li>GPT-GUID/GPT<blockquote><p>GUID磁碟分割表<br>全局唯一标识分区表<br>是一个实体硬盘的分区表的结构布局的标准</p></blockquote></li><li>主分区/拓展分区/逻辑分区</li><li>磁盘/操作系统文件系统<blockquote><p>FAT/exFAT/NTFS</p></blockquote></li><li>RAM</li><li>ROM</li><li>BOOT</li><li>GURB</li><li>CHS<blockquote><p>柱面-磁头-扇区(Cylinder-head-sector)<br>是早期对硬盘驱动器的每一个物理数据块进行编址的一种方法<br>就软盘驱动器而言，可对同一磁盘介质进行低级格式化而得到不同的容量</p></blockquote></li><li>LBA</li><li>EFI<blockquote><p>可扩展固件接口标准</p></blockquote></li><li>Buffer<blockquote><p>硬盘缓存</p></blockquote></li><li>硬盘数据接口<blockquote><p>ATA/SATA/SCSI/SAS/FC/电源接口</p></blockquote></li><li>逻辑结构(机械硬盘)</li><li>物理结构(机械硬盘)</li><li>机械/固态/混合/硬盘/软盘</li></ul><hr><h3 id="相关内容补充"><a href="#相关内容补充" class="headerlink" title="相关内容补充:"></a>相关内容补充:</h3><p><strong>硬盘分区结构信息</strong></p><table><thead><tr><th align="left">偏移</th><th align="left">长度(字节)</th><th align="left">意义</th></tr></thead><tbody><tr><td align="left">00H</td><td align="left">1</td><td align="left">分区状态:00–&gt;非活动分区；80–&gt;活动分区(其它数值没有意义)</td></tr><tr><td align="left">01H</td><td align="left">1</td><td align="left">分区起始磁头号(HEAD)，用到全部8位</td></tr><tr><td align="left">02H</td><td align="left">2</td><td align="left">分区起始扇区号(SECTOR)，占据02H的位0－5；该分区的起始磁柱号(CYLINDER)，占据02H的位6－7和03H的全部8位</td></tr><tr><td align="left">04H</td><td align="left">1</td><td align="left">文件系统标志位</td></tr><tr><td align="left">05H</td><td align="left">1</td><td align="left">分区结束磁头号(HEAD)，用到全部8位</td></tr><tr><td align="left">06H</td><td align="left">2</td><td align="left">分区结束扇区号(SECTOR)，占据06H的位0－5；该分区的结束磁柱号(CYLINDER)，占据06H的位6－7和07H的全部8位</td></tr><tr><td align="left">08H</td><td align="left">4</td><td align="left">分区起始相对扇区号</td></tr><tr><td align="left">0CH</td><td align="left">4</td><td align="left">分区总的扇区数</td></tr></tbody></table><hr><p><strong>标准MBR结构</strong></p><p><strong>准确地址长度与描述:</strong></p><table><thead><tr><th align="center">Hex</th><th align="center">Oct</th><th align="center">Dec</th><th align="center">描述</th><th align="center">长度(字节)</th></tr></thead><tbody><tr><td align="center">0000</td><td align="center">0000</td><td align="center">0</td><td align="center">代码区</td><td align="center">440(最大446)</td></tr><tr><td align="center">01B8</td><td align="center">0670</td><td align="center">440</td><td align="center">选用磁盘标志</td><td align="center">4</td></tr><tr><td align="center">01BC</td><td align="center">0674</td><td align="center">444</td><td align="center">一般为空值; 0x0000</td><td align="center">2</td></tr><tr><td align="center">01BE</td><td align="center">0676</td><td align="center">446</td><td align="center">标准MBR分区表规划(四个16 byte的主分区表入口)</td><td align="center">64</td></tr><tr><td align="center">01FE</td><td align="center">0776</td><td align="center">510</td><td align="center">55h-(MBR有效标志:0x55AA)</td><td align="center">1</td></tr><tr><td align="center">01FF</td><td align="center">0777</td><td align="center">511</td><td align="center">AAh-(MBR有效标志:0x55AA)</td><td align="center">1</td></tr></tbody></table><ul><li>MBR总大小:446字节+64字节+2字节=512字节(长度)</li></ul><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h3><ul><li><p>CN-Linux引导程序<a href="https://www.ibm.com/developerworks/cn/linux/l-linuxboot/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://www.ibm.com/developerworks/cn/linux/l-linuxboot/</code></p></blockquote></li><li><p>CN-FAT详解-1<a href="https://web.archive.org/web/20090725091233/http://www.raid-recovery.org/Article/sjhfdoc/200404/1.html" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://web.archive.org/web/20090725091233/http://www.raid-recovery.org/Article/sjhfdoc/200404/1.html</code></p></blockquote></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 19:59:58 GMT+0800 (中国标准时间) --&gt;&lt;h2 id=&quot;硬盘结构-主引导扇区-1-MBR-1&quot;&gt;&lt;a href=&quot;#硬盘结构-主引导扇区-1-MBR-1&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="硬件" scheme="https://unit-serow.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="数据恢复" scheme="https://unit-serow.github.io/categories/%E7%A1%AC%E4%BB%B6/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Debian GNU/Linux-1</title>
    <link href="https://unit-serow.github.io/2020/02/18/Debian-1/"/>
    <id>https://unit-serow.github.io/2020/02/18/Debian-1/</id>
    <published>2020-02-17T18:49:28.000Z</published>
    <updated>2020-02-17T18:55:32.879Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 02:55:37 GMT+0800 (中国标准时间) --><h3 id="Debian-GNU-Linux-1"><a href="#Debian-GNU-Linux-1" class="headerlink" title="Debian GNU/Linux-1"></a>Debian GNU/Linux-1</h3><ul><li>通用软件包管理与操作的解决方案</li><li>一:<code>apt-get</code>一条龙的全自动化解决</li><li>二:<code>wget/curl</code>获取-&gt;<code>dpkg/autoconf</code>安装-&gt;设置环境变量-&gt;设置别名</li><li><code>apt-get/dpkg/wget/curl</code>都可用户依赖解决</li></ul><hr><ul><li>目录:</li></ul><ol><li>apt-get</li><li>curl</li><li>wget</li><li>dpkg</li><li>autoconf-configure/make</li><li>env/export</li><li>set/declare</li><li>alias</li></ol><hr><h3 id="Debian内软件获取与卸载方法简述"><a href="#Debian内软件获取与卸载方法简述" class="headerlink" title="Debian内软件获取与卸载方法简述"></a>Debian内软件获取与卸载方法简述</h3><p><strong>APT-GET包管理器参数简述</strong></p><ul><li><p>从镜像源仓库拉取软件包并于本地自动配置</p><blockquote><p><code>$apt-get install package_name</code></p></blockquote></li><li><p>联网解决或清理依赖关系</p><blockquote><p><code>$apt-get install -f</code></p></blockquote></li><li><p>刷新本地镜像源仓库索引</p><blockquote><p><code>$apt-get updata</code></p></blockquote></li><li><p>更新本地镜像源仓库与所有可更新软件包</p><blockquote><p><code>$apt-get upgrade</code></p></blockquote></li><li><p>查看软件包依赖</p><blockquote><p><code>$apt-get show</code><br><code>$apt-cache show depends package_name</code></p></blockquote></li><li><p>查看仓库内软件包列表</p><blockquote><p><code>$apt-get search</code><br><code>$apt-cache search package_name</code></p></blockquote></li><li><p>卸载软件包及其配置文件</p><blockquote><p><code>$apt purge/apt remove</code><br><code>$apt-get -purge remove package_name</code></p></blockquote></li><li><p>删除软件包备份</p><blockquote><p><code>$apt-get clean</code></p></blockquote></li><li><p>镜像源目录:</p><blockquote><p><code>/etc/apt/sources.list</code></p></blockquote></li><li><p>还有很多用于包管理与镜像管理的软件与程序</p><blockquote><p>conda,npm等等…</p></blockquote></li><li><p>CentOS体系</p><blockquote><p>yum/rpm</p></blockquote></li></ul><hr><h3 id="URL拉取工具"><a href="#URL拉取工具" class="headerlink" title="URL拉取工具"></a>URL拉取工具</h3><ul><li>拉取所选网页内所有资源，多用于直接从远端仓库拉源码至本地</li></ul><p><strong>CURL</strong></p><blockquote><p><code>$curl [URL(选项)] [参数(options)]</code></p></blockquote><p><strong>WGET</strong></p><blockquote><p><code>$wget [URL(选项)] [参数(options)]</code></p></blockquote><ul><li>参数简述:<blockquote><p><code>-r</code>下载整个网站<br><code>-c</code>断点续传<br><code>-i</code>批量下载<br><code>--help/man</code></p></blockquote></li></ul><hr><h3 id="Dpkg"><a href="#Dpkg" class="headerlink" title="Dpkg"></a>Dpkg</h3><ul><li><p>用于管理Debian包的工具</p></li><li><p>安装已有包</p><blockquote><p><code>$dpkg -i package_name.deb</code></p></blockquote></li><li><p>安装目录下的所有包</p><blockquote><p><code>$dpkg -R /文件目录</code></p></blockquote></li><li><p>查看软件包安装位置</p><blockquote><p><code>$dpkg -L 软件包</code></p></blockquote></li><li><p>卸载一个包及其配置信息</p><blockquote><p><code>$dpkg -P package_name</code></p></blockquote></li></ul><blockquote><p><code>--help/man</code></p></blockquote><hr><h3 id="源码包安装与管理"><a href="#源码包安装与管理" class="headerlink" title="源码包安装与管理"></a>源码包安装与管理</h3><p><strong>autotools</strong></p><ul><li><p>保证下载来的源码包已经有makefile和由autoconf生存的configure脚本</p></li><li><p>根据makefile运行configure脚本并选择安装路径</p><blockquote><p><code>$./configure --prefix=/安装目录</code></p></blockquote></li><li><p>用make进行源码编译</p><blockquote><p><code>$make</code></p></blockquote></li><li><p>使用make安装</p><blockquote><p><code>$make install</code></p></blockquote></li><li><p>还有很多参数<code>--help</code>或<code>man</code></p></li><li><p>在source内执行make uninstall卸载软件包</p></li><li><p>正常情况下source内的makefile都能写uninstall</p></li><li><p>没有makefile的话看makefile的安装项，挨个删除</p></li><li><p>如果连source被删了的话，那没法了</p></li></ul><hr><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><ul><li><p>tar -zxvf xxx.tar</p></li><li><p>zip xxx.zip</p></li><li><p>gzip xxx.gzip</p></li><li><p>解压没什么好说的</p></li></ul><hr><h3 id="环境变量与自定义变量"><a href="#环境变量与自定义变量" class="headerlink" title="环境变量与自定义变量"></a>环境变量与自定义变量</h3><p><strong>配置环境变量与自定义变量(PATH变量/Shell变量)</strong></p><ul><li>系统变量/用户变量</li></ul><p><strong>PATH变量</strong></p><ul><li><p>查看PATH变量列表(内容)</p><blockquote><p><code>$echo $PATH</code></p></blockquote></li><li><p>PATH变量的默认优先于用户的可执行程序</p></li><li><p>用export工具向PATH内添加内容</p><blockquote><p><code>export PATH=$PATH:/可执行文件所在目录/</code></p></blockquote></li><li><p>此时添加的是永久变量</p></li><li><p>export命令基本格式</p><blockquote><p><code>export [-fnp][变量名称]=[变量设置值]</code></p></blockquote></li><li><p>可执行文件目录说明:</p><blockquote><p>可执行文件多存于<code>/usr/local/bin</code>与<code>/usr/bin</code>内<br><code>/usr/local/bin</code>优先于<code>/usr/bin</code><br><code>/usr/bin</code>目录用于存放系统预装的可执行程序文件<br><code>/usr/local/bin</code>目录用于存放用户的可执行的文件，系统升级会覆盖此目录</p></blockquote></li></ul><hr><ul><li><p>用set工具添加环境变量与自定义变量</p></li><li><p>set用于添加session(会话)级别环境变量</p></li><li><p>语句形式</p><blockquote><p><code>set PATH=/usr/local/xxx/bin</code></p></blockquote></li><li><p>或用declare定义新变量:</p><blockquote><p><code>declare 变量名=&#39;变量值&#39;</code></p></blockquote></li></ul><hr><p><strong>env/export/set/declare简述</strong></p><ul><li><p>env 和 export 显示环境变量</p><blockquote><p>env 显示系统级别的环境变量，不显示自定义<br>export 功能与env相同，只不过会根据变量名进行排序</p></blockquote></li><li><p>set 和 declare 显示环境变量和自定义变量</p><blockquote><p>set 显示用户级别的环境变量，显示自定义<br>declare 显示所有级别的变量</p></blockquote></li><li><p>export用于管理env，set用于管理declare</p></li><li><p>set 用来显示本地变量</p></li><li><p>env 用来显示环境变量</p></li><li><p>export 用来显示和设置环境变量</p></li><li><p>set 显示当前shell的变量，包括当前用户的变量</p></li><li><p>env 显示当前用户的变量</p></li><li><p>export 显示当前导出成用户变量的shell变量</p></li></ul><hr><ul><li>清除用户级别环境变量<blockquote><p><code>unset 变量名</code></p></blockquote></li></ul><p><strong>变量所在目录</strong></p><ul><li><p>普通用户</p><blockquote><p><code>~/home/.bashrc</code></p></blockquote></li><li><p>root用户</p><blockquote><p><code>~/.bashrc</code><br><code>~/etc/profile</code></p></blockquote></li><li><p>权限足够时可以直接对其进行修改与管理</p></li><li><p>其他概念</p></li><li><p><code>~/.bashrc</code></p></li><li><p><code>~/.bash_profile</code></p></li><li><p><code>~/etc/profile</code></p></li><li><p><code>~/etc/environment</code></p></li></ul><p><strong>usr全称:Unix System Resource</strong></p><hr><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><ul><li><p>使用alias工具对指令设置别名</p></li><li><p>基本格式:</p><blockquote><p><code>$alias[别名]=[指令名称]</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 02:55:37 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;Debian-GNU-Linux-1&quot;&gt;&lt;a href=&quot;#Debian-GNU-Linux-1&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="GNU" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/GNU/"/>
    
    
      <category term="GNU/Linux" scheme="https://unit-serow.github.io/tags/GNU-Linux/"/>
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-4</title>
    <link href="https://unit-serow.github.io/2020/02/17/MongoDB-4/"/>
    <id>https://unit-serow.github.io/2020/02/17/MongoDB-4/</id>
    <published>2020-02-17T15:52:29.000Z</published>
    <updated>2020-02-17T15:55:34.558Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 17 2020 23:55:39 GMT+0800 (中国标准时间) --><h3 id="MongoDB-4"><a href="#MongoDB-4" class="headerlink" title="MongoDB-4"></a>MongoDB-4</h3><ul><li>剩余概念补充-1</li></ul><p><strong>概念简述:</strong></p><ol><li>管道</li><li>复制原理(创建副本集)</li><li>分片技术(集群)</li></ol><hr><ol><li><strong>管道(聚合)</strong></li></ol><ul><li>管道在Unix和Linux中一般用于将当前命令的输出结果作为下一个命令的参数</li><li>MongoDB的聚合管道将MongoDB文档在一个管道处理完毕后将结果传递给下一个管道处理</li><li>管道操作是可以重复的</li><li>表达式：处理输入文档并输出</li><li>表达式是无状态的，只能用于计算当前聚合管道的文档，不能处理其它的文档</li></ul><p><strong>常用聚合框架(模式)一览:</strong></p><table><thead><tr><th align="left">框架</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">$project</td><td align="left">修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档</td></tr><tr><td align="left">$match</td><td align="left">用于过滤数据，只输出符合条件的文档，$match使用MongoDB的标准查询操作</td></tr><tr><td align="left">$limit</td><td align="left">用来限制MongoDB聚合管道返回的文档数</td></tr><tr><td align="left">$skip</td><td align="left">在聚合管道中跳过指定数量的文档，并返回余下的文档</td></tr><tr><td align="left">$unwind</td><td align="left">将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值</td></tr><tr><td align="left">$group</td><td align="left">将集合中的文档分组，可用于统计结果</td></tr><tr><td align="left">$sort</td><td align="left">将输入文档排序后输出</td></tr><tr><td align="left">$geoNear</td><td align="left">输出接近某一地理位置的有序文档</td></tr></tbody></table><hr><ol start="2"><li>MongoDB复制原理(创建副本集)</li></ol><ul><li><p>MongoDB复制是将数据同步在多个服务器的过程</p></li><li><p>复制提供了数据的冗余备份，并在多个服务器上存储数据副本，提高了数据的可用性， 并可以保证数据的安全性</p></li><li><p>复制还允许从硬件故障和服务中断中恢复数据</p></li><li><p>复制作用:</p><blockquote><p>保障数据的安全性<br>数据高可用性<code>(24*7)</code><br>灾难恢复<br>无需停机维护(如备份，重建索引，压缩)<br>分布式读取数据</p></blockquote></li></ul><p><strong>MongoDB复制原理</strong></p><ul><li><p>mongodb的复制至少需要两个节点</p><blockquote><p>其中一个是主节点，负责处理客户端请求，其余的都是从节点，负责复制主节点上的数据</p></blockquote></li><li><p>mongodb各个节点常见的搭配方式为：一主一从、一主多从</p></li><li><p>主节点记录在其上的所有操作oplog，从节点定期轮询主节点获取这些操作</p><blockquote><p>然后对本地的数据副本执行这些操作，从而保证从节点的数据与主节点一致</p></blockquote></li><li><p>复制的逻辑结构简述:</p></li><li><p>客户端从主节点读取数据，在客户端写入数据到主节点时， 主节点与从节点进行数据交互保障数据的一致性</p><blockquote><p><code>Client Application-Write/Reads-&gt;Primary-Replication/Replication-&gt;Secondary/Secondary</code></p></blockquote></li></ul><hr><p><strong>MongoDB副本集设置</strong></p><ol><li>利用同一个MongoDB来做MongoDB主从模型</li><li>通过指定<code>--replSet</code>选项来启动mongoDB，<code>--replSet</code>基本语法格式如下:<blockquote><p><code>mongod --port &quot;PORT&quot; --dbpath &quot;YOUR_DB_DATA_PATH&quot; --replSet &quot;REPLICA_SET_INSTANCE_NAME&quot;</code></p></blockquote></li></ol><p><strong>参数说明:</strong></p><ol><li><code>REPLICA_SET_INSTANCE_NAME</code>为所选实例命名</li><li>指定MongoDB实例所处端口(端口号)</li><li>此时会启动并连接MongoDB服务</li><li>在Mongo客户端可以使用命令<code>rs.initiate()</code>来启动一个新的副本集</li><li>可以使用<code>rs.conf()</code>来查看副本集的配置</li><li>查看副本集状态执行<code>rs.status()</code>命令</li></ol><p><strong>副本集特征:</strong></p><ul><li><p>N 个节点的集群</p></li><li><p>任何节点可作为主节点</p></li><li><p>所有写入操作都在主节点上</p></li><li><p>自动故障转移</p></li><li><p>自动恢复</p></li><li><p>rs.add()方法用于添加副本集的成员</p></li><li><p>rs.add() 命令基本语法格式:</p><blockquote><p><code>rs.add(HOST_NAME:PORT)</code></p></blockquote></li></ul><ul><li><p>MongoDB中只能通过主节点将Mongo服务添加到副本集中</p><blockquote><p>判断当前运行的Mongo服务是否为主节点可以使用命令<code>db.isMaster()</code></p></blockquote></li><li><p>MongoDB的副本集与常见的主从有所不同</p><blockquote><p>主从在主机宕机后所有服务将停止<br>而副本集在主机宕机后<br>副本会接管主节点成为主节点<br>不会出现宕机现象</p></blockquote></li></ul><hr><ol start="3"><li><strong>分片技术(集群)</strong></li></ol><ul><li>在Mongodb里面存在另一种集群，就是分片技术,可以满足MongoDB数据量大量增长的需求</li><li>当MongoDB存储海量的数据时，一台机器可能不足以存储数据，也可能不足以提供可接受的读写吞吐量<blockquote><p>此时就可以通过在多台机器上分割数据，使得数据库系统能存储和处理更多的数据</p></blockquote></li></ul><p><strong>分片技术的作用:</strong></p><ul><li>复制所有的写入操作到主节点</li><li>延迟的敏感数据会在主节点查询</li><li>有效解决单个副本集限制在12个节点的问题</li><li>能解决当请求量巨大时会出现内存不足</li><li>能够解决本地磁盘不足</li><li>可以避免价格昂贵的垂直扩展</li></ul><p><strong>逻辑简述:</strong></p><blockquote><p><code>(APP Server[Router(mongos)])|(APP Server[Router(mongos)])&lt;-2 or more Routes-&gt;&lt;-&gt;(3*Config Server)&lt;-&gt;&lt;-2 or more Shards-&gt;(Shard(replica set))|(Shard(replica set))</code></p></blockquote><ul><li><p>组件描述:</p><blockquote><p>Shard:用于存储实际的数据块，实际生产环境中一个shard server角色可由几台机器组个一个replica set承担，防止主机单点故障<br>Config Server:mongod实例，存储了整个 ClusterMetadata，其中包括 chunk信息<br>Query Routers:前端路由，客户端由此接入，且让整个集群看上去像单一数据库，前端应用可以透明使用</p></blockquote></li><li><p>实例不进行阐述</p></li></ul><hr><p><strong>其它概念:</strong></p><ol><li>数据备份与恢复</li><li>监控部署</li><li>其他语言接口</li><li>关系</li><li>数据库引用</li><li>MongoDB覆盖索引查询</li><li>Map Reduce</li><li>固定集合(Capped Collections)</li></ol><hr><ol><li>查询分析</li><li>高级索引</li><li>索引限制</li><li>原子操作</li><li>全文检索</li><li>ObjectId</li><li>自动增长</li></ol><hr><ul><li>正则表达式</li><li>操作符</li><li>运算符</li><li>管理工具:<blockquote><p>Rockmongo<br>GridFS</p></blockquote></li></ul><hr><ul><li>有待补充…</li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 17 2020 23:55:39 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MongoDB-4&quot;&gt;&lt;a href=&quot;#MongoDB-4&quot; class=&quot;headerlink&quot; title=&quot;MongoDB-4&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-3</title>
    <link href="https://unit-serow.github.io/2020/02/17/MongoDB-3/"/>
    <id>https://unit-serow.github.io/2020/02/17/MongoDB-3/</id>
    <published>2020-02-17T13:43:03.000Z</published>
    <updated>2020-02-17T13:55:27.644Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 17 2020 21:55:37 GMT+0800 (中国标准时间) --><h3 id="MongoDB-3"><a href="#MongoDB-3" class="headerlink" title="MongoDB-3"></a>MongoDB-3</h3><p><strong>使用数据模型:</strong></p><ul><li>集合SET1<blockquote><p><code>db.createCollection(&quot;SET1&quot;, { capped : true, autoIndexId : true, size : 6142800, max : 10000} )</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.SET1.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 110&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;B1&quot;, B: &quot;B2&quot;, likes: 120&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;B1&quot;, B: &quot;B2&quot;, likes: 130&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;D1&quot;, B: &quot;D2&quot;, likes: 140&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;D1&quot;, B: &quot;D2&quot;, likes: 150&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;E1&quot;, B: &quot;E2&quot;, likes: 160&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;E1&quot;, B: &quot;E2&quot;, likes: 170&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;F1&quot;, B: &quot;F2&quot;, likes: 180&#125;);</span><br><span class="line">db.SET1.insert(&#123; A: &quot;F1&quot;, B: &quot;F2&quot;, likes: 190&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(&quot;SET1&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000&#125; )</span><br><span class="line">&#123;</span><br><span class="line">&quot;note&quot; : &quot;the autoIndexId option is deprecated and will be removed in a future release&quot;,</span><br><span class="line">&quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 110&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;B1&quot;, B: &quot;B2&quot;, likes: 120&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;B1&quot;, B: &quot;B2&quot;, likes: 130&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;D1&quot;, B: &quot;D2&quot;, likes: 140&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;D1&quot;, B: &quot;D2&quot;, likes: 150&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;E1&quot;, B: &quot;E2&quot;, likes: 160&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;E1&quot;, B: &quot;E2&quot;, likes: 170&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;F1&quot;, B: &quot;F2&quot;, likes: 180&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(&#123; A: &quot;F1&quot;, B: &quot;F2&quot;, likes: 190&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02973&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02974&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 110 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02975&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 120 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02976&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 130 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02977&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 140 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02978&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 150 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02979&quot;), &quot;A&quot; : &quot;E1&quot;, &quot;B&quot; : &quot;E2&quot;, &quot;likes&quot; : 160 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f0297a&quot;), &quot;A&quot; : &quot;E1&quot;, &quot;B&quot; : &quot;E2&quot;, &quot;likes&quot; : 170 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f0297b&quot;), &quot;A&quot; : &quot;F1&quot;, &quot;B&quot; : &quot;F2&quot;, &quot;likes&quot; : 180 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854e97967282a0f0297c&quot;), &quot;A&quot; : &quot;F1&quot;, &quot;B&quot; : &quot;F2&quot;, &quot;likes&quot; : 190 &#125;</span><br></pre></td></tr></table></figure><hr><p><strong>开始查询:</strong></p><ul><li>查询并输出A=A1和B=A2的键值<blockquote><p><code>db.SET1.find({&quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find(&#123;&quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;&#125;)</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02973&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02974&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 110 &#125;</span><br></pre></td></tr></table></figure><hr><ul><li>查询并输出集合SET1内likes大于100且小于200的键值，跳过前两条并且只输出四条<blockquote><p><code>db.SET1.find({likes : {$lt :200, $gt : 100}}).limit(4).skip(2)</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find(&#123;likes : &#123;$lt :200, $gt : 100&#125;&#125;).limit(4).skip(2)</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02976&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 130 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02977&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 140 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02978&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 150 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02979&quot;), &quot;A&quot; : &quot;E1&quot;, &quot;B&quot; : &quot;E2&quot;, &quot;likes&quot; : 160 &#125;</span><br></pre></td></tr></table></figure><hr><ul><li>查询并降序输出集合SET1内A等于A1或等于B1或等于D1的数据<blockquote><p><code>db.SET1.find({$or:[{&quot;A&quot;: &quot;A1&quot;},{&quot;A&quot;: &quot;B1&quot;},{&quot;A&quot;: &quot;D1&quot;}]}).sort({&quot;likes&quot;:-1})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find(&#123;$or:[&#123;&quot;A&quot;: &quot;A1&quot;&#125;,&#123;&quot;A&quot;: &quot;B1&quot;&#125;,&#123;&quot;A&quot;: &quot;D1&quot;&#125;]&#125;).sort(&#123;&quot;likes&quot;:-1&#125;)</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02978&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 150 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02977&quot;), &quot;A&quot; : &quot;D1&quot;, &quot;B&quot; : &quot;D2&quot;, &quot;likes&quot; : 140 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02976&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 130 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02975&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 120 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02974&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 110 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a854d97967282a0f02973&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 100 &#125;</span><br></pre></td></tr></table></figure><hr><ul><li>查询并输出集合SET1内A等于A1或等于B1，且likes值小于并等于50的值<blockquote><p><code>db.SET1.find({&quot;likes&quot;: {$gt:50}, $or: [{&quot;A&quot; : &quot;A1&quot;},{&quot;A&quot; : &quot;B1&quot;}]})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find(&#123;&quot;likes&quot;: &#123;$gt:50&#125;, $or: [&#123;&quot;A&quot; : &quot;A1&quot;&#125;,&#123;&quot;A&quot; : &quot;B1&quot;&#125;]&#125;)</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02973&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02974&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 110 &#125;</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02975&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 120 &#125;</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02976&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 130 &#125;</span><br></pre></td></tr></table></figure><ul><li>执行逻辑(顺序)<blockquote><p>先执行sort(), 然后执行skip()，最后执行limit()<br>相当于<code>like &gt;=50 AND (where A=&#39;A1&#39; OR A=&#39;B1&#39;)</code><br><code>where likes [条件运算符] [条件] AND (key=&gt;value OR key=&gt;value)</code></p></blockquote></li></ul><hr><ul><li>以降序查询并输出集合SET1内文本A的内容<blockquote><p><code>db.SET1.find({},{&quot;A&quot;:1, _id:0}).sort({&quot;likes&quot;:-1})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; &#96;db.SET1.find(&#123;&#125;,&#123;&quot;A&quot;:1, _id:0&#125;).sort(&#123;&quot;likes&quot;:-1&#125;)&#96;</span><br><span class="line">&#123; &quot;A&quot; : &quot;F1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;F1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;E1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;E1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;D1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;D1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;B1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;B1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;A1&quot; &#125;</span><br><span class="line">&#123; &quot;A&quot; : &quot;A1&quot; &#125;</span><br></pre></td></tr></table></figure><hr><ul><li>输出SET1内G列内的所有文本数据，输出量为三，偏移量为一<blockquote><p><code>db.SET1.find({&quot;A&quot; : {$type : &#39;string&#39;}}).limit(3).skip(1)</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find(&#123;&quot;A&quot; : &#123;$type : &#39;string&#39;&#125;&#125;).limit(3).skip(1)</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02974&quot;), &quot;A&quot; : &quot;A1&quot;, &quot;B&quot; : &quot;A2&quot;, &quot;likes&quot; : 110 &#125;</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02975&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 120 &#125;</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : ObjectId(&quot;5e4a854d97967282a0f02976&quot;), &quot;A&quot; : &quot;B1&quot;, &quot;B&quot; : &quot;B2&quot;, &quot;likes&quot; : 130 &#125;</span><br></pre></td></tr></table></figure><blockquote><p>string可以用2表示，Array用4</p></blockquote><hr><ul><li>在SET2内基于ID求出的文档A1的数据总和，并进行分组<blockquote><p><code>db.SET1.aggregate([{$group : {</code>_id<code>: &quot;A1&quot;, amount : {$sum : 1}}}])</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.aggregate([&#123;$group : &#123;&#96;_id&#96; : &quot;A1&quot;, amount : &#123;$sum : 1&#125;&#125;&#125;])</span><br><span class="line">&#123; &#96;&quot;_id&quot;&#96; : &quot;A1&quot;, &quot;amount&quot; : 10 &#125;</span><br></pre></td></tr></table></figure><blockquote><p>类似于RDBMS中的SQL语句:<code>Sselect A1, count(*) from SET2 group by _id</code></p></blockquote><hr><ul><li>类似概念<blockquote><p>逗号’”,”<code>即为</code>AND<code></code>$or<code>即为</code>OR`</p></blockquote></li></ul><hr><ul><li>操作符<blockquote><p>用于比较两个表达式并从mongoDB集合中获取数据</p></blockquote></li></ul><p><strong>操作符总览</strong></p><table><thead><tr><th align="left">全称</th><th align="left">符号说明</th><th align="left">操作符</th></tr></thead><tbody><tr><td align="left">greater than</td><td align="left">“&gt;”(大于)</td><td align="left">$gt</td></tr><tr><td align="left">less than</td><td align="left">“&lt;”(小于)</td><td align="left">$lt</td></tr><tr><td align="left">gt equal</td><td align="left">“&gt;=”(大于等于)</td><td align="left">$gte</td></tr><tr><td align="left">lt equal</td><td align="left">“&lt;=”(小于等于)</td><td align="left">$lte</td></tr><tr><td align="left">not equal</td><td align="left">“!=”(不等于)</td><td align="left">$ne</td></tr><tr><td align="left">equal</td><td align="left">“=”(等于)</td><td align="left">$eq</td></tr></tbody></table><hr><p><strong>相关概念</strong></p><ul><li><p>条件操作符</p></li><li><p><code>projection</code></p></li><li><p><code>$type</code></p></li><li><p><code>limit</code></p></li><li><p><code>skip</code></p></li><li><p>排序(<code>sort({KEY:1/-1})</code>)</p></li><li><p>聚合(aggregate)</p></li><li><p>复制(副本集)</p></li><li><p>分片(集群)</p></li><li><p>序列(自增)</p></li><li><p>查询语法基本结构</p><blockquote><p><code>db.collection.find((query, projection)</code><br><code>db.collection.find({key1:value1, key2:value2}).pretty()</code></p></blockquote></li></ul><hr><p><strong>MongoDB与RDBMS Where语句比较</strong></p><p><strong>查询语句:</strong></p><table><thead><tr><th align="left">操作</th><th align="left">格式</th><th align="left">范例</th><th align="left">RDBMS中的类似语句</th></tr></thead><tbody><tr><td align="left">等于</td><td align="left">{<key>:<value>}</value></key></td><td align="left">db.col.find({“A”:”xxx”}).pretty()</td><td align="left">where A = ‘xxx’</td></tr><tr><td align="left">小于</td><td align="left">{<key>:{$lt:<value>}}</value></key></td><td align="left">db.col.find({“likes”:{$lt:50}}).pretty()</td><td align="left">where likes &lt; 50</td></tr><tr><td align="left">小于或等于</td><td align="left">{<key>:{$lte:<value>}}</value></key></td><td align="left">db.col.find({“likes”:{$lte:50}}).pretty()</td><td align="left">where likes &lt;= 50</td></tr><tr><td align="left">大于</td><td align="left">{<key>:{$gt:<value>}}</value></key></td><td align="left">db.col.find({“likes”:{$gt:50}}).pretty()</td><td align="left">where likes &gt; 50</td></tr><tr><td align="left">大于或等于</td><td align="left">{<key>:{$gte:<value>}}</value></key></td><td align="left">db.col.find({“likes”:{$gte:50}}).pretty()</td><td align="left">where likes &gt;= 50</td></tr><tr><td align="left">不等于</td><td align="left">{<key>:{$ne:<value>}}</value></key></td><td align="left">db.col.find({“likes”:{$ne:50}}).pretty()</td><td align="left">where likes != 50</td></tr></tbody></table><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 17 2020 21:55:37 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MongoDB-3&quot;&gt;&lt;a href=&quot;#MongoDB-3&quot; class=&quot;headerlink&quot; title=&quot;MongoDB-3&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-2</title>
    <link href="https://unit-serow.github.io/2020/02/17/MongoDB-2/"/>
    <id>https://unit-serow.github.io/2020/02/17/MongoDB-2/</id>
    <published>2020-02-17T10:08:48.000Z</published>
    <updated>2020-02-17T11:32:37.699Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 17 2020 19:32:44 GMT+0800 (中国标准时间) --><h3 id="MongoSQL-2"><a href="#MongoSQL-2" class="headerlink" title="MongoSQL-2"></a>MongoSQL-2</h3><p><strong>创建并连接</strong></p><ul><li>创建并选择数据库<blockquote><p><code>use TEST1</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; use TEST1</span><br><span class="line">switched to db TEST1</span><br></pre></td></tr></table></figure><ul><li>创建集合<blockquote><p><code>db.createCollection(&quot;SET1&quot;, { capped : true, autoIndexId : true, size : 6142800, max : 10000} )</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(&quot;SET1&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000&#125; )</span><br><span class="line">&#123;</span><br><span class="line">&quot;note&quot; : &quot;the autoIndexId option is deprecated and will be removed in a future release&quot;,</span><br><span class="line">&quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>向集合内插入两个文档</strong></p><ul><li>定义变量:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A1&#x3D;(&#123;</span><br><span class="line">A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">B: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">C: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">D: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">E: [&#39;1&#39;, &#39;2&#39;, &#39;4&#39;],</span><br><span class="line">likes: 100&#125;);</span><br></pre></td></tr></table></figure></li></ul><p><code>A1=({ A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], B: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], C: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], D: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], E: [&#39;1&#39;, &#39;2&#39;, &#39;4&#39;], likes: 100});</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&gt; A1&#x3D;(&#123;</span><br><span class="line">... A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... B: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... C: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... D: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... E: [&#39;1&#39;, &#39;2&#39;, &#39;4&#39;],</span><br><span class="line">... likes: 100&#125;);</span><br><span class="line">&#123;</span><br><span class="line">&quot;A&quot; : [</span><br><span class="line">&quot;1&quot;,</span><br><span class="line">&quot;2&quot;,</span><br><span class="line">&quot;3&quot;</span><br><span class="line">],</span><br><span class="line">&quot;B&quot; : [</span><br><span class="line">&quot;1&quot;,</span><br><span class="line">&quot;2&quot;,</span><br><span class="line">&quot;3&quot;</span><br><span class="line">],</span><br><span class="line">&quot;C&quot; : [</span><br><span class="line">&quot;1&quot;,</span><br><span class="line">&quot;2&quot;,</span><br><span class="line">&quot;3&quot;</span><br><span class="line">],</span><br><span class="line">&quot;D&quot; : [</span><br><span class="line">&quot;1&quot;,</span><br><span class="line">&quot;2&quot;,</span><br><span class="line">&quot;3&quot;</span><br><span class="line">],</span><br><span class="line">&quot;E&quot; : [</span><br><span class="line">&quot;1&quot;,</span><br><span class="line">&quot;2&quot;,</span><br><span class="line">&quot;4&quot;</span><br><span class="line">],</span><br><span class="line">&quot;likes&quot; : 100</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>插入文档<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.SET1.insert(A1)</span><br><span class="line">db.SET1.insert(A1)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.insert(A1)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; db.SET1.insert(A1)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p><code>db.SET1.find()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a614f39d6dc440c77623b&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;C&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;D&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;E&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;4&quot; ], &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a615439d6dc440c77623c&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;C&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;D&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;E&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;4&quot; ], &quot;likes&quot; : 100 &#125;</span><br></pre></td></tr></table></figure><hr><ul><li>更新数据<blockquote><p><code>db.SET1.updateMany({&#39;E&#39;: [&#39;1&#39; , &#39;2&#39;, &#39;4&#39;]}, {$set:{&#39;E&#39;: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]}},{multi:true})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.updateMany(&#123;&#39;E&#39;: [&#39;1&#39; , &#39;2&#39;, &#39;4&#39;]&#125;, &#123;$set:&#123;&#39;E&#39;: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]&#125;&#125;,&#123;multi:true&#125;)</span><br><span class="line">&#123; &quot;acknowledged&quot; : true, &quot;matchedCount&quot; : 2, &quot;modifiedCount&quot; : 2 &#125;</span><br></pre></td></tr></table></figure><ul><li>查看集合内容<blockquote><p><code>db.SET1.find().pretty()</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a614f39d6dc440c77623b&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;C&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;D&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;E&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a615439d6dc440c77623c&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;C&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;D&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;E&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;likes&quot; : 100 &#125;</span><br></pre></td></tr></table></figure><ul><li>查看数据库<blockquote><p><code>db</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db</span><br><span class="line">TEST1</span><br></pre></td></tr></table></figure><ul><li>查看所有数据库<blockquote><p><code>show dbs</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">TEST1   0.000GB</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br></pre></td></tr></table></figure><hr><p><strong>创建索引</strong></p><ul><li>因为索引不能用于并行数组</li><li>所以这里新建了一个文档并进行字符串插入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;SET2&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000&#125; )</span><br><span class="line">db.SET2.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br><span class="line">db.SET2.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(&quot;SET2&quot;, &#123; capped : true, autoIndexId : true, size : 6142800, max : 10000&#125; )</span><br><span class="line">&#123;</span><br><span class="line">&quot;note&quot; : &quot;the autoIndexId option is deprecated and will be removed in a future release&quot;,</span><br><span class="line">&quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET2.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET2.insert(&#123; A: &quot;A1&quot;, B: &quot;A2&quot;, likes: 100&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><ul><li>将文档SET2内的键A和键分别设置为升序索引与降序索引(DRBMS内称之为复合索引)<blockquote><p><code>db.SET2.createIndex({&quot;A&quot;:1,&quot;B&quot;:-1})</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET2.createIndex(&#123;&quot;A&quot;:1,&quot;B&quot;:-1&#125;)</span><br><span class="line">&#123;</span><br><span class="line">&quot;createdCollectionAutomatically&quot; : false,</span><br><span class="line">&quot;numIndexesBefore&quot; : 1,</span><br><span class="line">&quot;numIndexesAfter&quot; : 2,</span><br><span class="line">&quot;ok&quot; : 1</span><br></pre></td></tr></table></figure><hr><ul><li>查看所有索引<blockquote><p><code>db.SET2.getIndexes()</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET2.getIndexes()</span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">&quot;v&quot; : 2,</span><br><span class="line">&quot;key&quot; : &#123;</span><br><span class="line">&quot;_id&quot; : 1</span><br><span class="line">&#125;,</span><br><span class="line">&quot;name&quot; : &quot;_id_&quot;,</span><br><span class="line">&quot;ns&quot; : &quot;A.SET2&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;v&quot; : 2,</span><br><span class="line">&quot;key&quot; : &#123;</span><br><span class="line">&quot;A&quot; : 1,</span><br><span class="line">&quot;B&quot; : -1</span><br><span class="line">&#125;,</span><br><span class="line">&quot;name&quot; : &quot;A_1_B_-1&quot;,</span><br><span class="line">&quot;ns&quot; : &quot;A.SET2&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><hr><ul><li>删除所有索引<blockquote><p><code>db.SET2.dropIndexes()</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET2.dropIndexes()</span><br><span class="line">&#123;</span><br><span class="line">&quot;nIndexesWas&quot; : 2,</span><br><span class="line">&quot;msg&quot; : &quot;non-_id indexes dropped for collection&quot;,</span><br><span class="line">&quot;ok&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li><p>删除集合SET1内所有符合条件的文档</p><blockquote><p><code>db.SET1.deleteMany({A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]})</code><br><code>db.SET1.remove({&#39;A&#39;:[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;]})</code></p></blockquote></li><li><p>查看集合内容</p><blockquote><p><code>db.SET1.find().pretty()</code></p></blockquote></li><li><p>删除集合</p><blockquote><p><code>db.SET1.drop()</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.SET1.drop()</span><br><span class="line">true</span><br></pre></td></tr></table></figure><ul><li>删除所在数据库<blockquote><p><code>db.dropDatabase()</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase()</span><br><span class="line">&#123; &quot;dropped&quot; : &quot;TEST1&quot;, &quot;ok&quot; : 1 &#125;</span><br></pre></td></tr></table></figure><ul><li>查看已有数据库列表<blockquote><p><code>show dbs</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br></pre></td></tr></table></figure><hr><p><strong>补充内容:</strong></p><ul><li>文档的数据结构和JOSN基本相同</li><li>所有存储在集合中的数据都是BSON格式</li><li>BSON 是一种类似 JSON 的二进制形式的存储格式，是 Binary JSON 的简称</li><li>增删改查中只有查和改有实际用途，而精髓就在于查</li></ul><hr><p><strong>其它概念:</strong></p><ul><li>数组</li><li>变量</li><li>数据库</li><li>集合</li><li>文档</li><li>键</li><li>值</li><li>索引(1/-1)<blockquote><p><code>createIndex()</code> version&gt;3.0.0<br><code>ensureIndex()</code> version&lt;3.0.0</p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 17 2020 19:32:44 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MongoSQL-2&quot;&gt;&lt;a href=&quot;#MongoSQL-2&quot; class=&quot;headerlink&quot; title=&quot;MongoSQL-2
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB-1</title>
    <link href="https://unit-serow.github.io/2020/02/17/MongoDB-1/"/>
    <id>https://unit-serow.github.io/2020/02/17/MongoDB-1/</id>
    <published>2020-02-17T09:08:31.000Z</published>
    <updated>2020-02-17T09:27:35.496Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Feb 17 2020 17:27:43 GMT+0800 (中国标准时间) --><h3 id="MongoDB-1"><a href="#MongoDB-1" class="headerlink" title="MongoDB-1"></a>MongoDB-1</h3><p><strong>概述:</strong></p><ul><li>NoSQL</li><li>是一个基于分布式文件存储的数据库</li><li>由C++撰写</li><li>目的是为WEB应用提供可扩展的高性能数据存储解决方案</li><li>虽然是非关系型，但它的功能超越了所有其他的NoSQL，是最接近关系型数据库的NoSQL</li><li>MongoDB 将数据存储为一个文档，数据结构由键值<code>(key=&gt;value)</code>对组成</li><li>MongoDB 文档类似于JSON对象</li><li>字段值可以包含其他文档，数组及文档数组</li><li>2007年10月，MongoDB由10gen团队所开发，发布于2009年2月</li></ul><hr><p><strong>(Key=&gt;Value)简述:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   name: &quot;serow&quot;&lt;-field: value</span><br><span class="line">   time: &quot;2020-01-17&quot;&lt;-field: value</span><br><span class="line">   xxx: &quot;xxx&quot;&lt;-field: value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>存储结构示例</strong></p><p><strong>向数据库内UNIT1集合插入两条文档数据</strong></p><p><code>db.UNIT1.insert({[A: &#39;1&#39;, &#39;2&#39;, &#39;3&#39;], [B: &#39;1&#39;, &#39;2&#39;, &#39;3&#39;] likes: 100)});</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.UNIT1.insert(&#123;</span><br><span class="line">... A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... B: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;],</span><br><span class="line">... likes: 100&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.UNIT1.insert(&#123; A: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], B: [&#39;1&#39;, &#39;2&#39;, &#39;3&#39;], likes: 100&#125;);</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><hr><p><strong>输出示例(结构示例):</strong></p><p><code>db.UNIT1.find()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.UNIT1.find()</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a564937144332c7b7814a&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;likes&quot; : 100 &#125;</span><br><span class="line">&#123; &quot;_id&quot; : ObjectId(&quot;5e4a569837144332c7b7814b&quot;), &quot;A&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;B&quot; : [ &quot;1&quot;, &quot;2&quot;, &quot;3&quot; ], &quot;likes&quot; : 100 &#125;</span><br></pre></td></tr></table></figure><hr><p><strong>特点:</strong></p><ol><li>MongoDB是一个面向文档存储的数据库，因此降低了管理与操作的难度</li><li>Mongo支持丰富的查询表达式，而查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组</li><li>允许在MongoDB记录中设置任何属性的索引来实现更快的排序</li><li>允许通过本地或者网络创建数据镜像，以此大幅增加了MongoDB的扩展性</li></ol><hr><ol start="5"><li>MongoDB使用update()命令可以实现替换完成的文档(数据)或者一些指定的数据字段</li><li>MongoDB中的Map/reduce主要是用来对数据进行批量处理和聚合操作</li><li>Map和Reduce:Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理</li><li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作</li><li>MongoDB允许在服务端执行脚本用Javascript编写某个函数，然后直接在服务端执行，函数的定义可以存储在服务端，以方便下次调用</li></ol><hr><ol start="10"><li>MongoDB拥有各种API用以支持各类编程语言:PHP,Lisp,Puby,C++,Scala,Python等</li><li>在负载增加时(需要更多的存储空间和更强的处理能力)，它可以分布在计算机网络中的其他节点上，即为分片</li></ol><hr><p><strong>内置工具</strong></p><ul><li>MongoDB中的内置功能(插件)<blockquote><p>MongoDB提供了网络和系统监控工具Munin，作为插件应用于MongoDB中<br>Gangila是MongoDB高性能的系统监视的工具，还可以可以用于存放大量小文件，作为插件应用于MongoDB中<br>基于图形界面的开源工具之一:Cacti，用于查看CPU负载，网络带宽利用率，同时提供了一个应用于监控MongoDB的插件</p></blockquote></li></ul><hr><p><strong>GUI工具一览</strong></p><table><thead><tr><th align="left">名称</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Fang of Mongo</td><td align="left">网页式，由Django和jQuery撰写</td></tr><tr><td align="left">Futon4Mongo</td><td align="left">一个CouchDB Futon web的MongoDB山寨版</td></tr><tr><td align="left">Mongo3</td><td align="left">由Ruby撰写</td></tr><tr><td align="left">Opricot</td><td align="left">一个基于浏览器的MongoDB控制台, 由PHP撰写</td></tr><tr><td align="left">RockMongo</td><td align="left">MongoDB管理工具，轻量级且支持多国语言，由PHP撰写</td></tr><tr><td align="left">MongoHub</td><td align="left">适用于OSX的应用程序</td></tr><tr><td align="left">Database Master</td><td align="left">Windows的mongodb管理工具</td></tr></tbody></table><hr><p><strong>基本概念简述:</strong></p><ul><li>在mongodb中基本的概念:</li><li>数据库</li><li>文档</li><li>集合</li><li>键</li><li>值(域)</li></ul><table><thead><tr><th align="left">MongoDB术语与概念</th><th align="left">SQL术语与通用概念</th><th align="left">解释与说明</th></tr></thead><tbody><tr><td align="left">database</td><td align="left">database</td><td align="left">数据库</td></tr><tr><td align="left">collection</td><td align="left">table</td><td align="left">集合/数据库表</td></tr><tr><td align="left">document</td><td align="left">row</td><td align="left">文档/数据行</td></tr><tr><td align="left">field</td><td align="left">column</td><td align="left">域/数据字段</td></tr><tr><td align="left">index</td><td align="left">index</td><td align="left">索引</td></tr><tr><td align="left">primary key</td><td align="left">primary key</td><td align="left">主键,MongoDB自动将<code>_id</code>字段设置为主键</td></tr><tr><td align="left">table joins</td><td align="left">—</td><td align="left">MongoDB不支持表连接</td></tr></tbody></table><hr><p><strong>概念解析</strong></p><ol><li>数据库(Database)</li></ol><ul><li>MongoDB的默认数据库为’db’，该数据库被存储于data目录内</li><li>MongoDB的单个实例可以容纳多个独立的数据库，每个实例都有独立的集合与权限</li><li>不同的数据库被放置于data目录内不同的文件中</li></ul><p><strong>基本命令:</strong></p><ul><li>以列表方式输出已存在数据库信息<blockquote><p><code>show dbs</code></p></blockquote></li><li>显示当前数据库对象或集合<blockquote><p><code>db</code></p></blockquote></li><li>连接所选数据库，命名的具体规则不进行过多说明<blockquote><p><code>use database_name</code></p></blockquote></li></ul><p><strong>MongoDB内拥有特定作用的保留数据库，可直接访问</strong></p><p><strong>具体说明:</strong></p><blockquote><p><code>admin</code>:操作权限管理数据库，添加于此数据库的用户会自动继承数据库的所有操作权限，即为root权限<br>一些特定的服务器端命令也只能从这个数据库运行，例如列出所有的数据库或者关闭服务器<br><code>local</code>:此数据库内的数据不可复制，可以用来存储限于本地单台服务器的任意集合<br><code>config</code>:当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息</p></blockquote><ul><li>关于数据库的具体命令本章不做阐述</li></ul><hr><ol start="2"><li><p>文档(Document)</p></li><li><p>文档是一组键值(key-value)对(即BSON)</p></li><li><p>MongoDB的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这是MongoDB完全不同于关系型数据库的一个特点</p></li><li><p>文档中的键/值对是有序的</p></li><li><p>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型(并且允许嵌入整个文档)</p></li><li><p>MongoDB区分类型和大小写</p></li><li><p>MongoDB的文档不能有重复的键</p></li><li><p>文档的键是字符串，除了少数例外情况，键可以使用任意UTF-8字符</p></li></ol><p><strong>文档键命名规范:</strong></p><ol><li>键不能含有\0 (空字符)。这个字符用来表示键的结尾</li><li><code>.</code>和<code>$</code>有特别的意义，只有在特定环境下才能使用</li><li>以下划线<code>&quot;_&quot;</code>开头的键是保留的(不是严格要求的)</li></ol><ul><li>文档示例:<blockquote><p><code>{&quot;set&quot;:&quot;unit&quot;,&quot;serow&quot;:&quot;takin&quot;}</code></p></blockquote></li></ul><p><strong>RDBMS与MongoDB对应的术语:</strong></p><table><thead><tr><th align="left">RDBMS</th><th align="left">MongoDB</th></tr></thead><tbody><tr><td align="left">数据库</td><td align="left">数据库</td></tr><tr><td align="left">表格</td><td align="left">集合</td></tr><tr><td align="left">行</td><td align="left">文档</td></tr><tr><td align="left">列</td><td align="left">字段</td></tr><tr><td align="left">表联合</td><td align="left">嵌入文档</td></tr><tr><td align="left">主键</td><td align="left">主键(MongoDB提供了key为<code>_id</code>)</td></tr></tbody></table><p><strong>数据库和客户端:</strong></p><table><thead><tr><th align="left">数据库</th><th align="left">客户端</th></tr></thead><tbody><tr><td align="left">mongo</td><td align="left">mongod</td></tr><tr><td align="left">Mysqld</td><td align="left">mysql</td></tr><tr><td align="left">Oracle</td><td align="left">sqlplus</td></tr></tbody></table><hr><ol start="3"><li>集合(collections)</li></ol><ul><li><p>集合是MongoDB文档组，类似于RDBMS<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>中的表格</p></li><li><p>集合存在于数据库中，集合没有固定的结构</p></li><li><p>所以集合中可以插入不同格式和类型的数据，但通常情况下插入集合中的数据都会有一定的关联性</p></li><li><p>当第一个文档插入时，集合就会被创建</p></li><li><p>集合示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;set&quot;:&quot;group&quot;&#125;</span><br><span class="line">&#123;&quot;unit&quot;:&quot;communism&quot;,&quot;free&quot;:&quot;rule&quot;&#125;</span><br><span class="line">&#123;&quot;takin&quot;:&quot;serow&quot;,&quot;elk&quot;:&quot;crocodile&quot;,&quot;elephant&quot;&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>集合的命名规则:</strong></p><ul><li><p>集合名不能是空字符串<code>&quot;&quot;</code></p></li><li><p>集合名不能含有\0字符(空字符)，此字符表示集合名的结尾</p></li><li><p>集合名不能以”system.”开头，这是为系统集合保留的前缀</p></li><li><p>集合名字不能含有保留字符</p><blockquote><p>但某些驱动程序可以支持在集合名内包含保留字符，因为某些系统生成的集合中包含该字符<br>除非要访问这种系统创建的集合，否则不可以在名字里出现<code>$</code></p></blockquote></li><li><p>命名实例:</p><blockquote><p><code>db.col.fineOne()</code></p></blockquote></li></ul><hr><ol start="4"><li>封装集合(Capped collections)</li></ol><ul><li>Capped collections就是固定大小的collection</li><li>有很高的性能以及队列过期的特性(过期按照插入的顺序)，有点类似于<code>RRD</code>的概念</li><li>Capped collections是高性能自动的维护对象的插入顺序<blockquote><p>适合类似记录日志的功能<br>与标准的collection不同，其需要显式的创建一个capped collection，指定一个collection的大小(单位是字节)<br>collection 的数据存储空间值提前分配的</p></blockquote></li><li>Capped collections 可以按照文档的插入顺序保存到集合中，而且这些文档在磁盘上存放位置也是按照插入顺序来保存的<blockquote><p>所以更新Capped collections中文档的时候，更新后的文档不可以超过之前文档的大小，以确保所有文档在磁盘上的位置一直保持不变</p></blockquote></li><li>Capped collection是按照文档的插入顺序而不是使用索引确定插入位置，此种方法可以提高增添数据的效率<blockquote><p>MongoDB的操作日志文件<code>oplog.rs</code>就是利用Capped Collection来实现的</p></blockquote></li><li>指定的存储大小包含了数据库的头信息，这一点需要特别注意</li></ul><hr><ul><li>在Capped Collection中可以能添加新的对象</li><li>可以进行更新，并且对象不会增加存储空间，如果增加，更新就会失败</li><li>使用Capped Collection不能删除一个文档，可以使用drop()方法删除collection所有的行</li><li>删除之后必须显式的重新创建此collection</li><li>在32bit机器中，capped collection最大存储为<code>1e9( 1X10^9)</code>个字节</li></ul><hr><ul><li>Capped Collections示例:<blockquote><p><code>db.createCollection(&quot;mycoll&quot;, {capped:true, size:100000})</code></p></blockquote></li></ul><hr><ol start="5"><li>元数据</li></ol><ul><li>数据库的信息存储在集合中，它们使用了系统的命名空间:<blockquote><p><code>dbname.system.*</code></p></blockquote></li><li>在MongoDB数据库中名字空间<code>&lt;dbname&gt;.system.*</code>是包含多种系统信息的特殊集合(Collection)</li></ul><p><strong>集合命名空间说明:</strong></p><table><thead><tr><th align="left">集合命名空间</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">dbname.system.namespaces</td><td align="left">列出所有名字空间</td></tr><tr><td align="left">dbname.system.indexes</td><td align="left">列出所有索引</td></tr><tr><td align="left">dbname.system.profile</td><td align="left">包含数据库概要(profile)信息</td></tr><tr><td align="left">dbname.system.users</td><td align="left">列出所有可访问数据库的用户</td></tr><tr><td align="left">dbname.local.sources</td><td align="left">包含复制对端(slave)的服务器信息和状态</td></tr></tbody></table><p><strong>对于修改系统集合中的对象有的规则:</strong></p><ol><li>在<code>&quot;[{system.indexes]}&quot;</code>插入数据，可以创建索引<blockquote><p>但除此之外该表信息是不可变的(特殊的drop index命令将自动更新相关信息)</p></blockquote></li><li><code>&quot;[{system.users}]&quot;</code>是可修改的</li><li><code>&quot;[{system.profile}]&quot;</code>是可删除的</li></ol><hr><p><strong>其它概念:</strong><br>MongoDB 数据类型<br>ObjectId<br>字符串(BSON字符串都是UTF-8编码)<br>时间戳<br>日期(<code>DATE/DATE()</code>)</p><hr><p><strong>参考资料:</strong></p><p>官方网站<a href="https://www.mongodb.com/" target="_blank" rel="noopener">跳转</a><br><code>https://www.mongodb.com/</code></p><p>官方文档EN<a href="https://docs.mongodb.com/manual/" target="_blank" rel="noopener">跳转</a><br><code>https://docs.mongodb.com/manual/</code></p><p>下载地址<a href="https://www.mongodb.com/download-center/community" target="_blank" rel="noopener">跳转</a><br><code>https://www.mongodb.com/download-center/community</code></p><hr><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none;padding-left:0"><li id="fn:1"><span style="display:inline-block;vertical-align:top;padding-right:10px">1.</span><span style="display:inline-block;vertical-align:top">(关系数据库管理系统：Relational Database Management System，RDBMS)</span><a href="#fnref:1" rev="footnote"> ↩</a></li></ol></div></div><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Mon Feb 17 2020 17:27:43 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MongoDB-1&quot;&gt;&lt;a href=&quot;#MongoDB-1&quot; class=&quot;headerlink&quot; title=&quot;MongoDB-1&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis-3</title>
    <link href="https://unit-serow.github.io/2020/02/16/Redis-3/"/>
    <id>https://unit-serow.github.io/2020/02/16/Redis-3/</id>
    <published>2020-02-16T13:01:07.000Z</published>
    <updated>2020-02-17T18:59:56.380Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --><h3 id="Redis-简易参考"><a href="#Redis-简易参考" class="headerlink" title="Redis-简易参考"></a>Redis-简易参考</h3><p><strong>便捷参考</strong></p><ul><li>基本语法:<blockquote><p><code>redis 127.0.0.1:6379&gt; COMMAND KEY_NAME VALUE</code></p></blockquote></li><li>参数说明:<blockquote><p><code>COMMAND为命令(映射于数据类型)</code><br><code>KEY_NAME为键</code><br><code>VALUE 为值</code></p></blockquote></li></ul><hr><p><strong>相关命令简述(不进行详细说明)</strong></p><ul><li>String/Hash/List/Set/Sorted set不进行说明</li><li>Redis 在 2.8.9 版本添加了 HyperLogLog 结构</li><li>Redis HyperLogLog 是用来做基数统计的算法</li></ul><table><thead><tr><th align="left">相关说明</th><th align="left">相关参数</th></tr></thead><tbody><tr><td align="left">HyperLogLog用于实现基数统计算法</td><td align="left">PFADD\PFCOUNT\PFMERGE</td></tr><tr><td align="left">订阅</td><td align="left">SUBSCRIBE\PUBLISH</td></tr><tr><td align="left">事务</td><td align="left">MULTI\EXEC\DISCARD</td></tr><tr><td align="left">脚本</td><td align="left">EVAL</td></tr><tr><td align="left">连接</td><td align="left">PING\QUIT\SELECT index</td></tr><tr><td align="left">服务</td><td align="left">INFO</td></tr><tr><td align="left">备份</td><td align="left">Bgsave\SAVE</td></tr><tr><td align="left">恢复</td><td align="left">SAVE</td></tr><tr><td align="left">安全</td><td align="left">CONFIG\AUTH</td></tr><tr><td align="left">性能测试</td><td align="left">redis-benchmark [option] [option value]</td></tr><tr><td align="left">连接客户端</td><td align="left">redis-server –maxclients [最大连接数]</td></tr></tbody></table><hr><p><strong>相关概念</strong></p><ul><li>订阅</li><li>事务</li><li>脚本</li><li>连接</li><li>服务器</li><li>数据备份</li><li>数据恢复</li><li>安全</li><li>管道技术</li><li>分区</li><li>测试(性能)</li><li>Log</li></ul><hr><ul><li><p>参考资料:<a href="https://redis.io/commands" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://redis.io/commands</code></p></blockquote></li><li><p>在线测试<a href="http://try.redis.io/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>http://try.redis.io/</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;Redis-简易参考&quot;&gt;&lt;a href=&quot;#Redis-简易参考&quot; class=&quot;headerlink&quot; title=&quot;Redis-简易参考
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>随笔-2020-02-16</title>
    <link href="https://unit-serow.github.io/2020/02/16/%E9%9A%8F%E7%AC%94-2020-02-16/"/>
    <id>https://unit-serow.github.io/2020/02/16/%E9%9A%8F%E7%AC%94-2020-02-16/</id>
    <published>2020-02-16T12:13:31.000Z</published>
    <updated>2020-02-17T19:06:47.222Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 03:06:54 GMT+0800 (中国标准时间) --><ul><li>顺天应人</li><li>中庸之道</li><li>本能与理智</li><li>环境</li><li>累积</li></ul><hr><ul><li><p>强者不会孤独，而弱者注定孤独</p></li><li><p>一切都将源于弱小与自身能力的不足</p></li><li><p>其所处的环境和其所拥有的时间能决定一切</p></li><li><p>所有人都摆脱不了环境所带来的任何影响</p></li><li><p>天才在猴子里它也只是猴子</p></li><li><p>弱者在强者里他依旧是强者</p></li><li><p>一切都早已注定，环境注定了一切</p></li></ul><blockquote><p>完全随机性概率</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 03:06:54 GMT+0800 (中国标准时间) --&gt;&lt;ul&gt;&lt;li&gt;顺天应人&lt;/li&gt;&lt;li&gt;中庸之道&lt;/li&gt;&lt;li&gt;本能与理智&lt;/li&gt;&lt;li&gt;环境&lt;/li&gt;&lt;li&gt;累积&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;ul
      
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔 2020-02-16</title>
    <link href="https://unit-serow.github.io/2020/02/16/%E9%9A%8F%E7%AC%94-2020-2-2-16/"/>
    <id>https://unit-serow.github.io/2020/02/16/%E9%9A%8F%E7%AC%94-2020-2-2-16/</id>
    <published>2020-02-16T12:11:20.000Z</published>
    <updated>2020-02-16T12:13:08.392Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="0e777c5a481cfa6381c0eb0514914071d294eb4d1e6d9965a69b2426c5130b44">0267ec72f19b8c198697a4f72870a3a8b14cb8a789d671ee1e24dbcd1e86922d5ddab4ffec6e8f7a8080e8fa489ecb88d40e431d89ae9f9557df167cb05a63313a0c93a861bfef8b2f70eb6c442278d63da4b139810c0cd21c78019911af3dde0278cb839fb5df6a035f7c45afdcfd1a53f3e0c0ae6abc6a90d3a0e9ba07d1dfead60f9e256aee705a3c365df04712ea00881d088ec420cfc889f0873c4469fd844760aca2319d1896b3a654dc28463bb41ce0c5f6e1ee04ea316f2f354aa67c3db7971e5ec791438747fa03448e6ec443f8df43c9263b07d542f449521a6a1fa5f2fa91d6269bc6da47b252fc74d225c3abcbde1220b31c0ef380a2e361c144ef95220a894112a20bf9c7f894dc636ce3a67af19530ab4542beaa5b154ec7f2edd48d7827717a9de3b7cc75a94c9de7fc4bf15b3578baaec46561bcabd2b281180868f72ce65037e23c0ddb6a89c72fd05bee964e9fd5e85ccbb53bf6a5bb1cb88f58d86f08ffca4679cc54864f6664cb1f8518d699d664503870ce13354c2752a3e4727c71d3c010f8c8f3a068399c0e2f00bb60444a5aa65c8e94b44722245c5a1fc494b99cbda549069cf8cf42c3ef0b0afd1f9ec5d1106678422be1b73204567db16265b069d01c246904ade7f3adeed9c403ce2dae0a7bd98e06aa045d6b716091558c6494d0ea463e936d9a2706d47018363cc7245ab5b929217743ef8b409a1dbfc2c927febf830e6eac9c78ac1ad0179e1758a628b6cca2380ff635b0c8f4be7cd508c94e89482fa3cf11d91bbfc620b18d52dc58b702ab796e9f12a03496ad1d8799ebc8ee12f68742aaeebdf140a1c13a9526cead8b8e7f75adc804444ff242b47cb3b8ff7c2f75b2e7580160de49316ba732005fc95122b1816fae11c8e12f05b0ae8039d2646ea628f5a10b0fd092e149a9147583af104127749592bc8cfbb4e70b704e71f6f04415f156083d00f7a875a73b63bf953e08bd8a191df07c998c2d1d414156cae81fd6bdbc09fe68804814211ec81577bbc9790a9c1d944f48df79a8934a657b65fee4408a696c8c5fdc438229b42d23f815ab9e38b84301adb89ccaf71d429f6af08347edbe2b712cc551fe38ad5c56ae6827181c4c87744e8d8f42b509b2eb5d5256f73e053e55b28a7c2190bd1bee6393bc9df4a80bd2ed7e23cc45661e8711ac62276f655537dce9662b0ff036b7580c4c9dcb225baa6bb21d1cfb9ebc1568de39fb4ca44f4a2378e619e877603344d3d21beb92462a84047e43c5e33e8cf407081a891daaffb7b351c1c7c6467083ac49e347293fddf30a6b4bd44a6248d4c4dfb4723077e9f99c5fdb147a67b87902fa4911711129319451a8a0911acba45d2174c6af9adbff1c36293fd6991dbfac07224388c762783f39f11a26ccb25ef5774c16a73a1b595a1edef8cae2a275ee3d6ca62d757ea00eeb4d6a8e2e302d547e98b24397f89f7bd6e6b14bc90922c730bcda6e22f05cef8bd8240161ea5a2ae1c7c6df2ce48c8096be708914d538fbd6278f207f4cecc5a07852d0f86a8525e1278918f5c2d209f28f2fd4461ecf93eeb44edbac0d0c75744726fdd032c0be322ab6ea916eebfdeee044f66cab822b2a6640b1e9bc47dcc770782bcaaab255997c7723a4434788ac822fb73163b411079e2b2900f1572c20bfdeb52123e76fab2df4ff33c14627d2ad8fbcec33821d11712301bbcb9e47d2ed89240356368bb0c8351e94926f4b781706ea41204a04a06ea28a1d890c3640fceebe4d76ea928fbdd84679c93753b1699ad6682b64b79b6a27660f69efc3763454214ed3620985b7551db69bf88f097c9432629aa51dfa12ece9234888de5c9efef2ac28d78f79ec1928dda9f7dc113d5b9c42ddde9e56a6bf16343f0f5a8e0aed9f104a0a2f04ca685ac81bbdde063e6613474f8789ef0dd5246862d6a711118bebe0db6b6d475a8424ad8b531add0005a01f15954bc0e06a209aeefbf69a2ce1129f6faa9932d9725672e47d6bea609ab79c5d2e0c75bd93404caf55b193708466f049a86f73a8041786f006aa3d8e6589269be7a1e4038a80701ac5492202fbee90571486888ca5a588292f1f57414a132c1c7a4677297e8e20aadd3a48fc36c35d4138fd9c750ff17148c525534afb112607b92d58d87ea7e54b22357c7cbbd22a55a05616427b7a309383e833455522c7b1fde1d88405a15036ab7a6a41975a04dbaf7ec626504a117a9222bb73fc4a355d1afd58d00fbd15d714e82704d40f4e1006490faa065f12581387a2d8dbfe57d0c6f9cc7ca23dfa7fa064513040123739d623cb9fddfe9706c4720a9d5f60cd32cc1773dfaa96c5c80ce72c0b32f491352c95d2781f29895b3320c54c43181a3ff005cfad07590b359c1b3742b39ce1be4cdefb7ddab953a96e68e742e134711a791b693ec234695c12342e20e1b0b2ac5dbfd21232f84d3282e4eb960e69ee9dc90290cfa9b25854e165f1927bf4c926d0ead46a0870129d091fe8bd416d2c0b9009fd5faa0cd24678f4bcaeb4e0fe1efefc21888e9df3595fadcc139c7b39e6bf3919f51007e4e53a690357bd2784ba6c50ade63d8671c26e116fdbd30d48f390ab32af9bfd6e07e3851217dd0924ce4ffec5b19ada95f326eab98d37aa37423acee0bf888475f4d0ab404d4db28508191c2d88a8808196e58f8b16145d9623222eacb8db29e470ee26f4cec9eacb3a6ba405283f1bb5b5a1caa54205b4b28b0c5a55456f5c5df740471986185386a33e46efe408289a675045427adc8dc4eb84c28ab7439b45c1c3a4e532fa1694ca023e126ae7481ed9901f2051317682bf2af002946ea134f64243dc0b2d848ed4dbffe5fcaba51eb260d2d6a66c505c9b6b4ff2e916a21db599eecf450e28747b34e587197729e8cac55a38a6bbb2d36fb44e3d3935133e91d1bc2f90b4a7ee834a71471a4addc6832b6380ddc293e11afe91a69b0c19f574cd4553aef1228025c6273192fe85ef493ca6809578061b3096cd71935987819c33f3ac0d3c6360b56d4a2cb4f805628abd3a68c104a925eebc69231ad27545b7ceb790915ed936120b5beb94543278ce565a2898f2e7e10f08305a3012f70c2a72221d6a887492921597872b2696c912e07460bdaa545cb9648ae0e597e7e6188b351b2cd0adf671c69da5c01ed9b335e2f2e129e57fe8b590cb86cd0ead22ad4b2d38d0e3f6780897124e46af63b8b713d132cf7a2d511ece5ed70c42500874d47432811d53ed59f977018a69de1067cff5d0adf0b3977577852fb73d5d6abf358173df2f9533c1dccbe1ee3de2402519b030ba71350c39bd402bed70433d475d2b4c8c36d948e42b2ecc66a05dbdae82024d96666c65f9462373c6e3cf12c8c1ed30cdc934c7e08b27fddb8a53f23c2c79eae29361d7ddea9e771f65555dcc6efd0d02db1d2678b49a5f9422f065e91f96bea3151fd283433efc57dd69a3a727bd9da113d0b18bdf61e7ac3ae676ea42c646d456fc47dae67fdf4896ff9749607a3ec2217310af9c17daa9e2c0e31c5eabc88224f9a3ffa689b4cc2d35515f12898702a80b322ae4d49ad413c0b377f3173309a40248ccc0fde6212976a01ff9246da203475b17e6c10610c988edbfbc08219024623ff03ec8ad2450d27649744b53195d655f6d58159ef56abd19e5618e318b71d6e70f7b0de0244563b0cd057a4d428cf54d8f40be55373feab5e625e91cf0dd8e4cfc9a8a224b562ded6a3ed5e2bd2cd899cf9a184d8053573a7a894dbac88b3829dbbf4e457e76486a34829af5ee68e90afe342294a2f4975dfcc070ff4e75e2227703ee091a70209b1e999df481d170d61524133bcae5c1ef99c79fcae0ab91a8115e9f10f368cbadc66d1ac97f954465a7b5191e4627ab996a840759a39929baa0b83a9627840fd6b3c9a1ad9e5fe9c17719bbe4aebf2cd9c25a23fb949bb7710e9ef7cf76a68c569858909807970c40da84689153e9ef3553e1da3378925fd6fadd1100ee036c7dbba4e50a2023decd56ffec81e9ba1ad3757abdb3c657017497545d66946c40d292288f5db7b3b747c8f69f2c5d22b74d1fadc36692bc92daf279ca58068f4170aa380806d84e68e33f9a947fde10c712cc7f491128c6b1be1c48197785ab8d7f4e91878bc3d2e565dd43d56db536b4db312afeee2ef999018581bd73d570612af290a126b5db783670b2c6f94252646be469c7b8b6d307f4ef082422be416c4ae12b4524fc9ab913e8cfcc4ac6805a4f83143f8355bae1450b9562ded9ad03160b5b9e2ea21ba121e859655b9de4fee3357d45bebc06c24571f9e871f20d99fa5a9a13e286628d0fd065f65a39db525dd38e6daffe992c5211f5cc352c5cc508f29742f7ebd7381ad753cbc95ece31d48c8733f6f207b06fb68fabbc8a0784dbe887aaa5596735bd221d49d7ac005db8874d166e86f529bbd2991fb72ec375e331afdf7e71df742d173fca0d92c6bab11aa7d122b97a3dc6583f88f8f6cd0841d9ec6a96d5cc09918f01d4d59099855ac31f0ceb81cd9d0af70ed91b12a237a62a5e08eadca9d69995be4ca4507a97098a3db74bd5a50210dd77ba5c6f580cf8411ed978110ff8a72de5831051100dc66048a68cd8c6b4de1864772b482cdef3abfb465b3f8403c796acfe35b04977193ea5c2d69f44045a9daadaa770ffffb49daed28a7da64cbfc316f88d9babdde15a2bed08e3af8eeae879c2c17ebc7c440eb162d93a72d79a5d02118560c9aa466907052a7686d41d242715dec78d2fcdf3847a54728536f5d2f748d49f8d79bb119b4a45e9583610e11adf0307f3ac5277fc6930d3025e0b55be35815c8f0441fda80bb70ae831fa7fac43dbace01b69d9dfcd442c1ebd8507d9dd668ffc2430ebb694bc37b0c0de58a0959740e31f087a9eaa07c21b04b4b1cb87cc72dfcfb5d63e611e242b3b15579908450182e6741fde39ea7ada91ddd40ea98d8db732c03e67477f13fb870774224201d6267880fe3a77eea882cf94e9e97efd7d98fb72d519dfd88702b93ec8d2b9b471aeda5f0cef37f719895ce71128335b7ee78ecf9c1dd75a8c19fd583fa4c0098d91f09f7de7c0ed1a55cd79ec1a7188c1e1948883cbb3683f17b5e4580ae005d990f75f6d5cabde02f6a22037b88d5336c740d312ec5bcda3aeef1efd20c7fe27c147fbb9cc1f533f8e6e942b64f9655d4c37a053dc297eac9ea69712472d0d48e0f46ab977b46e79a9648151095ffaf38bbce2474a6dfea9ed32cc62ac2d46676072994c670d8e179e940cea73058a97ffdaef76bd6b7acab9a1cb4134caf07117e6b25607931408862f5f9dd955d906c6024f7ac4e645212e25ef30aef6239d348634a5f0036b6c5ba9d2f309081c6ce5f25d9ac705652d118328cd4c8933c2e93f5b5792ed757902f1d1e25f9b8d1e49a858e011e38f84af82f81b0b3e131e74e0c196e6a5dd712265f4efa93b8a524c66bd27bd4786f9bce489e9e1c739126dff0c65f54f989528fcba9ce1496ecec06b44f6e2e167cb26caceb2be6a19ad5c3864c3fe8b6ef3fda45f2e3117dd74db96ad69592dc4c9963e0ff5e2f3499a8b2b3101270f6e477b127642eb9e09288e8c1ea7550f7118f6a40435f84f79152765a38d82262fd6d2a19a11acb0a9016a75a639224b44d305dc4d9a14a3243db5429163b1a4d9c1a462f6bcfc174457254d0db743e26f94ad4df8f44341f0b8890433bd7f50adde8018f77246e7e81882ac11e21ae0818caf32a690309c59cc6b09fa99042a77c91533c60799ac7e28eaa2f90b83766bf76487309d441f169e</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      简易加密文案
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Redis-2</title>
    <link href="https://unit-serow.github.io/2020/02/16/Redis-2/"/>
    <id>https://unit-serow.github.io/2020/02/16/Redis-2/</id>
    <published>2020-02-16T10:14:47.000Z</published>
    <updated>2020-02-17T18:59:38.776Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --><h2 id="Redis-2"><a href="#Redis-2" class="headerlink" title="Redis-2"></a>Redis-2</h2><ul><li>配置与数据类型简述</li></ul><hr><h3 id="Redis配置"><a href="#Redis配置" class="headerlink" title="Redis配置"></a>Redis配置</h3><ul><li>启动Redis<blockquote><p><code>$ redis-server</code></p></blockquote></li><li>打开终端(查看redis是否启动)<blockquote><p><code>$ redis-cli</code><br><code>redis 127.0.0.1:6379&gt;</code><br>本机IP:<code>127.0.0.1</code>，redis服务端口:<code>6379</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@debian:~# redis-cli</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><hr><ul><li><p>配置文件</p><blockquote><p><code>/安装目录/redis.conf</code></p></blockquote></li><li><p>CONFIG命令用于查看或设置配置项</p></li><li><p>命令格式</p><blockquote><p><code>redis 127.0.0.1:6379&gt; CONFIG GET CONFIG_SETTING_NAME</code><br><code>*</code> 用于匹配所有配置项<br><code>redis 127.0.0.1:6379&gt; CONFIG GET *</code></p></blockquote></li><li><p>可以通过修改redis.conf文件或使用 CONFIG set 命令来修改配置</p></li><li><p>CONFIG SET 命令</p></li><li><p>基本语法：</p><blockquote><p><code>redis 127.0.0.1:6379&gt; CONFIG SET CONFIG_SETTING_NAME NEW_CONFIG_VALUE</code></p></blockquote></li><li><p>对于GONFIG的参数与redis.conf的配置项在本篇内不进行过多阐述</p></li></ul><hr><h3 id="数据类型简述"><a href="#数据类型简述" class="headerlink" title="数据类型简述"></a>数据类型简述</h3><ul><li>Redis支持五种数据类型:</li><li>String(字符串)</li><li>Hash(哈希)</li><li>List(列表)</li><li>Set(集合)</li><li>Zset(sorted set:有序集合)</li></ul><hr><ul><li>本篇中的应用实例简述只列举出最基本的用法，其他命令不会多做阐述</li><li>在命令提示符内输入命令时Redis会给出对应的相关提示</li><li>删除:<code>DEL KEY_name</code></li></ul><hr><ol><li>String(字符串)</li></ol><ul><li><p>String是redis最基本的类型，方式是一个<code>Key</code>对应一个<code>Value</code></p></li><li><p>String类型是二进制安全的，即Redis的String可以包含任何数据，包括序列化的对象与任何形式的图片</p></li><li><p>String类型的值最大能存储512MB</p></li><li><p>相关命令:<code>SET</code>与<code>GET</code></p></li><li><p>应用实例:</p></li><li><p>使用Redis中的<code>SET</code>与<code>GET</code>命令，<code>Key</code>为<code>UNIT</code>，<code>Value</code>为<code>serow</code></p><blockquote><p><code>SET UNIT &quot;serow&quot;</code><br><code>GET UNIT</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET UNIT &quot;serow&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; GET UNIT</span><br><span class="line">&quot;serow&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><blockquote><p><code>DEL UNIT</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><hr><ol start="2"><li>Hash(哈希)</li></ol><ul><li><p>Redis hash是一个键值(key=&gt;value)对集合</p></li><li><p>Redis hash是一个String类型的<code>field</code>和<code>value</code>的映射表</p></li><li><p>Hash适合用于存储对象</p></li><li><p>每个hash可以存储<code>2^32-1</code>键值对(40多亿)</p></li><li><p>相关命令:<code>HMSET</code>与<code>HGET</code></p></li><li><p>应用实例:</p></li><li><p>使用Redis中的<code>HMSET</code>与<code>HGET</code>命令，<code>HMSET</code>设置了两个<code>field=&gt;value</code>对，<code>HGET</code>获取对应<code>field</code>对应的<code>value</code></p><blockquote><p><code>HMSET UNIT field1 &quot;serow&quot; field2 &quot;takin&quot;</code><br><code>HGET UNIT field1</code><br><code>HGET UNIT field2</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; HMSET UNIT field1 &quot;serow&quot; field2 &quot;takin&quot;</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; HGET UNIT field1</span><br><span class="line">&quot;serow&quot;</span><br><span class="line">127.0.0.1:6379&gt; HGET UNIT field2</span><br><span class="line">&quot;takin&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><blockquote><p><code>DEL UNIT</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><hr><ol start="3"><li>List(列表)</li></ol><ul><li><p>Redis 列表是简单的字符串列表，按照插入顺序排序</p></li><li><p>可以添加一个元素到列表的头部(左侧)或者尾部(右侧)</p></li><li><p>列表最多可存储<code>2^32-1</code>元素 (4294967295, 每个列表可存储40多亿)</p></li><li><p>相关命令:<code>LPUSH</code>与<code>LRANGE</code></p></li><li><p>应用实例:</p></li><li><p>使用Redis中的<code>LPUSH</code>与<code>LRANGE</code>命令</p><blockquote><p><code>LPUSH UNIT redis</code><br><code>LPUSH UNIT serow</code><br><code>LPUSH UNIT takin</code><br><code>LRANGE UNIT 0 10</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; LPUSH UNIT redis</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; LPUSH UNIT serow</span><br><span class="line">(integer) 2</span><br><span class="line">127.0.0.1:6379&gt; LPUSH UNIT takin</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; LRANGE UNIT 0 10</span><br><span class="line">1) &quot;takin&quot;</span><br><span class="line">2) &quot;serow&quot;</span><br><span class="line">3) &quot;redis&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><blockquote><p><code>DEL UNIT</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><ul><li><p>还可以写为</p><blockquote><p><code>LPUSH A A B C D E F G</code><br><code>LRANGE A 0 10</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; LPUSH A A B C D E F G</span><br><span class="line">(integer) 7</span><br><span class="line">127.0.0.1:6379&gt; LRANGE A 0 10</span><br><span class="line">1) &quot;G&quot;</span><br><span class="line">2) &quot;F&quot;</span><br><span class="line">3) &quot;E&quot;</span><br><span class="line">4) &quot;D&quot;</span><br><span class="line">5) &quot;C&quot;</span><br><span class="line">6) &quot;B&quot;</span><br><span class="line">7) &quot;A&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><blockquote><p><code>DEL A</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL A</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL A</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><hr><ol start="4"><li>SET(集合)</li></ol><ul><li><p>Redis的Set是String类型的无序集合</p></li><li><p>集合是通过哈希表实现的，即添加，删除，查找的复杂度都是O(1)</p></li><li><p>集合中最大的成员数为<code>2^32-1</code>(4294967295, 每个集合可存储40多亿个成员)</p></li><li><p>相关命令:<code>SADD</code>与<code>SMEMBERS</code></p></li><li><p>应用实例:</p></li><li><p>使用Redis中的<code>SADD</code>与<code>SMEMBERS</code>命令</p><blockquote><p><code>SADD UNIT redis</code><br><code>SADD UNIT serow</code><br><code>SADD UNIT takin</code><br><code>SADD UNIT takin</code><br><code>SMEMBERS UNIT</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SADD UNIT redis</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD UNIT serow</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD UNIT takin</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; SADD UNIT takin</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS UNIT</span><br><span class="line">1) &quot;redis&quot;</span><br><span class="line">2) &quot;takin&quot;</span><br><span class="line">3) &quot;serow&quot;</span><br></pre></td></tr></table></figure></li><li><p>实例中takin添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略</p></li><li><p>删除</p><blockquote><p><code>DEL UNIT</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><hr><ol start="5"><li>ZSET(sorted set：有序集合)</li></ol><ul><li><p>Redis zset和Set一样也是String类型元素的集合,且不允许重复的成员</p></li><li><p>不同的是每个元素都会关联一个<code>double类型</code>的分数</p></li><li><p>Redis正是通过分数来为集合中的成员进行从小到大的排序</p></li><li><p>Zset的成员是唯一的,但分数(score)却可以重复</p></li><li><p>相关命令:<code>ZADD</code>与<code>ZRANGEBYSCORE</code></p></li><li><p>基本语法:</p></li><li><p>添加元素到集合，元素在集合中存在则更新对应<code>score</code></p><blockquote><p><code>zadd key score member</code></p></blockquote></li><li><p>应用实例:</p></li><li><p>使用Redis中的ZADD与ZRANGEBYSCORE命令</p><blockquote><p><code>ZADD UNIT 0 redis</code><br><code>ZADD UNIT 0 serow</code><br><code>ZADD UNIT 0 takin</code><br><code>ZADD UNIT 0 takin</code><br><code>ZRANGEBYSCORE UNIT 0 1000</code></p></blockquote></li><li><p>输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; ZADD UNIT 0 redis</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; ZADD UNIT 0 serow</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; ZADD UNIT 0 takin</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; ZADD UNIT 0 takin</span><br><span class="line">(integer) 0</span><br><span class="line">127.0.0.1:6379&gt; ZRANGEBYSCORE UNIT 0 1000</span><br><span class="line">1) &quot;redis&quot;</span><br><span class="line">2) &quot;serow&quot;</span><br><span class="line">3) &quot;takin&quot;</span><br></pre></td></tr></table></figure></li><li><p>删除</p><blockquote><p><code>DEL UNIT</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; DEL UNIT</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><hr><p><strong>各个数据类型应用场景:</strong></p><table><thead><tr><th align="left">类型</th><th align="left">简介</th><th align="left">特性</th><th align="left">场景</th></tr></thead><tbody><tr><td align="left">String(字符串)</td><td align="left">二进制安全</td><td align="left">可以包含任何数据,比如jpg图片或者序列化的对象,一个键最大能存储512M</td><td align="left">—</td></tr><tr><td align="left">Hash(字典)</td><td align="left">键值对集合,即编程语言中的Map类型</td><td align="left">适合存储对象,并且可以像数据库中update一个属性一样只修改某一项属性值(Memcached中需要取出整个字符串反序列化成对象修改完再序列化存回去)</td><td align="left">存储,读取,修改用户属性</td></tr><tr><td align="left">List(列表)</td><td align="left">链表(双向链表)</td><td align="left">增删快,提供了操作某一段元素的API</td><td align="left">1. 最新消息排行等功能(比如朋友圈的时间线) 2.消息队列</td></tr><tr><td align="left">Set(集合)</td><td align="left">哈希表实现,元素不重复</td><td align="left">1. 添加、删除,查找的复杂度都是O(1) 2. 为集合提供了求交集、并集、差集等操作</td><td align="left">1.共同好友 2. 利用唯一性,统计访问网站的所有独立ip 3、好友推荐时,根据tag求交集,大于某个阈值就可以推荐</td></tr><tr><td align="left">Sorted Set(有序集合)</td><td align="left">将Set中的元素增加一个权重参数score,元素按score有序排列</td><td align="left">数据插入集合时,已经进行天然排序</td><td align="left">1. 排行榜 2. 带权重的消息队列</td></tr></tbody></table><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --&gt;&lt;h2 id=&quot;Redis-2&quot;&gt;&lt;a href=&quot;#Redis-2&quot; class=&quot;headerlink&quot; title=&quot;Redis-2&quot;&gt;&lt;/a&gt;Red
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis-1</title>
    <link href="https://unit-serow.github.io/2020/02/16/Redis-1/"/>
    <id>https://unit-serow.github.io/2020/02/16/Redis-1/</id>
    <published>2020-02-16T07:55:15.000Z</published>
    <updated>2020-02-17T18:59:13.720Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --><h3 id="REmote-DIctionary-Server-Redis"><a href="#REmote-DIctionary-Server-Redis" class="headerlink" title="REmote DIctionary Server(Redis)"></a>REmote DIctionary Server(Redis)</h3><p><strong>概述:</strong></p><ul><li>是一种Key-Value数据库</li><li>还可称为key-value存储系统，即数据结构服务器</li><li>由ANSI C语言编写</li><li>是基于BSD协议的<code>Free software</code></li><li>支持多种语言的API</li><li>支持网络</li><li>可基于内存亦可持久化的日志型</li></ul><hr><ul><li>Redis具有极为先进的数据管理方式与处理算法</li><li>Redis与其它<code>key-value</code>缓存产品相比的特有性质:<blockquote><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用<br>Redis不仅仅支持简单的<code>key-value</code>类型的数据，同时还提供<code>list</code>,<code>set</code>,<code>zset</code>,<code>hash</code>等数据结构的存储<br>Redis支持数据的备份，即<code>master-slave</code>模式的数据备份<br>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径<br>Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象<br>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存<br>在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情<br>同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问</p></blockquote></li></ul><hr><ul><li>Redis特点<blockquote><p>性能特点: Redis能读的速度是<code>110000次/s</code>，写的速度是<code>81000次/s</code><br>数据类型特点: Redis支持二进制案例的<code>Strings</code>,<code>Lists</code>,<code>Hashes</code>,<code>Sets</code>及<code>Ordered Sets</code>数据类型操作</p></blockquote></li><li>原子性质:<blockquote><p>Redis的所有操作都是原子性的(只有成功且完全执行与失败且完全不执行)，单个操作是原子性的<br>多个操作也支持事务，即原子性，通过<code>MULTI</code>和<code>EXEC</code>指令对其进行封装</p></blockquote></li></ul><hr><ul><li><p>原子性操作:</p><blockquote><p>将任何一套完整数据处理操作定义为一个事务<br>该事务要么完全执行，要么完全不执行，不会出现执行到一半因为错误而中止<br>以此绝对的保证了数据的完整性<br>如果把事务比作一个程序，它要么完整的被执行,要么完全不执行</p></blockquote></li><li><p>key value 存储</p><blockquote><p>键值存储，即为key=&gt;value<br>键=&gt;值(key=&gt;value)对，键唯一，对应一个值，值的形式随意<br>以此绝对的保证了数据结构的完备性</p></blockquote></li></ul><hr><p><strong>相关基本概念(基本数据结构概念)</strong></p><ul><li>String: 字符串</li><li>Hash: 散列</li><li>List: 列表</li><li>Set: 集合</li><li>Sorted Set: 有序集合</li></ul><hr><p><strong>参考资料:</strong></p><ul><li><p>文档<a href="https://redis.io/documentation" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://redis.io/documentation</code></p></blockquote></li><li><p>官网<a href="https://redis.io/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://redis.io/</code></p></blockquote></li><li><p>获取<a href="https://redis.io/download" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://redis.io/download</code></p></blockquote></li><li><p>配置说明<a href="https://redis.io/topics/config" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://redis.io/topics/config</code></p></blockquote></li><li><p>apt-get自动化获取</p><blockquote><p><code>apt-get install redis-server</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;REmote-DIctionary-Server-Redis&quot;&gt;&lt;a href=&quot;#REmote-DIctionary-Server-Red
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NoSQL" scheme="https://unit-serow.github.io/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL-4</title>
    <link href="https://unit-serow.github.io/2020/02/16/PostgreSQL-4/"/>
    <id>https://unit-serow.github.io/2020/02/16/PostgreSQL-4/</id>
    <published>2020-02-16T07:07:38.000Z</published>
    <updated>2020-02-16T07:10:57.492Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Feb 16 2020 15:11:02 GMT+0800 (中国标准时间) --><h3 id="PostSQL-4"><a href="#PostSQL-4" class="headerlink" title="PostSQL-4"></a>PostSQL-4</h3><p><strong>PostgreSQL命令语句便捷参考(总览)</strong></p><ul><li><p>中文手册详细资料<a href="http://www.postgres.cn/docs/9.6/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>http://www.postgres.cn/docs/9.6/</code></p></blockquote></li><li><p>输出帮助内容</p><blockquote><p><code>postgres-# \help &lt;command_name&gt;</code></p></blockquote></li></ul><hr><p><strong>CREATE</strong></p><ul><li><p>定义一个新的聚集函数</p><blockquote><p><code>CREATE AGGREGATE</code></p></blockquote></li><li><p>定义一个用户定义的转换</p><blockquote><p><code>CREATE CAST</code></p></blockquote></li><li><p>定义一个新的约束触发器</p><blockquote><p><code>CREATE CONSTRAINT TRIGGER</code></p></blockquote></li><li><p>定义一个新的的编码转换</p><blockquote><p><code>CREATE CONVERSION</code></p></blockquote></li><li><p>创建新数据库</p><blockquote><p><code>CREATE DATABASE</code></p></blockquote></li><li><p>定义一个新域</p><blockquote><p><code>CREATE DOMAIN</code></p></blockquote></li><li><p>定义一个新函数</p><blockquote><p><code>CREATE FUNCTION</code></p></blockquote></li><li><p>定义一个新的用户组</p><blockquote><p><code>CREATE GROUP</code></p></blockquote></li><li><p>定义一个新索引</p><blockquote><p><code>CREATE INDEX</code></p></blockquote></li><li><p>定义一种新的过程语言</p><blockquote><p><code>CREATE LANGUAGE</code></p></blockquote></li><li><p>定义一个新的操作符</p><blockquote><p><code>CREATE OPERATOR</code></p></blockquote></li><li><p>定义一个新的操作符表</p><blockquote><p><code>CREATE OPERATOR CLASS</code></p></blockquote></li><li><p>定义一个新的数据库角色</p><blockquote><p><code>CREATE ROLE</code></p></blockquote></li><li><p>定义一个新重写规则</p><blockquote><p><code>CREATE RULE</code></p></blockquote></li><li><p>定义一个新模式</p><blockquote><p><code>CREATE SCHEMA</code></p></blockquote></li><li><p>定义一个新的外部服务器</p><blockquote><p><code>CREATE SERVER</code></p></blockquote></li><li><p>定义一个新序列发生器</p><blockquote><p><code>CREATE SEQUENCE</code></p></blockquote></li><li><p>定义一个新表</p><blockquote><p><code>CREATE TABLE</code></p></blockquote></li><li><p>从一条查询的结果中定义一个新表</p><blockquote><p><code>CREATE TABLE AS</code></p></blockquote></li><li><p>定义一个新的表空间</p><blockquote><p><code>CREATE TABLESPACE</code></p></blockquote></li><li><p>定义一个新的触发器</p><blockquote><p><code>CREATE TRIGGER</code></p></blockquote></li><li><p>定义一个新的数据类型</p><blockquote><p><code>CREATE TYPE</code></p></blockquote></li><li><p>创建一个新的数据库用户帐户</p><blockquote><p><code>CREATE USER</code></p></blockquote></li><li><p>定义一个视图</p><blockquote><p><code>CREATE VIEW</code></p></blockquote></li></ul><hr><p><strong>ALTER</strong></p><ul><li><p>修改一个聚集函数的定义</p><blockquote><p><code>ALTER AGGREGATE</code></p></blockquote></li><li><p>修改一个排序规则定义</p><blockquote><p><code>ALTER COLLATION</code></p></blockquote></li><li><p>修改一个编码转换的定义</p><blockquote><p><code>ALTER CONVERSION</code></p></blockquote></li><li><p>修改一个数据库</p><blockquote><p><code>ALTER DATABASE</code></p></blockquote></li><li><p>定义默认的访问权限</p><blockquote><p><code>ALTER DEFAULT PRIVILEGES</code></p></blockquote></li><li><p>修改一个域的定义</p><blockquote><p><code>ALTER DOMAIN</code></p></blockquote></li><li><p>修改一个函数的定义</p><blockquote><p><code>ALTER FUNCTION</code></p></blockquote></li><li><p>修改一个用户组</p><blockquote><p><code>ALTER GROUP</code></p></blockquote></li><li><p>修改一个索引的定义</p><blockquote><p><code>ALTER INDEX</code></p></blockquote></li><li><p>改变一个操作符的定义</p><blockquote><p><code>ALTER OPERATOR</code></p></blockquote></li><li><p>修改一个模式的定义</p><blockquote><p><code>ALTER SCHEMA</code></p></blockquote></li><li><p>修改一个序列生成器的定义</p><blockquote><p><code>ALTER SEQUENCE</code></p></blockquote></li><li><p>修改表的定义</p><blockquote><p><code>ALTER TABLE</code></p></blockquote></li><li><p>修改一个表空间的定义</p><blockquote><p><code>ALTER TABLESPACE</code></p></blockquote></li><li><p>修改改变一个触发器的定义</p><blockquote><p><code>ALTER TRIGGER</code></p></blockquote></li><li><p>修改一个类型的定义</p><blockquote><p><code>ALTER TYPE</code></p></blockquote></li><li><p>修改数据库用户帐号</p><blockquote><p><code>ALTER USER</code></p></blockquote></li><li><p>更新一个表中的行</p><blockquote><p><code>UPDATE</code></p></blockquote></li></ul><hr><p><strong>删除</strong></p><ul><li><p>删除一个准备好的查询</p><blockquote><p><code>DEALLOCATE</code></p></blockquote></li><li><p>删除一个表中的行</p><blockquote><p><code>DELETE</code></p></blockquote></li><li><p>删除一个用户定义的聚集函数</p><blockquote><p><code>DROP AGGREGATE</code></p></blockquote></li><li><p>删除一个用户定义的类型转换</p><blockquote><p><code>DROP CAST</code></p></blockquote></li><li><p>删除一个用户定义的编码转换</p><blockquote><p><code>DROP CONVERSION</code></p></blockquote></li><li><p>删除一个数据库</p><blockquote><p><code>DROP DATABASE</code></p></blockquote></li><li><p>删除一个用户定义的域</p><blockquote><p><code>DROP DOMAIN</code></p></blockquote></li><li><p>删除一个函数</p><blockquote><p><code>DROP FUNCTION</code></p></blockquote></li><li><p>删除一个用户组</p><blockquote><p><code>DROP GROUP</code></p></blockquote></li><li><p>删除一个索引</p><blockquote><p><code>DROP INDEX</code></p></blockquote></li><li><p>删除一个过程语言</p><blockquote><p><code>DROP LANGUAGE</code></p></blockquote></li><li><p>删除一个操作符</p><blockquote><p><code>DROP OPERATOR</code></p></blockquote></li><li><p>删除一个操作符表</p><blockquote><p><code>DROP OPERATOR CLASS</code></p></blockquote></li><li><p>删除一个数据库角色</p><blockquote><p><code>DROP ROLE</code></p></blockquote></li><li><p>删除一个重写规则</p><blockquote><p><code>DROP RULE</code></p></blockquote></li><li><p>删除一个模式</p><blockquote><p><code>DROP SCHEMA</code></p></blockquote></li><li><p>删除一个序列</p><blockquote><p><code>DROP SEQUENCE</code></p></blockquote></li><li><p>删除一个表</p><blockquote><p><code>DROP TABLE</code></p></blockquote></li><li><p>删除一个表空间</p><blockquote><p><code>DROP TABLESPACE</code></p></blockquote></li><li><p>删除一个触发器定义</p><blockquote><p><code>DROP TRIGGER</code></p></blockquote></li><li><p>删除一个用户定义数据类型</p><blockquote><p><code>DROP TYPE</code></p></blockquote></li><li><p>删除一个数据库用户帐号</p><blockquote><p><code>DROP USER</code></p></blockquote></li><li><p>删除一个视图</p><blockquote><p><code>DROP VIEW</code></p></blockquote></li><li><p>清空一个或一组表</p><blockquote><p><code>TRUNCATE</code></p></blockquote></li></ul><hr><p><code>SELECT</code></p><blockquote><p>从表或视图中取出若干行</p></blockquote><p><code>SELECT INTO</code></p><blockquote><p>从一个查询的结果中定义一个新表</p></blockquote><hr><p><code>SET</code></p><blockquote><p>修改运行时参数</p></blockquote><p><code>SET CONSTRAINTS</code></p><blockquote><p>设置当前事务的约束检查模式</p></blockquote><p><code>SET SESSION AUTHORIZATION</code></p><blockquote><p>为当前会话设置会话用户标识符和当前用户标识符</p></blockquote><p><code>SET TRANSACTION</code></p><blockquote><p>开始一个事务块</p></blockquote><hr><p><strong>其它</strong></p><ul><li><p>收集与数据库有关的统计</p><blockquote><p><code>ANALYZE</code></p></blockquote></li><li><p>用于退出当前事务</p><blockquote><p><code>ABORT</code></p></blockquote></li><li><p>开始一个事务块</p><blockquote><p><code>BEGIN</code></p></blockquote></li><li><p>开始一个事务块</p><blockquote><p><code>START TRANSACTION</code></p></blockquote></li><li><p>提交当前事务</p><blockquote><p><code>COMMIT</code></p></blockquote></li><li><p>提交当前的事务</p><blockquote><p><code>END</code></p></blockquote></li><li><p>在当前事务里定义一个新的保存点</p><blockquote><p><code>SAVEPOINT</code></p></blockquote></li><li><p>回滚到一个保存点</p><blockquote><p><code>ROLLBACK TO SAVEPOINT</code></p></blockquote></li><li><p>退出当前事务</p><blockquote><p><code>ROLLBACK</code></p></blockquote></li><li><p>强制一个事务日志检查点</p><blockquote><p><code>CHECKPOINT</code></p></blockquote></li><li><p>定义一个游标</p><blockquote><p><code>DECLARE</code></p></blockquote></li><li><p>定位一个游标</p><blockquote><p><code>MOVE</code></p></blockquote></li><li><p>用游标从查询中抓取行</p><blockquote><p><code>FETCH</code></p></blockquote></li><li><p>关闭游标</p><blockquote><p><code>CLOSE</code></p></blockquote></li><li><p>重建索引</p><blockquote><p><code>REINDEX</code></p></blockquote></li><li><p>根据一个索引对某个表盘簇化排序</p><blockquote><p><code>CLUSTER</code></p></blockquote></li><li><p>定义或者改变一个对象的注释</p><blockquote><p><code>COMMENT</code></p></blockquote></li><li><p>删除一个前面定义的保存点</p><blockquote><p><code>RELEASE SAVEPOINT</code></p></blockquote></li><li><p>在表和文件之间拷贝数据</p><blockquote><p><code>COPY</code></p></blockquote></li><li><p>创建一个准备好的查询</p><blockquote><p><code>PREPARE</code></p></blockquote></li><li><p>执行一个准备好的查询</p><blockquote><p><code>EXECUTE</code></p></blockquote></li><li><p>显示一个语句的执行规划</p><blockquote><p><code>EXPLAIN</code></p></blockquote></li><li><p>生成一个通知</p><blockquote><p><code>NOTIFY</code></p></blockquote></li><li><p>定义访问权限</p><blockquote><p><code>GRANT</code></p></blockquote></li><li><p>删除访问权限</p><blockquote><p><code>REVOKE</code></p></blockquote></li><li><p>在表中创建新行，即插入数据</p><blockquote><p><code>INSERT</code></p></blockquote></li><li><p>监听一个通知</p><blockquote><p><code>LISTEN</code></p></blockquote></li><li><p>停止监听通知信息</p><blockquote><p><code>UNLISTEN</code></p></blockquote></li><li><p>加载或重载一个共享库文件</p><blockquote><p><code>LOAD</code></p></blockquote></li><li><p>锁定一个表</p><blockquote><p><code>LOCK</code></p></blockquote></li><li><p>把一个运行时参数值恢复为默认值</p><blockquote><p><code>RESET</code></p></blockquote></li><li><p>显示运行时参数的值</p><blockquote><p><code>SHOW</code></p></blockquote></li><li><p>垃圾收集以及可选地分析一个数据库</p><blockquote><p><code>VACUUM</code></p></blockquote></li><li><p>计算一个或一组行</p><blockquote><p><code>VALUES</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Feb 16 2020 15:11:02 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;PostSQL-4&quot;&gt;&lt;a href=&quot;#PostSQL-4&quot; class=&quot;headerlink&quot; title=&quot;PostSQL-4&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="ORDBMS" scheme="https://unit-serow.github.io/tags/ORDBMS/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL-3</title>
    <link href="https://unit-serow.github.io/2020/02/16/PostgreSQL-3/"/>
    <id>https://unit-serow.github.io/2020/02/16/PostgreSQL-3/</id>
    <published>2020-02-15T20:02:03.000Z</published>
    <updated>2020-02-15T20:07:26.216Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Feb 16 2020 04:07:33 GMT+0800 (中国标准时间) --><h3 id="PostgreSQL-3"><a href="#PostgreSQL-3" class="headerlink" title="PostgreSQL-3"></a>PostgreSQL-3</h3><p><strong>TABLES1数据结构</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ID  A  B  C  D  TIME</span><br><span class="line"> 1  1  1 2020-02-16</span><br><span class="line"> 2  2  2 2020-02-16</span><br><span class="line"> 3  3  3 2020-02-16 -</span><br><span class="line"> 4  1  4 2020-02-16</span><br><span class="line"> 5  2  1 2020-02-16</span><br><span class="line"> 6  2  7 2020-02-16</span><br><span class="line"> 7  3  7 2020-02-16</span><br><span class="line"> 8  1  8 2020-02-16</span><br><span class="line"> 9  4  1 2020-02-16</span><br><span class="line">10 4  6 2020-02-16</span><br><span class="line">11 1  3 2020-02-16</span><br><span class="line">12 2  2 2020-02-17 -</span><br><span class="line">13 4  9 2020-02-16 -</span><br></pre></td></tr></table></figure><hr><blockquote><p>创建并连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE TEST;</span><br><span class="line">\c test;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# CREATE DATABASE TEST;</span><br><span class="line">CREATE DATABASE</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# \c test;</span><br><span class="line">您现在已经连接到数据库 &quot;test&quot;,用户 &quot;postgres&quot;.</span><br></pre></td></tr></table></figure><blockquote><p>创建A类表TABLES1</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE SCHEMA A</span><br><span class="line">CREATE TABLE A.TABLES1 (</span><br><span class="line">ID SERIAL PRIMARY KEY NOT NULL,</span><br><span class="line">A INT NOT NULL, </span><br><span class="line">B INT NOT NULL,</span><br><span class="line">C INT NOT NULL,</span><br><span class="line">D INT NOT NULL,</span><br><span class="line">TIME DATE);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test-# CREATE TABLE A.TABLES1 (</span><br><span class="line">test(# ID SERIAL PRIMARY KEY NOT NULL,</span><br><span class="line">test(# A INT NOT NULL, </span><br><span class="line">test(# B INT NOT NULL,</span><br><span class="line">test(# C INT NOT NULL,</span><br><span class="line">test(# D INT NOT NULL,</span><br><span class="line">test(# TIME DATE);</span><br><span class="line">CREATE SCHEMA</span><br></pre></td></tr></table></figure><hr><blockquote><p>向A类表TABLES1内插入数据</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO A.TABLES1</span><br><span class="line">(A,B,C,D,TIME)</span><br><span class="line">VALUES</span><br><span class="line">(1, 1, 2, 3, &#39;2020-02-16&#39;),</span><br><span class="line">(2, 2, 4, 6, &#39;2020-02-16&#39;),</span><br><span class="line">(3, 3, 9, 2, &#39;2020-02-16&#39;),</span><br><span class="line">(1, 4, 8, 3, &#39;2020-02-16&#39;),</span><br><span class="line">(2, 1, 1, 1, &#39;2020-02-16&#39;),</span><br><span class="line">(2, 7, 5, 2, &#39;2020-02-16&#39;),</span><br><span class="line">(3, 7, 3, 6, &#39;2020-02-16&#39;),</span><br><span class="line">(1, 8, 7, 7, &#39;2020-02-16&#39;),</span><br><span class="line">(4, 1, 7, 8, &#39;2020-02-16&#39;),</span><br><span class="line">(4, 6, 1, 9, &#39;2020-02-16&#39;),</span><br><span class="line">(1, 3, 8, 1, &#39;2020-02-16&#39;),</span><br><span class="line">(2, 2, 4, 5, &#39;2020-02-17&#39;),</span><br><span class="line">(4, 9, 6, 7, &#39;2020-02-16&#39;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# INSERT INTO A.TABLES1</span><br><span class="line">test-# (A,B,C,D,TIME)</span><br><span class="line">test-# VALUES</span><br><span class="line">test-# (1, 1, 2, 3, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (2, 2, 4, 6, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (3, 3, 9, 2, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (1, 4, 8, 3, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (2, 1, 1, 1, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (2, 7, 5, 2, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (3, 7, 3, 6, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (1, 8, 7, 7, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (4, 1, 7, 8, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (4, 6, 1, 9, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (1, 3, 8, 1, &#39;2020-02-16&#39;),</span><br><span class="line">test-# (2, 2, 4, 5, &#39;2020-02-17&#39;),</span><br><span class="line">test-# (4, 9, 6, 7, &#39;2020-02-16&#39;);</span><br><span class="line">INSERT 0 13</span><br></pre></td></tr></table></figure><p><code>SELECT * FROM A.TABLES1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT * FROM A.TABLES1;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  1 | 1 | 1 | 2 | 3 | 2020-02-16</span><br><span class="line">  2 | 2 | 2 | 4 | 6 | 2020-02-16</span><br><span class="line">  3 | 3 | 3 | 9 | 2 | 2020-02-16</span><br><span class="line">  4 | 1 | 4 | 8 | 3 | 2020-02-16</span><br><span class="line">  5 | 2 | 1 | 1 | 1 | 2020-02-16</span><br><span class="line">  6 | 2 | 7 | 5 | 2 | 2020-02-16</span><br><span class="line">  7 | 3 | 7 | 3 | 6 | 2020-02-16</span><br><span class="line">  8 | 1 | 8 | 7 | 7 | 2020-02-16</span><br><span class="line">  9 | 4 | 1 | 7 | 8 | 2020-02-16</span><br><span class="line"> 10 | 4 | 6 | 1 | 9 | 2020-02-16</span><br><span class="line"> 11 | 1 | 3 | 8 | 1 | 2020-02-16</span><br><span class="line"> 12 | 2 | 2 | 4 | 5 | 2020-02-17</span><br><span class="line"> 13 | 4 | 9 | 6 | 7 | 2020-02-16</span><br><span class="line">(13 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>复制A类表TABLES1结构与表内数据于TABLES2</p></blockquote><p><code>SELECT * FROM TABLES2;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT * FROM A.TABLES2;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  1 | 1 | 1 | 2 | 3 | 2020-02-16</span><br><span class="line">  2 | 2 | 2 | 4 | 6 | 2020-02-16</span><br><span class="line">  3 | 3 | 3 | 9 | 2 | 2020-02-16</span><br><span class="line">  4 | 1 | 4 | 8 | 3 | 2020-02-16</span><br><span class="line">  5 | 2 | 1 | 1 | 1 | 2020-02-16</span><br><span class="line">  6 | 2 | 7 | 5 | 2 | 2020-02-16</span><br><span class="line">  7 | 3 | 7 | 3 | 6 | 2020-02-16</span><br><span class="line">  8 | 1 | 8 | 7 | 7 | 2020-02-16</span><br><span class="line">  9 | 4 | 1 | 7 | 8 | 2020-02-16</span><br><span class="line"> 10 | 4 | 6 | 1 | 9 | 2020-02-16</span><br><span class="line"> 11 | 1 | 3 | 8 | 1 | 2020-02-16</span><br><span class="line"> 12 | 2 | 2 | 4 | 5 | 2020-02-17</span><br><span class="line"> 13 | 4 | 9 | 6 | 7 | 2020-02-16</span><br><span class="line">(13 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>输出A类表TABLES1与A类表TABLES2内ID等于6或3与7或4的行</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM A.TABLES1 WHERE ID&#x3D;6 OR ID&#x3D;3</span><br><span class="line">UNION</span><br><span class="line">SELECT * FROM A.TABLES2 WHERE ID&#x3D;7 OR ID&#x3D;4;</span><br></pre></td></tr></table></figure><p><code>SELECT * FROM A.TABLES1 WHERE ID=6 OR ID=3 UNION SELECT * FROM A.TABLES2 WHERE ID=7 OR ID=4;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT * FROM A.TABLES1 WHERE ID&#x3D;6 OR ID&#x3D;3              </span><br><span class="line">UNION</span><br><span class="line">SELECT * FROM A.TABLES2 WHERE ID&#x3D;7 OR ID&#x3D;4;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  6 | 2 | 7 | 5 | 2 | 2020-02-16</span><br><span class="line">  3 | 3 | 3 | 9 | 2 | 2020-02-16</span><br><span class="line">  4 | 1 | 4 | 8 | 3 | 2020-02-16</span><br><span class="line">  7 | 3 | 7 | 3 | 6 | 2020-02-16</span><br><span class="line">(4 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>输出并查询A类表TABLES1内ID等于3或等于4的行</p></blockquote><p><code>SELECT * FROM A.TABLES1 WHERE ID=3 OR ID=4;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT * FROM A.TABLES1 WHERE ID&#x3D;3 OR ID&#x3D;4;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  3 | 3 | 3 | 9 | 2 | 2020-02-16</span><br><span class="line">  4 | 1 | 4 | 8 | 3 | 2020-02-16</span><br><span class="line">(2 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>以偏移量为三为前提，输出并查询A类表TABLES1内的三条数据</p></blockquote><p><code>SELECT * FROM A.TABLES1 LIMIT 3 OFFSET 3;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT * FROM A.TABLES1 LIMIT 3 OFFSET 3;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  4 | 1 | 4 | 8 | 3 | 2020-02-16</span><br><span class="line">  5 | 2 | 1 | 1 | 1 | 2020-02-16</span><br><span class="line">  6 | 2 | 7 | 5 | 2 | 2020-02-16</span><br><span class="line">(3 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>以偏移量为一为前提与排除所有重复数据为前提，输出并查询A类表TABLES1内的四条数据</p></blockquote><p><code>SELECT DISTINCT A,B,C FROM A.TABLES1 LIMIT 4 OFFSET 1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT DISTINCT A,B,C FROM A.TABLES1 LIMIT 4 OFFSET 1;</span><br><span class="line"> a | b | c </span><br><span class="line">---+---+---</span><br><span class="line"> 1 | 3 | 8</span><br><span class="line"> 2 | 1 | 1</span><br><span class="line"> 2 | 7 | 5</span><br><span class="line"> 1 | 1 | 2</span><br><span class="line">(4 行记录)</span><br></pre></td></tr></table></figure><hr><blockquote><p>将A类表TABLES1内B列的结果基于A列进行分组并求和，分组数量小于10且为降序输出</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT A, SUM(B) FROM A.TABLES1 </span><br><span class="line">GROUP BY A </span><br><span class="line">HAVING count(A) &lt; 10 </span><br><span class="line">ORDER BY A DESC;</span><br></pre></td></tr></table></figure><p><code>SELECT A, SUM(B) FROM A.TABLES1 GROUP BY A HAVING count(A) &lt; 10 ORDER BY A DESC;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# SELECT A, SUM(B) FROM A.TABLES1 GROUP BY A HAVING count(A) &lt; 10 ORDER BY A DESC;</span><br><span class="line"> a | sum </span><br><span class="line">---+-----</span><br><span class="line"> 4 |  16</span><br><span class="line"> 3 |  10</span><br><span class="line"> 2 |  12</span><br><span class="line"> 1 |  16</span><br><span class="line">(4 行记录)</span><br></pre></td></tr></table></figure><ul><li>执行逻辑</li></ul><ol><li>将B映射于A，并对A的数值类型进行分组</li><li>SUM()函数将B中映射于A的数值进行求和</li><li>降序输出且组的数量不能大于10</li></ol><hr><blockquote><p>删除两表内所有数据<br><code>TRUNCATE TABLE A.TABLES1;</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# TRUNCATE TABLE A.TABLES1;</span><br><span class="line">TRUNCATE TABLE</span><br></pre></td></tr></table></figure><p><code>TRUNCATE A.TABLES2;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# TRUNCATE TABLE A.TABLES2;</span><br><span class="line">TRUNCATE TABLE</span><br></pre></td></tr></table></figure><p><code>DROP TABLE A.TABLES1;</code></p><p><code>DROP TABLE A.TABLES2;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# DROP TABLE A.TABLES1;</span><br><span class="line">DROP TABLE</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test&#x3D;# DROP TABLE A.TABLES2;</span><br><span class="line">DROP TABLE</span><br></pre></td></tr></table></figure><p><code>DROP DATABASE TEST;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# DROP DATABASE TEST;</span><br><span class="line">DROP DATABASE</span><br></pre></td></tr></table></figure><hr><ul><li>没必要去设计特别复杂的逻辑语句,有时适当分句往往能提高工作效率</li></ul><hr><p><strong>相关概念:</strong></p><table><thead><tr><th align="left">概念</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">SELECT</td><td align="left">查询</td></tr><tr><td align="left">FROM</td><td align="left">来源于…</td></tr><tr><td align="left">DISTINCT</td><td align="left">唯一</td></tr><tr><td align="left">WHERE</td><td align="left">条件</td></tr><tr><td align="left">AND&amp;OR</td><td align="left">逻辑与和逻辑或</td></tr><tr><td align="left">LIKE</td><td align="left">类似于…</td></tr><tr><td align="left">LIMIT</td><td align="left">限制查询结果的输出数量</td></tr><tr><td align="left">OFFSET</td><td align="left">查询结果偏移</td></tr><tr><td align="left">ORDER BY (ASC/DESC)</td><td align="left">排序</td></tr><tr><td align="left">GROUP BY</td><td align="left">分组</td></tr><tr><td align="left">HAVING</td><td align="left">分组之上再设置分组条件</td></tr><tr><td align="left">WITH</td><td align="left">子句封装，将使用指令进行封装以便一键执行</td></tr><tr><td align="left">UNION</td><td align="left">连接</td></tr><tr><td align="left">VIEW</td><td align="left">创建视图</td></tr><tr><td align="left">WHERE可以嵌套查询语句</td><td align="left">所执行嵌套的语句被称为内部查询/子查询</td></tr><tr><td align="left">内聚函数</td><td align="left">可以称为内置函数</td></tr><tr><td align="left">TRUNCATE TABLE</td><td align="left">删除表数据</td></tr></tbody></table><hr><p><strong>常用内聚函数参考</strong></p><ul><li>COUNT 函数:用于计算数据库表中的行数</li><li>MAX 函数:用于查询某一特定列中最大值</li><li>MIN 函数:用于查询某一特定列中最小值</li><li>AVG 函数:用于计算某一特定列中平均值</li><li>SUM 函数:用于计算数字列所有值的总和</li><li>ARRAY 函数:用于输入值(包括null)添加到数组中</li><li>Numeric 函数:完整列出一个SQL中所需的操作数的函数</li><li>String 函数:完整列出一个SQL中所需的操作字符的函数</li></ul><p><strong>其他函数类型</strong></p><ul><li>数学函数</li><li>三角函数</li><li>字符函数</li><li>操作符函数</li><li>类型转换函数</li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Feb 16 2020 04:07:33 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;PostgreSQL-3&quot;&gt;&lt;a href=&quot;#PostgreSQL-3&quot; class=&quot;headerlink&quot; title=&quot;Postgr
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="ORDBMS" scheme="https://unit-serow.github.io/tags/ORDBMS/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL-2</title>
    <link href="https://unit-serow.github.io/2020/02/15/PostgreSQL-2/"/>
    <id>https://unit-serow.github.io/2020/02/15/PostgreSQL-2/</id>
    <published>2020-02-15T14:18:52.000Z</published>
    <updated>2020-02-17T18:58:31.312Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --><h3 id="PortgreSQL-2"><a href="#PortgreSQL-2" class="headerlink" title="PortgreSQL-2"></a>PortgreSQL-2</h3><ul><li>使用前几章MySQL中所规定的数据模型</li><li>默认超级管理员权限</li></ul><hr><ul><li>创建数据库test1<blockquote><p><code>CREATE DATABASE TEST1;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# CREATE DATABASE TEST1;</span><br><span class="line">CREATE DATABASE</span><br></pre></td></tr></table></figure><ul><li>查看所有数据库<blockquote><p><code>\l</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# \l</span><br><span class="line">                                     数据库列表</span><br><span class="line">   名称    |  拥有者  | 字元编码 |  校对规则   |    Ctype    |       存取权限        </span><br><span class="line">-----------+----------+----------+-------------+-------------+-----------------------</span><br><span class="line"> postgres  | postgres | UTF8     | zh_CN.UTF-8 | zh_CN.UTF-8 | </span><br><span class="line"> template0 | postgres | UTF8     | zh_CN.UTF-8 | zh_CN.UTF-8 | &#x3D;c&#x2F;postgres          +</span><br><span class="line">           |          |          |             |             | postgres&#x3D;CTc&#x2F;postgres</span><br><span class="line"> template1 | postgres | UTF8     | zh_CN.UTF-8 | zh_CN.UTF-8 | &#x3D;c&#x2F;postgres          +</span><br><span class="line">           |          |          |             |             | postgres&#x3D;CTc&#x2F;postgres</span><br><span class="line"> test1     | postgres | UTF8     | zh_CN.UTF-8 | zh_CN.UTF-8 | </span><br><span class="line">(4 行记录)</span><br></pre></td></tr></table></figure><ul><li>连接数据库，默认用户<code>postgres</code><blockquote><p><code>\c test1;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# \c test1;</span><br><span class="line">您现在已经连接到数据库 &quot;test1&quot;,用户 &quot;postgres&quot;.</span><br></pre></td></tr></table></figure><hr><ul><li>模式A<blockquote><p><code>CREATE SCHEMA A;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# CREATE SCHEMA A;</span><br><span class="line">CREATE SCHEMA</span><br></pre></td></tr></table></figure><ul><li>表<code>A.tables1</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE A.tables1(</span><br><span class="line">ID SERIAL PRIMARY KEY NOT NULL,</span><br><span class="line">A TEXT NOT NULL,</span><br><span class="line">B INT NOT NULL,</span><br><span class="line">C CHAR(1) UNIQUE,</span><br><span class="line">D REAL,</span><br><span class="line">TIME DATE);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# CREATE SCHEMA A;</span><br><span class="line">CREATE SCHEMA</span><br><span class="line">test1&#x3D;# CREATE TABLE A.tables1(</span><br><span class="line">test1(# ID SERIAL PRIMARY KEY NOT NULL,</span><br><span class="line">test1(# A TEXT NOT NULL,</span><br><span class="line">test1(# B INT NOT NULL,</span><br><span class="line">test1(# C CHAR(1) UNIQUE,</span><br><span class="line">test1(# D REAL,</span><br><span class="line">test1(# TIME DATE);</span><br><span class="line">CREATE TABLE</span><br></pre></td></tr></table></figure><ul><li>索引<blockquote><p><code>CREATE UNIQUE INDEX A_INDEX ON A.TABLES1 (A);</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# CREATE UNIQUE INDEX A_INDEX ON A.TABLES1 (A);</span><br><span class="line">CREATE INDEX</span><br></pre></td></tr></table></figure><ul><li>别名<blockquote><p><code>SELECT G.ID, G.A, G.B, G.C, G.D FROM TABLES1 AS G;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# SELECT G.ID, G.A, G.B, G.C, G.D FROM A.TABLES1 AS G;</span><br><span class="line"> id | a | b | c | d </span><br><span class="line">----+---+---+---+---</span><br><span class="line">(0 行记录)</span><br></pre></td></tr></table></figure><hr><ul><li>开启事务<blockquote><p><code>BEGIN;或者BEGIN TRANSACTION;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# BEGIN TRANSACTION;</span><br><span class="line">BEGIN</span><br></pre></td></tr></table></figure><ul><li>插入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO A.tables1 </span><br><span class="line">(A,B,C,D,TIME) </span><br><span class="line">VALUES </span><br><span class="line">(1, 2, 1, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(1, 2, 2, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(1, 2, 3, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(1, 2, 4, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(1, 2, 0, 4, &#39;2020-02-13&#39; );</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# INSERT INTO A.tables1 </span><br><span class="line">(A,B,C,D,TIME) </span><br><span class="line">VALUES </span><br><span class="line">(1, 2, 1, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(2, 2, 2, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(3, 2, 3, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(4, 2, 4, 4, &#39;2020-02-14&#39; ),</span><br><span class="line">(0, 2, 0, 4, &#39;2020-02-13&#39; );</span><br><span class="line">INSERT 0 5</span><br></pre></td></tr></table></figure><ul><li>更新<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE A.TABLES1 SET A &#x3D; 2 WHERE ID &#x3D;1;</span><br><span class="line">UPDATE A.TABLES1 SET A &#x3D; 1 WHERE ID &#x3D;1;</span><br></pre></td></tr></table></figure></li></ul><p><code>SELECT * FROM A.TABLES1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# SELECT * FROM A.TABLES1;</span><br><span class="line"> id | a | b | c | d |    time    </span><br><span class="line">----+---+---+---+---+------------</span><br><span class="line">  3 | 1 | 2 | 1 | 4 | 2020-02-14</span><br><span class="line">  4 | 2 | 2 | 2 | 4 | 2020-02-14</span><br><span class="line">  5 | 3 | 2 | 3 | 4 | 2020-02-14</span><br><span class="line">  6 | 4 | 2 | 4 | 4 | 2020-02-14</span><br><span class="line">  7 | 0 | 2 | 0 | 4 | 2020-02-13</span><br><span class="line">(5 行记录)</span><br></pre></td></tr></table></figure><ul><li>修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE A.TABLES1 ADD E CHAR(1);</span><br><span class="line">ALTER TABLE A.TABLES1 ADD F CHAR(1);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# ALTER TABLE A.TABLES1 ADD E CHAR(1);</span><br><span class="line">ALTER TABLE</span><br><span class="line">test1&#x3D;# ALTER TABLE A.TABLES1 ADD F CHAR(1);</span><br><span class="line">ALTER TABLE</span><br></pre></td></tr></table></figure><p><code>SELECT * FROM A.TABLES1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# SELECT * FROM A.TABLES1;</span><br><span class="line"> id | a | b | c | d |    time    | e | f </span><br><span class="line">----+---+---+---+---+------------+---+---</span><br><span class="line">  3 | 1 | 2 | 1 | 4 | 2020-02-14 |   | </span><br><span class="line">  4 | 2 | 2 | 2 | 4 | 2020-02-14 |   | </span><br><span class="line">  5 | 3 | 2 | 3 | 4 | 2020-02-14 |   | </span><br><span class="line">  6 | 4 | 2 | 4 | 4 | 2020-02-14 |   | </span><br><span class="line">  7 | 0 | 2 | 0 | 4 | 2020-02-13 |   | </span><br><span class="line">(5 行记录)</span><br></pre></td></tr></table></figure><ul><li>锁<blockquote><p><code>LOCK TABLE A.TABLES1 IN ACCESS EXCLUSIVE MODE;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# LOCK TABLE A.TABLES1 IN ACCESS EXCLUSIVE MODE;</span><br><span class="line">LOCK TABLE</span><br></pre></td></tr></table></figure><ul><li>关闭事务<blockquote><p><code>COMMIT;或者END TRANSACTION;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# END TRANSACTION;</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><hr><ul><li>查询表格是否存在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\d</span><br><span class="line">\d A.table1</span><br><span class="line">SELECT * FROM A.tables1;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# \d A.TABLES1;</span><br><span class="line">                                数据表 &quot;a.tables1&quot;</span><br><span class="line"> 栏位 |     类型     | 校对规则 |  可空的  |                 预设                  </span><br><span class="line">------+--------------+----------+----------+---------------------------------------</span><br><span class="line"> id   | integer      |          | not null | nextval(&#39;a.tables1_id_seq&#39;::regclass)</span><br><span class="line"> a    | text         |          | not null | </span><br><span class="line"> b    | integer      |          | not null | </span><br><span class="line"> c    | character(1) |          |          | </span><br><span class="line"> d    | real         |          |          | </span><br><span class="line"> time | date         |          |          | </span><br><span class="line"> e    | character(1) |          |          | </span><br><span class="line"> f    | character(1) |          |          | </span><br><span class="line">索引：</span><br><span class="line">    &quot;tables1_pkey&quot; PRIMARY KEY, btree (id)</span><br><span class="line">    &quot;a_index&quot; UNIQUE, btree (a)</span><br><span class="line">    &quot;tables1_c_key&quot; UNIQUE CONSTRAINT, btree (c)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# SELECT * FROM A.tables1;</span><br><span class="line"> id | a | b | c | d |    time    | e | f </span><br><span class="line">----+---+---+---+---+------------+---+---</span><br><span class="line">  3 | 1 | 2 | 1 | 4 | 2020-02-14 |   | </span><br><span class="line">  4 | 2 | 2 | 2 | 4 | 2020-02-14 |   | </span><br><span class="line">  5 | 3 | 2 | 3 | 4 | 2020-02-14 |   | </span><br><span class="line">  6 | 4 | 2 | 4 | 4 | 2020-02-14 |   | </span><br><span class="line">  7 | 0 | 2 | 0 | 4 | 2020-02-13 |   | </span><br><span class="line">(5 行记录)</span><br></pre></td></tr></table></figure><hr><ul><li>删除<blockquote><p><code>DROP SCHEMA A CASCADE;</code><br><code>DROP TABLE TABLES1;</code><br><code>DROP DATABASE TEST1;</code></p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test1&#x3D;# DROP SCHEMA A CASCADE;</span><br><span class="line">注意:  递归删除 表 a.tables</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres&#x3D;# DROP DATABASE TEST1;</span><br><span class="line">DROP DATABASE</span><br></pre></td></tr></table></figure><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Tue Feb 18 2020 03:00:03 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;PortgreSQL-2&quot;&gt;&lt;a href=&quot;#PortgreSQL-2&quot; class=&quot;headerlink&quot; title=&quot;Portgr
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="ORDBMS" scheme="https://unit-serow.github.io/tags/ORDBMS/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL-1</title>
    <link href="https://unit-serow.github.io/2020/02/15/PostgreSQL-1/"/>
    <id>https://unit-serow.github.io/2020/02/15/PostgreSQL-1/</id>
    <published>2020-02-15T13:44:16.000Z</published>
    <updated>2020-02-15T13:46:11.797Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Feb 15 2020 21:46:16 GMT+0800 (中国标准时间) --><h3 id="PostgreSQL-1"><a href="#PostgreSQL-1" class="headerlink" title="PostgreSQL-1"></a>PostgreSQL-1</h3><p><strong>概述:</strong></p><ul><li>ORDBMS(关系数据库服务器)</li><li>基于BSD许可证发行</li></ul><hr><p><strong>基本特征:</strong></p><ul><li>函数:通过函数，可以在数据库服务器端执行指令程序</li><li>索引:用户可以自定义索引方法，或使用内置的<code>B树</code>，<code>哈希表</code>与<code>GiST索引</code></li><li>触发器:触发器是由SQL语句查询所触发的事件，如：一个INSERT语句可能触发一个检查数据完整性的触发器。触发器通常由<code>INSERT</code>或<code>UPDATE</code>语句触发</li><li>多版本并发控制:PostgreSQL使用多版本并发控制(MVCC，Multiversion concurrency control)系统进行并发控制，该系统向每个用户提供了一个数据库的”快照”，用户在事务内所作的每个修改，对于其他的用户都不可见，直到该事务成功提交</li><li>规则:规则(RULE)允许一个查询能被重写，通常用来实现对视图(VIEW)的操作，如插入(INSERT)、更新(UPDATE)、删除(DELETE)</li><li>数据类型:包括文本、任意精度的数值数组、<code>JSON数据</code>、<code>枚举类型</code>、<code>XML数据等</code></li><li>全文检索:通过<code>Tsearch2</code>或<code>OpenFTS</code>，<code>8.3版本</code>中内嵌<code>Tsearch2</code></li><li>NoSQL:<code>JSON</code>，<code>JSONB</code>，<code>XML</code>，<code>HStore</code>原生支持，至<code>NoSQL</code>数据库的外部数据包装器</li><li>数据仓库:能平滑迁移至同属<code>PostgreSQL</code>生态的<code>GreenPlum</code>，<code>DeepGreen</code>，<code>HAWK</code>等，使用<code>FDW</code>进行<code>ETL</code></li><li>PostpreSQL与MySQL的语法与模式完全不同</li></ul><hr><p><strong>安装:</strong></p><ul><li><code>apt-get</code>全自动安装<blockquote><p><code>$ sudo apt-get install postgresql postgresql-client</code></p></blockquote></li><li>安装完毕后，系统会创建一个数据库超级用户postgres，密码为空<blockquote><p><code># sudo -i -u postgres</code></p></blockquote></li><li>进入postgres命令行提示符<blockquote><p><code>$ psql</code></p></blockquote></li><li>退出PostgreSQL命令行提示符<blockquote><p><code>\q</code></p></blockquote></li></ul><hr><ul><li>基本配置与帮助</li><li>可执行文件目录<blockquote><p><code>/etc/init.d/postgresql</code><br><code>/etc/postgresql</code></p></blockquote></li><li>配置文件目录<blockquote><p><code>/usr/lib/postgresql</code></p></blockquote></li><li>帮助文档目录<blockquote><p><code>/usr/share/postgresql</code></p></blockquote></li><li>帮助指令<blockquote><p><code>postgres-# \help &lt;command_name&gt;</code></p></blockquote></li><li>例如<blockquote><p><code>postgres=# \help SELECT</code></p></blockquote></li><li>查看所有帮助(指令用法)<blockquote><p><code>postgres=# \?</code></p></blockquote></li></ul><hr><p><strong>其他:</strong></p><ul><li><code>pgAdmin</code>工具(图形化管理与操作工具)</li><li><code>pgAdmin</code>工具提供了完整操作数据库的功能</li><li>类似于MySQL的<code>MySQLadmin</code></li><li>封装命令</li><li>进入<code>PostpreSQL</code>的可执行目录内执行(/安装目录/bin)</li><li>PostgreSQL特有性质，例如<code>CREATE DATABASE</code>语句等同于<code>createdb</code>命令</li><li>文案中将会避免使用封装命令，而尽可能多的使用SQL标准中所规定的标准语句</li><li>封装命令的执行不需要添加分号(<code>;</code>)</li><li>关于权限的使用与说明本篇不做阐述</li></ul><hr><ul><li><p><code>createdb</code>命令语法格式如下:</p></li><li><p>进入<code>PostpreSQL</code>的可执行目录内执行</p><blockquote><p><code>createdb [option...] [dbname [description]]</code></p></blockquote></li><li><p>参数说明:</p><blockquote><p><code>dbname</code>:要创建的数据库名<br><code>description</code>:关于新创建的数据库相关的说明<br><code>options</code>:参数可选项，具体参考官方中文手册</p></blockquote></li><li><p><code>psql</code>连接工具语法</p></li><li><p><code>psql</code>的命令都是以斜杠<code>\</code>开头的</p></li><li><p>关于<code>\</code>的具体使用，本篇将不会多做阐述</p><blockquote><p><code>psql -h &lt;hostname or ip&gt; -p &lt;端口&gt; [数据库名称] [用户名称]</code></p></blockquote></li><li><p>执行存储在外部文件中的SQL命令</p><blockquote><p><code>\i &lt;文件名&gt;</code>执行存储在外部文件中的sql语句<br>当然也可以在<code>psql命令行</code>加<code>-s &lt;filename&gt;</code>来执行SQL脚本文件中的命令<br>如<code>psql -s test.sql</code></p></blockquote></li></ul><hr><p><strong>快速参考</strong></p><ul><li>相关概念简述:</li><li>数据类型</li><li>运算符</li><li>表达式</li><li>触发器</li><li>NULL</li><li>子查询/嵌套查询/内部查询</li><li>事务</li><li>函数</li></ul><hr><ul><li>模式 <code>SCHEMA</code></li><li>别名 <code>AS</code></li><li>序列 <code>smallserial/serial/bigserial(AUTO_INCREMENT)</code></li><li>排序/分组 <code>order by(asc/desc)/group by</code></li><li>连接 <code>UNION/JOIN LEFT/RIGHT/PULL/INNER/CROSS</code></li><li>索引 <code>INDEX</code></li><li>约束 <code>PRIMARY KEY/FOREIGN KEY/CHECK/EXCLUSION/UNIQUE/NOT NULL</code></li><li>视图 <code>VIEW</code></li><li>锁 <code>LOCK</code></li><li>权限 <code>GRANT</code></li><li>时间/日期 <code>DATE</code></li></ul><hr><p><strong>参考资料:</strong></p><ul><li><p>手册CN<a href="http://www.postgres.cn/docs/9.6/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>http://www.postgres.cn/docs/9.6/</code></p></blockquote></li><li><p>10.1手册源码CN<a href="https://github.com/postgres-cn/pgdoc-cn/wiki/pg10" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://github.com/postgres-cn/pgdoc-cn/wiki/pg10</code></p></blockquote></li><li><p>最新版手册源码CN<a href="https://github.com/postgres-cn/pgdoc-cn/releases" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://github.com/postgres-cn/pgdoc-cn/releases</code></p></blockquote></li><li><p>手册翻译社区CN<a href="https://github.com/postgres-cn/pgdoc-cn" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://github.com/postgres-cn/pgdoc-cn</code></p></blockquote></li><li><p>官方网站<a href="https://www.postgresql.org/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://www.postgresql.org/</code></p></blockquote></li><li><p>下载地址<a href="https://www.postgresql.org/download/linux/debian/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://www.postgresql.org/download/linux/debian/</code></p></blockquote></li><li><p>软件源码<a href="https://www.postgresql.org/ftp/source/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://www.postgresql.org/ftp/source/</code></p></blockquote></li><li><p><code>apt-get</code>获取</p><blockquote><p><code>apt-get install postgresql postgresql-client</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Feb 15 2020 21:46:16 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;PostgreSQL-1&quot;&gt;&lt;a href=&quot;#PostgreSQL-1&quot; class=&quot;headerlink&quot; title=&quot;Postgr
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="ORDBMS" scheme="https://unit-serow.github.io/tags/ORDBMS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-5</title>
    <link href="https://unit-serow.github.io/2020/02/15/MySQL-5/"/>
    <id>https://unit-serow.github.io/2020/02/15/MySQL-5/</id>
    <published>2020-02-14T18:19:25.000Z</published>
    <updated>2020-02-14T18:21:56.080Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Feb 15 2020 02:22:00 GMT+0800 (中国标准时间) --><h3 id="MySQL-5"><a href="#MySQL-5" class="headerlink" title="MySQL-5"></a>MySQL-5</h3><ul><li>MySQL补充内容</li><li>MySQL可执行目录/usr/bin/mysql</li><li>MySQL配置文件目录/etc/my.cnf</li></ul><hr><p><strong>添加用户</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO user </span><br><span class="line">          (host, user, password, </span><br><span class="line">           select_priv, insert_priv, update_priv) </span><br><span class="line">           VALUES (&#39;localhost&#39;, &#39;guest&#39;, </span><br><span class="line">           PASSWORD(&#39;guest123&#39;), &#39;Y&#39;, &#39;Y&#39;, &#39;Y&#39;);</span><br><span class="line">Query OK, 1 row affected (0.20 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>泛用指令</strong></p><ul><li><p>设置权限</p><blockquote><p><code>chown mysql:mysql -R /var/lib/mysql</code></p></blockquote></li><li><p>初始化</p><blockquote><p><code>mysqld --initialize</code></p></blockquote></li><li><p>查看所有数据库</p><blockquote><p><code>SHOW DATABASES;</code></p></blockquote></li><li><p>查看当前数据库内所有表</p><blockquote><p><code>SHOW TABLES;</code></p></blockquote></li><li><p>显示数据表的属性，属性类型，主键信息 ，是否为NULL，默认值等其他信息</p><blockquote><p><code>SHOW COLUMNS FROM 数据表;</code></p></blockquote></li><li><p>显示数据表的详细索引信息，包括<code>PRIMARY KEY</code>(主键)</p><blockquote><p><code>SHOW INDEX FROM 数据表;</code></p></blockquote></li><li><p>输出Mysql数据库管理系统的性能及统计信息</p><blockquote><p><code>SHOW TABLE STATUS LIKE [FROM db_name] [LIKE &#39;pattern&#39;] \G;</code></p></blockquote></li></ul><hr><p><strong>RDBMS-MySQL参考资料</strong></p><ul><li><p>mysql官网<a href="https://www.mysql.com/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://www.mysql.com/</code></p></blockquote></li><li><p>mysql下载地址<a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://dev.mysql.com/downloads/</code></p></blockquote></li><li><p>文档(EN)<a href="https://dev.mysql.com/doc/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://dev.mysql.com/doc/</code></p></blockquote></li></ul><hr><ul><li><p>MariaDB官网<a href="https://mariadb.org" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://mariadb.org</code></p></blockquote></li><li><p>MariaDB下载地址<a href="https://mariadb.org/download/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://mariadb.org/download/</code></p></blockquote></li><li><p>文档(CN)<a href="https://mariadb.com/kb/zh-cn/mariadb/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://mariadb.com/kb/zh-cn/mariadb/</code></p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Feb 15 2020 02:22:00 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MySQL-5&quot;&gt;&lt;a href=&quot;#MySQL-5&quot; class=&quot;headerlink&quot; title=&quot;MySQL-5&quot;&gt;&lt;/a&gt;MyS
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="RDBMS" scheme="https://unit-serow.github.io/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-4</title>
    <link href="https://unit-serow.github.io/2020/02/15/MySQL-4/"/>
    <id>https://unit-serow.github.io/2020/02/15/MySQL-4/</id>
    <published>2020-02-14T17:49:54.000Z</published>
    <updated>2020-02-14T17:51:47.270Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Feb 15 2020 01:51:52 GMT+0800 (中国标准时间) --><h3 id="MySQL数据导出与导入"><a href="#MySQL数据导出与导入" class="headerlink" title="MySQL数据导出与导入"></a>MySQL数据导出与导入</h3><p><strong>导出</strong></p><ul><li><p>所导出目标文件必须为有可读写权限</p></li><li><p>使用<code>SELECT ... INTO OUTFILE</code>语句</p></li><li><p>基本语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM table_name</span><br><span class="line">    -&gt; INTO OUTFILE &#39;目标路径&#39;;</span><br></pre></td></tr></table></figure></li><li><p>使用mysqldump导出原始数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldump -u root -p --no-create-info \</span><br><span class="line">            --tab&#x3D;&#x2F;目标文件路径 database_name table_name</span><br><span class="line">password:</span><br></pre></td></tr></table></figure></li><li><p>导出SQL格式的文件</p></li><li><p>不添加<code>table_name</code>导出整个数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldump -u root -p database_name table_name &gt; 目标文件路径</span><br><span class="line">password:</span><br></pre></td></tr></table></figure></li><li><p>导出所有数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldump -u root -p --all-databases &gt; 目标文件路径</span><br><span class="line">password:</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>导入</strong></p><ul><li><p>mysql 命令导入</p><blockquote><p><code>mysql -u username -p passwrod &lt; 要导入的数据库数据文件路径(xxx.sql)</code></p></blockquote></li><li><p>source 命令导入</p></li><li><p>登录到数库终端执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; USE DATABASE_NAME;</span><br><span class="line">mysql&gt; SET NAMES utf8;</span><br><span class="line">mysql&gt; SOURCE &#x2F;目标文件路径(.sql)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqlimport导入</span><br><span class="line">$ mysqlimport -u root -p --local tables_name &#x2F;被导入文件路径</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><hr><p><strong>PHP语法简介</strong></p><ul><li>PHP Mysqli</li><li>mysqli()函数</li></ul><p><strong>格式</strong></p><blockquote><p><code>mysqli_function(value,value,...);</code></p></blockquote><ul><li>以上格式中function部分描述了mysqli()函数的功能，例如:<blockquote><p><code>mysqli_connect($connect);</code><br><code>mysqli_query($connect,&quot;SQL 语句&quot;);</code><br><code>mysqli_fetch_array()</code><br><code>mysqli_close()</code></p></blockquote></li></ul><hr><p><strong>mysqladmin用法简述</strong></p><ul><li><p>管理性操作语法</p><blockquote><p><code>mysqladmin [OPTIONS] command [command-option] command ...</code></p></blockquote></li><li><p>帮助指令</p><blockquote><p><code>mysqladmin --help</code></p></blockquote></li><li><p>连接</p><blockquote><p><code>mysqladmin -u[username] -p[password] status</code></p></blockquote></li></ul><hr><p><strong>简要参数:</strong></p><table><thead><tr><th align="left">参数</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">create databasename</td><td align="left">创建一个新数据库</td></tr><tr><td align="left">drop databasename</td><td align="left">删除一个数据库及其所有表</td></tr><tr><td align="left">shutdown</td><td align="left">关掉服务器</td></tr><tr><td align="left">kill id,id,…</td><td align="left">杀死mysql线程</td></tr><tr><td align="left">flush-logs</td><td align="left">清理掉所有日志</td></tr><tr><td align="left">flush-tables</td><td align="left">清理掉所有表</td></tr><tr><td align="left">ping</td><td align="left">检查mysqld是否存在</td></tr></tbody></table><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Feb 15 2020 01:51:52 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MySQL数据导出与导入&quot;&gt;&lt;a href=&quot;#MySQL数据导出与导入&quot; class=&quot;headerlink&quot; title=&quot;MySQL数
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="RDBMS" scheme="https://unit-serow.github.io/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>SQL-参考</title>
    <link href="https://unit-serow.github.io/2020/02/14/SQL-%E5%8F%82%E8%80%83/"/>
    <id>https://unit-serow.github.io/2020/02/14/SQL-%E5%8F%82%E8%80%83/</id>
    <published>2020-02-14T15:59:08.000Z</published>
    <updated>2020-02-14T16:03:29.129Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Feb 15 2020 00:03:34 GMT+0800 (中国标准时间) --><h3 id="SQL-参考"><a href="#SQL-参考" class="headerlink" title="SQL 参考"></a>SQL 参考</h3><p><strong>按出现次数排行</strong></p><p><strong>重要指令一览</strong></p><table><thead><tr><th align="left">指令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">SELECT</td><td align="left">从数据库中提取数据</td></tr><tr><td align="left">UPDATE</td><td align="left">更新数据库中的数据</td></tr><tr><td align="left">DELETE</td><td align="left">从数据库中删除数据</td></tr><tr><td align="left">INSERT INTO</td><td align="left">向数据库中插入新数据</td></tr><tr><td align="left">CREATE DATABASE</td><td align="left">创建新数据库</td></tr><tr><td align="left">ALTER DATABASE</td><td align="left">修改数据库</td></tr><tr><td align="left">CREATE TABLE</td><td align="left">创建新表</td></tr><tr><td align="left">ALTER TABLE</td><td align="left">变更(改变)数据库表</td></tr><tr><td align="left">DROP TABLE</td><td align="left">删除表</td></tr><tr><td align="left">CREATE INDEX</td><td align="left">创建索引(搜索键)</td></tr><tr><td align="left">DROP INDEX</td><td align="left">删除索引</td></tr></tbody></table><hr><p><strong>基本语句</strong></p><table><thead><tr><th align="left">语句</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">CREATE</td><td align="left">创建</td></tr><tr><td align="left">TABLE</td><td align="left">数据表</td></tr><tr><td align="left">DATABASE</td><td align="left">数据库</td></tr><tr><td align="left">SELECT</td><td align="left">选择</td></tr><tr><td align="left">ALTER</td><td align="left">变更/修改</td></tr><tr><td align="left">INSERT</td><td align="left">插入</td></tr><tr><td align="left">UPDATE</td><td align="left">更新</td></tr><tr><td align="left">DELETE</td><td align="left">删除</td></tr><tr><td align="left">VIEWS</td><td align="left">视图</td></tr></tbody></table><hr><p><strong>逻辑语句</strong></p><table><thead><tr><th align="left">单词</th><th align="left">翻译</th></tr></thead><tbody><tr><td align="left">WHERE</td><td align="left">在…</td></tr><tr><td align="left">FROM</td><td align="left">来自…</td></tr><tr><td align="left">AND&amp;OR</td><td align="left">逻辑与/逻辑或</td></tr><tr><td align="left">LIKE</td><td align="left">类似于…/像…</td></tr><tr><td align="left">IN</td><td align="left">在…内</td></tr><tr><td align="left">JOIN</td><td align="left">连接</td></tr><tr><td align="left">INNER/LEFT/RIGHT/FULL</td><td align="left">内部/左部/右部/全部</td></tr><tr><td align="left">UNION</td><td align="left">并集/组合</td></tr></tbody></table><hr><p><strong>关键字/操作符</strong></p><table><thead><tr><th align="left">单词</th><th align="left">翻译</th></tr></thead><tbody><tr><td align="left">DISTINCT</td><td align="left">不同的</td></tr><tr><td align="left">ORDER</td><td align="left">顺序</td></tr><tr><td align="left">ORDER BY</td><td align="left">以…排序</td></tr><tr><td align="left">ASC</td><td align="left">DESC</td></tr><tr><td align="left">TOP/LIMIT/ROWNUM</td><td align="left">极限/最大化</td></tr><tr><td align="left">BETWEEN</td><td align="left">在…之间</td></tr><tr><td align="left">UNIQUE</td><td align="left">独特</td></tr><tr><td align="left">FOREIGN</td><td align="left">外来的</td></tr><tr><td align="left">CHECK</td><td align="left">阻止/检查</td></tr><tr><td align="left">DEFAULT</td><td align="left">默认</td></tr><tr><td align="left">INDEX</td><td align="left">索引/指标</td></tr><tr><td align="left">DROP</td><td align="left">中止</td></tr><tr><td align="left">ADD</td><td align="left">添加</td></tr><tr><td align="left">COLUMN</td><td align="left">纵列</td></tr><tr><td align="left">INTO</td><td align="left">到…内</td></tr><tr><td align="left">PRIMARY</td><td align="left">主键/首要/基本</td></tr><tr><td align="left">AUTO</td><td align="left">自动/自动模式</td></tr><tr><td align="left">INCREMENT</td><td align="left">递增/增加</td></tr><tr><td align="left">NOT</td><td align="left">否</td></tr></tbody></table><hr><p><strong>其他一</strong></p><table><thead><tr><th align="left">单词</th><th align="left">翻译</th></tr></thead><tbody><tr><td align="left">USE</td><td align="left">使用/选择</td></tr><tr><td align="left">VALUES</td><td align="left">值</td></tr><tr><td align="left">SET</td><td align="left">位于…</td></tr><tr><td align="left">AS</td><td align="left">例如/向…</td></tr><tr><td align="left">NULL</td><td align="left">空/无</td></tr><tr><td align="left">BY</td><td align="left">由/被/到…之前</td></tr><tr><td align="left">HAVING</td><td align="left">具有</td></tr><tr><td align="left">ON</td><td align="left">在…上/触发/打开</td></tr><tr><td align="left">IN</td><td align="left">在…内</td></tr><tr><td align="left">ALL</td><td align="left">全部</td></tr><tr><td align="left">TRUNCATE</td><td align="left">截取</td></tr><tr><td align="left">CONSTRAINT</td><td align="left">约束</td></tr><tr><td align="left"><code>*</code></td><td align="left">泛用通配符</td></tr></tbody></table><hr><p><strong>其他二</strong></p><table><thead><tr><th align="left">单词</th><th align="left">翻译</th></tr></thead><tbody><tr><td align="left">column</td><td align="left">列</td></tr><tr><td align="left">table</td><td align="left">表</td></tr><tr><td align="left">operator</td><td align="left">操作符</td></tr><tr><td align="left">valueN</td><td align="left">值</td></tr><tr><td align="left">some</td><td align="left">某个</td></tr><tr><td align="left">Persons</td><td align="left">个体</td></tr><tr><td align="left">percent</td><td align="left">占比</td></tr><tr><td align="left">external</td><td align="left">外部</td></tr><tr><td align="left">DB</td><td align="left">数据库</td></tr><tr><td align="left">type</td><td align="left">类型</td></tr><tr><td align="left">size</td><td align="left">尺寸/大小</td></tr><tr><td align="left">Last</td><td align="left">末尾</td></tr><tr><td align="left">First</td><td align="left">起始</td></tr></tbody></table><hr><p><strong>语句参考</strong></p><ul><li>ALTER TABLE</li><li>CREATE DATABASE</li><li>CREATE INDEX</li><li>CREATE TABLE</li><li>CREATE VIEW</li><li>DROP DATABASE</li><li>DROP INDEX</li><li>DROP TABLE</li><li>INSERT INTO</li><li>INNER JOIN</li><li>LEFT JOIN</li><li>RIGHT JOIN</li><li>FULL JOIN</li><li>SELECT DISTINCT</li><li>SELECT INTO</li><li>SELECT TOP</li><li>TRUNCATE TABLE</li><li>UNION ALL</li><li>GROUP BY</li><li>ORDER BY</li><li>SELECT *</li></ul><hr><p><strong>子句参考</strong></p><ul><li>WHERE</li><li>UPDATE</li><li>UNION</li><li>SELECT</li><li>LIKE</li><li>IN</li><li>HAVING</li><li>DELETE</li><li>BETWEEN</li><li>AS (alias)</li><li>AND/OR</li></ul><hr><p><strong>概念</strong></p><ul><li>通配符</li><li>别名</li><li>约束</li><li>索引</li><li>函数</li><li>通用数据类型</li><li>DB 数据类型</li></ul><hr><p><strong>最泛用常用函数</strong></p><blockquote><p>DATE()<br>NULL()</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Feb 15 2020 00:03:34 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;SQL-参考&quot;&gt;&lt;a href=&quot;#SQL-参考&quot; class=&quot;headerlink&quot; title=&quot;SQL 参考&quot;&gt;&lt;/a&gt;SQL 参考
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="RDBMS" scheme="https://unit-serow.github.io/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>RDBMS-MySQL</title>
    <link href="https://unit-serow.github.io/2020/02/14/RDBMS-MySQL/"/>
    <id>https://unit-serow.github.io/2020/02/14/RDBMS-MySQL/</id>
    <published>2020-02-14T13:44:16.000Z</published>
    <updated>2020-02-14T13:46:11.950Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Feb 14 2020 21:46:16 GMT+0800 (中国标准时间) --><h3 id="RDBMS-MySQL"><a href="#RDBMS-MySQL" class="headerlink" title="RDBMS-MySQL"></a>RDBMS-MySQL</h3><p><strong>RDBMS-MySQL相关概念简述</strong></p><ul><li>数据库: 数据库是一些关联表的集合</li><li>数据表: 表是数据的矩阵，在一个数据库中的表看起来像一个简单的电子表格</li><li>列: 一列(数据元素) 包含了相同类型的数据, 例如邮政编码的数据</li><li>行: 一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据</li><li>冗余: 存储两倍数据，冗余降低了性能，但提高了数据的安全性</li><li>主键: 主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据</li><li>外键: 外键用于关联两个表</li><li>复合键: 复合键（组合键）将多个列作为一个索引键，一般用于复合索引</li><li>索引: 使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录</li><li>参照完整性: 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性</li><li>表头(header): 每一列的名称</li><li>列(col): 具有相同数据类型的数据的集合</li><li>行(row): 每一行用来描述某条记录的具体信息</li><li>值(value): 行的具体信息, 每个值必须与该列的数据类型相同</li><li>键(key): 键的值在当前列中具有唯一性</li><li>所谓的”关系型”可以理解为”表格”的概念, 一个关系型数据库由一个或数个表格组成</li></ul><hr><p><strong>MySQL</strong></p><ul><li>MySQL 为关系型数据库(Relational Database Management System)</li><li>MySQL -server- MySQL 服务器程序</li><li>MySQL-client - MySQL 客户端程序，用于连接并操作Mysql服务器</li><li>MySQL-devel - 库和包含文件，如果你想要编译其它MySQL客户端</li><li>MySQL-shared - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so)，使用MySQL</li><li>MySQL-bench - MySQL数据库服务器的基准和性能测试工具</li></ul><hr><p><strong>RDBMS-MySQL的三种连接方式</strong></p><ul><li>二进制连接 mysql -u username -p password</li><li>Shell连接 使用MySQLadmin工具</li><li>PHP连接不做阐述</li></ul><hr><p><strong>其他概念</strong></p><ul><li>数据类型</li><li>运算符</li><li>正则表达式</li><li>索引</li><li>元数据</li><li>序列</li><li>函数</li><li>MySQLadmin指令</li><li>PHP连接</li><li>SQL注入</li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Feb 14 2020 21:46:16 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;RDBMS-MySQL&quot;&gt;&lt;a href=&quot;#RDBMS-MySQL&quot; class=&quot;headerlink&quot; title=&quot;RDBMS-My
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="RDBMS" scheme="https://unit-serow.github.io/tags/RDBMS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-3</title>
    <link href="https://unit-serow.github.io/2020/02/14/MySQL-3/"/>
    <id>https://unit-serow.github.io/2020/02/14/MySQL-3/</id>
    <published>2020-02-14T12:36:41.000Z</published>
    <updated>2020-02-14T12:40:55.164Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Feb 14 2020 20:40:58 GMT+0800 (中国标准时间) --><h3 id="MySQL-3"><a href="#MySQL-3" class="headerlink" title="MySQL-3"></a>MySQL-3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br><span class="line">CREATE DATABLE TEST1;</span><br><span class="line">USE TEST1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; CREATE DATABASE TEST1;</span><br><span class="line">Query OK, 1 row affected (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; USE TEST1;</span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure><p>分别建立TABLES1,TABLES2(唯一键值)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE TABLES1(</span><br><span class="line">ID INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">A VARCHAR(100) NOT NULL,</span><br><span class="line">B VARCHAR(100) NOT NULL,</span><br><span class="line">C VARCHAR(100) NOT NULL,</span><br><span class="line">D VARCHAR(100) NOT NULL,</span><br><span class="line">TIME DATE,</span><br><span class="line">PRIMARY KEY ( ID, A, B )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE TABLES2(</span><br><span class="line">ID INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">A VARCHAR(100) NOT NULL,</span><br><span class="line">B VARCHAR(100) NOT NULL,</span><br><span class="line">C VARCHAR(100) NOT NULL,</span><br><span class="line">D VARCHAR(100) NOT NULL,</span><br><span class="line">TIME DATE,</span><br><span class="line">UNIQUE ( ID, A, B )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; CREATE TABLE TABLES1(</span><br><span class="line">    -&gt; ID INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">    -&gt; A VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; B VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; C VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; D VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; TIME DATE,</span><br><span class="line">    -&gt; PRIMARY KEY ( ID, A, B )</span><br><span class="line">    -&gt; )ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line">Query OK, 0 rows affected (0.061 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; CREATE TABLE TABLES2(</span><br><span class="line">    -&gt; ID INT NOT NULL AUTO_INCREMENT,</span><br><span class="line">    -&gt; A VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; B VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; C VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; D VARCHAR(100) NOT NULL,</span><br><span class="line">    -&gt; TIME DATE,</span><br><span class="line">    -&gt; UNIQUE ( ID, A, B )</span><br><span class="line">    -&gt; )ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>向TABLES1插入数据</strong></p><ul><li>4<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLES1</span><br><span class="line">(A,B,C,D,TIME)</span><br><span class="line">VALUES</span><br><span class="line">(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,NOW());</span><br></pre></td></tr></table></figure></li><li>1<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLES1</span><br><span class="line">(A,B,C,D,TIME)</span><br><span class="line">VALUES</span><br><span class="line">(&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&#39;2020-02-13&#39;);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES1</span><br><span class="line">    -&gt; (A,B,C,D,TIME)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,NOW());</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.003 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES1 (A,B,C,D,TIME) VALUES (&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,NOW());</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES1 (A,B,C,D,TIME) VALUES (&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,NOW());</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES1 (A,B,C,D,TIME) VALUES (&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,NOW());</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES1</span><br><span class="line">    -&gt; (A,B,C,D,TIME)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&#39;2020-02-13&#39;);</span><br><span class="line">Query OK, 1 row affected (0.002 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>复制TABLES1内数据到TABLES2</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLES2 (ID,A,B,C,D,TIME)</span><br><span class="line">SELECT ID,A,B,C,D,TIME</span><br><span class="line">FROM TABLES1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; INSERT INTO TABLES2 (ID,A,B,C,D,TIME)</span><br><span class="line">    -&gt; SELECT ID,A,B,C,D,TIME</span><br><span class="line">    -&gt; FROM TABLES1;</span><br><span class="line">Query OK, 5 rows affected (0.001 sec)</span><br><span class="line">Records: 5  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><hr><p><strong>复制TABLES1内数据到TABLES3</strong></p><ul><li>查看标结构<blockquote><p><code>SHOW CREATE TABLE TABLES1 \G;</code></p></blockquote></li></ul><p><strong>将表内结构规划语句拷贝并执行,并命名为TABLES3</strong><br><strong>复制数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLES3 (ID,A,B,C,D,TIME)</span><br><span class="line">SELECT ID,A,B,C,D,TIME</span><br><span class="line">FROM TABLES1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SHOW CREATE TABLE TABLES1 \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: TABLES1</span><br><span class="line">Create Table: CREATE TABLE &#96;TABLES1&#96; (</span><br><span class="line">  &#96;ID&#96; int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  &#96;A&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;B&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;C&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;D&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;TIME&#96; date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;ID&#96;,&#96;A&#96;,&#96;B&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;6 DEFAULT CHARSET&#x3D;utf8</span><br><span class="line">1 row in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">ERROR: No query specified</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;TABLES3&#96; (</span><br><span class="line">  &#96;ID&#96; int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  &#96;A&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;B&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;C&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;D&#96; varchar(100) NOT NULL,</span><br><span class="line">  &#96;TIME&#96; date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (&#96;ID&#96;,&#96;A&#96;,&#96;B&#96;)</span><br><span class="line">) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;6 DEFAULT CHARSET&#x3D;utf8</span><br><span class="line">;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; CREATE TABLE &#96;TABLES3&#96; (</span><br><span class="line">    -&gt;   &#96;ID&#96; int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">    -&gt;   &#96;A&#96; varchar(100) NOT NULL,</span><br><span class="line">    -&gt;   &#96;B&#96; varchar(100) NOT NULL,</span><br><span class="line">    -&gt;   &#96;C&#96; varchar(100) NOT NULL,</span><br><span class="line">    -&gt;   &#96;D&#96; varchar(100) NOT NULL,</span><br><span class="line">    -&gt;   &#96;TIME&#96; date DEFAULT NULL,</span><br><span class="line">    -&gt;   PRIMARY KEY (&#96;ID&#96;,&#96;A&#96;,&#96;B&#96;)</span><br><span class="line">    -&gt; ) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;6 DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line">Query OK, 0 rows affected (0.042 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO TABLES3 (ID,A,B,C,D,TIME)</span><br><span class="line">SELECT ID,A,B,C,D,TIME</span><br><span class="line">FROM TABLES1;</span><br></pre></td></tr></table></figure><hr><p><code>SHOW TABLES;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SHOW TABLES;</span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_TEST1 |</span><br><span class="line">+-----------------+</span><br><span class="line">| TABLES1         |</span><br><span class="line">| TABLES2         |</span><br><span class="line">| TABLES3         |</span><br><span class="line">+-----------------+</span><br><span class="line">3 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM TABLES1;</span><br><span class="line">SELECT * FROM TABLES2;</span><br><span class="line">SELECT * FROM TABLES3;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT * FROM TABLES1;</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">| ID | A | B | C | D | TIME       |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">|  1 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  2 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  3 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  4 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  5 | 2 | 3 | 4 | 5 | 2020-02-13 |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT * FROM TABLES2;</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">| ID | A | B | C | D | TIME       |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">|  1 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  2 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  3 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  4 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  5 | 2 | 3 | 4 | 5 | 2020-02-13 |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT * FROM TABLES3;</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">| ID | A | B | C | D | TIME       |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">|  1 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  2 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  3 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  4 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  5 | 2 | 3 | 4 | 5 | 2020-02-13 |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">5 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>统计表TABLES1内A列与B列中重复的数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) as repetitions, A, B</span><br><span class="line">FROM TABLES1</span><br><span class="line">GROUP BY A, B</span><br><span class="line">HAVING repetitions &gt; 1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT COUNT(*) as repetitions, A, B</span><br><span class="line">    -&gt; FROM TABLES1</span><br><span class="line">    -&gt; GROUP BY A, B</span><br><span class="line">    -&gt; HAVING repetitions &gt; 1;</span><br><span class="line">+-------------+---+---+</span><br><span class="line">| repetitions | A | B |</span><br><span class="line">+-------------+---+---+</span><br><span class="line">|           4 | 1 | 2 |</span><br><span class="line">+-------------+---+---+</span><br><span class="line">1 row in set (0.000 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>过滤重复数据并输出TABLES1内数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT A, B</span><br><span class="line">FROM TABLES1;</span><br><span class="line">或</span><br><span class="line">SELECT A, B</span><br><span class="line">FROM TABLES2</span><br><span class="line">GROUP BY (C);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT DISTINCT A, B</span><br><span class="line">    -&gt; FROM TABLES1;</span><br><span class="line">+---+---+</span><br><span class="line">| A | B |</span><br><span class="line">+---+---+</span><br><span class="line">| 1 | 2 |</span><br><span class="line">| 2 | 3 |</span><br><span class="line">+---+---+</span><br><span class="line">2 rows in set (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; SELECT A, B</span><br><span class="line">    -&gt; FROM TABLES2</span><br><span class="line">    -&gt; GROUP BY (C);</span><br><span class="line">+---+---+</span><br><span class="line">| A | B |</span><br><span class="line">+---+---+</span><br><span class="line">| 1 | 2 |</span><br><span class="line">| 2 | 3 |</span><br><span class="line">+---+---+</span><br><span class="line">2 rows in set (0.001 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>删除TABLES1内重复数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE tmp SELECT A, B, C, D FROM TABLES1 GROUP BY (C);</span><br><span class="line">DROP TABLE TABLES1;</span><br><span class="line">ALTER TABLE tmp RENAME TO TABLES1;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; CREATE TABLE tmp SELECT A, B, C, D FROM TABLES1 GROUP BY (C);</span><br><span class="line">Query OK, 2 rows affected (0.027 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; DROP TABLE TABLES1;</span><br><span class="line">Query OK, 0 rows affected (0.002 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [TEST1]&gt; ALTER TABLE tmp RENAME TO TABLES1;</span><br><span class="line">Query OK, 0 rows affected (0.002 sec)</span><br></pre></td></tr></table></figure><p><code>SELECT * FROM TABLES1;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT * FROM TABLES1;</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| A | B | C | D |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">| 1 | 2 | 3 | 4 |</span><br><span class="line">| 2 | 3 | 4 | 5 |</span><br><span class="line">+---+---+---+---+</span><br><span class="line">2 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><hr><p><strong>或设置主键以清理TABLEST2内重复数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER IGNORE TABLE TABLES2</span><br><span class="line">ADD PRIMARY KEY (A, B);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; ALTER IGNORE TABLE TABLES2</span><br><span class="line">    -&gt; ADD PRIMARY KEY (A, B);</span><br><span class="line">Query OK, 5 rows affected (0.059 sec)              </span><br><span class="line">Records: 5  Duplicates: 3  Warnings: 0</span><br></pre></td></tr></table></figure><p><code>SELECT * FROM TABLES2;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [TEST1]&gt; SELECT * FROM TABLES2;</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">| ID | A | B | C | D | TIME       |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">|  1 | 1 | 2 | 3 | 4 | 2020-02-14 |</span><br><span class="line">|  5 | 2 | 3 | 4 | 5 | 2020-02-13 |</span><br><span class="line">+----+---+---+---+---+------------+</span><br><span class="line">2 rows in set (0.000 sec)</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Feb 14 2020 20:40:58 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;MySQL-3&quot;&gt;&lt;a href=&quot;#MySQL-3&quot; class=&quot;headerlink&quot; title=&quot;MySQL-3&quot;&gt;&lt;/a&gt;MyS
      
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="数据库" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="RDBMS" scheme="https://unit-serow.github.io/tags/RDBMS/"/>
    
  </entry>
  
</feed>
