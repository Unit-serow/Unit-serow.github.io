<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UNIT</title>
  
  <subtitle>不精之精，而至纯粹</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://unit-serow.github.io/"/>
  <updated>2020-04-20T16:31:27.660Z</updated>
  <id>https://unit-serow.github.io/</id>
  
  <author>
    <name>serow</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>先验感性论-1</title>
    <link href="https://unit-serow.github.io/2020/04/20/%E7%BA%AF%E7%B2%B9%E7%90%86%E6%80%A7%E6%89%B9%E5%88%A4-1/"/>
    <id>https://unit-serow.github.io/2020/04/20/%E7%BA%AF%E7%B2%B9%E7%90%86%E6%80%A7%E6%89%B9%E5%88%A4-1/</id>
    <published>2020-04-19T23:48:05.000Z</published>
    <updated>2020-04-20T16:31:27.660Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Apr 21 2020 00:32:29 GMT+0800 (中国标准时间) --><center><strong>纯粹理性批判-先验感性论-1</strong></center><a id="more"></a><h3 id="先验感性论-1"><a href="#先验感性论-1" class="headerlink" title="先验感性论-1"></a>先验感性论-1</h3><ul><li>笔记类文案</li></ul><hr><ul><li>对原有逻辑体系的进一步补充</li><li><p>含有绝对的主观性理解</p><blockquote><p>基于纯粹理性批判的绝对主观理解<br>先验感性论，先验逻辑，感性与知性<br>人类的感性范畴之内</p></blockquote></li><li><p>不同于形式逻辑的先验逻辑用于探讨关于知性所涉及的任何概念</p><blockquote><p>对于可知现象和可思而不可知本体的界限的严格划分是纯粹理性批判的最基本概念</p></blockquote></li></ul><hr><p><strong>对于形而上学</strong></p><p>对于理性自身的本性，即一切基于所谓的原理（这些原理超越一切可能的经验运用）所得出的经验而产生的结论，人类皆无法利用理性去解释其根源所在的原理，因为其超越了人类所拥有的一切来源于经验、知识与理性的能力<br>人类无法判断其是否可能存在的根本性的错误，当原理超出了一切经验的界限时，则不会将其附加以与经验相关的任何概念，从而对理性进行无休止的判断与批判，则为形而上学</p><p>人类对于判断力的需求来源于一切科学层面进展的结果，这是一种对于理性的吁求，即最终的命题则为对于自我认识的吁求<br>此时则必要的存在某一个可以对其理性吁求的结果进行判断的逻辑与环境<br>而此种必要的逻辑正是对于纯粹理性的批判，而其间的批判来自于对思维方式的冷淡与怀疑</p><p>理性只会将敬重给予那些经受的住它的自由而公开的检验的事物-康德<br>有些书，如果它并不想说得如此明晰的话，它就会更加明晰得多-康德<br>不要缺乏任何派生出来的概念，这些概念不同先天地凭跳跃产生出来，而必须逐步逐步去探寻-康德<br>看看你自己的住所周围，你讲知道你的财产是多么的简单-柏修斯</p><p>对于一般理性能力的批判，即一切能够独立于任何经验而追求的知识，则为对一般形而上学的可能性与不可能性所进行的裁决，并基于原则对其一切所拥有的相关概念加以规定</p><p>在完全抛离所有相关于主观经验与知识的一切概念之后所拥有的逻辑能力，对于先天知性的概念进行客观且有效性的阐明，对于其可能性的探讨与立足于其上的认知能力的主观性探讨</p><hr><p><strong>纯粹知识和经验性知识的区别</strong></p><p>知识来源于以时间单位为基点的经验累积，即一切知识始于经验<br>尽管一切知识皆以经验开始，但其本身并不能充分证明其发源于经验（开始决定起点，发源决定本质）</p><p>此间引出某一可能：<br>我们所拥有的一切经验知识都不过是通过感官的诱导与自身已经所拥有的固有知识能力的复合产物，也就是从自己本身中拿出来的东西（感官现象只是诱因）<br>所以其感官所产生的任何现象只不过是对于我们自身的某种增添，直到经由长期训练以使我们足以注意到它，并能够熟练的将其与自身的基本材料相分离</p><p>以此引出某一论题：<br>现实间存在一种独立于任何经验与一切感官印象的知识是否可能？<br>人们将此类知识称之为先天的且与后天那些源于经验性相关的知识区别开来<br>但“先天”还不足矣描述上述问题的全部意义，因为对于可从自然规律中总结出来的经验，人类总乐意称其为先天的（即对规律进行累计以进行经验累计的过程）</p><p>先天的知识是完全不依赖于任何经验所发生的知识，与其相反的这是后天的、即通过经验可能的知识<br>先天知识中那些完全没有掺杂任何经验性的东西的知识则成为纯粹的</p><p>我们具有某些先天的知识，甚至普通知性也从来不缺少它们-康德</p><ul><li>此时则需要一个将纯粹知识与经验性知识区别开来的标志</li></ul><ol><li>如果有一个命题与它的必然性在同时被一起想到，则称其为先天判断</li><li>如果它此外不再由任何别的命题引出，除非此命题本身也是作为一个必然命题而有效的，它就是一个完全先天的命题<br>其次：经验将永远也不给自己的判断以真正或严格的普遍性，而只是（通过归纳）给它们以假定的、相比较的普遍性，以至于实际上我们只能说：就我们迄今所察觉到的而言，还没有发现这个或那个规定有什么例外</li><li>所以在严格的普遍性上、亦即不能容许有任何例外地来设想一个判断，那么它就不是由经验中引出来的，而是完全先天有效的<br>先天知识的可靠标志取决于其必然性与严格普遍性，一些必然且具有严格普遍性的、因而纯粹的先天判断</li></ol><p>哲学需要一门科学来规定一切先天知识的可能性、原则和范围<br>此间将此规定为任何经验皆不足矣相关的知识，即任何经验都不可能对其提供任何线索与校正的范围，只有基于理性对其进行研究<br>在人类的经验中有可能混有一些必然具有其先天来源的知识，此间的知识可能与感官表象所关联，因为从此间的经验中抛出所有相关于感官的概念之时，必然会产生某些从本源的概念中产生的某些概念<br>这些由本源所引出的概念致使人类能够相信与表达出比单纯的经验更多的概念，同时引出各种见中解包含于单纯经验性的知识所不能提供出来的真正普遍性和严格必要性</p><p>知识究竟如何能够到达所有这些先天的知识，且此间的知识可以具有怎样的范围、有效性和价值<br>事实上，如果人类将自然这个词理解为本应以正当的、合理的方式发生的事，那也就没有什么比这更自然的了<br>但如果人类将这个词理解为按照习惯而发生的事，那么倒是没有什么比这项研究长期不得不被搁置为自然更可理解的了<br>数学给了人类一个光辉的范例，表明人类离开了经验在先天知识中可以走出多远<br>此间引出在人类主观理性之间所理解的概念中，已有的先天性概念，人类是如何将先天概念引进理性概念之间的，在引进时人类在多数时不会让此间的问题进入到思想中<br>由此引出此间所涉及的两方面知识类型的区别，即有分析判断与综合判断的区别（纯粹的理性判断为前者，理性判断中加入先天经验则为后者）</p><p>分析判断与综合判断的区别，还可将其称为说明性的判断与拓展性的判断，对于分析判断的概念清晰以获得对于扩展概念的判断及其结论与收获</p><p>在理性的一切理论科学中都包含有先天综合判断为原则<br>数学的判断皆为综合判断，即永远无法直观的去基于纯粹理性得到任何经由分析与推论所得出的概念，如两数之和与两点之间直线最短（代数 &amp; 几何）<br>以此引出纯粹数学范畴：它不包含经验性的知识，而只包含纯粹的先天知识<br>借助于某个必须附加于某个必要概念上的直观来解释数学间概念的性质与本质<br>几何学作为前提的少数几条原理虽然确实是分析的，并且是建立在矛盾论之上的；<br>但它们正如那些同一性命题一样，也之上用于方法上的连接，而不是作为原则；<br>某些基本概念之所以行的通，也只是因为它们能在直观中体现出来。<br>自然科学（物理学）包含先天综合判断作为自身中的原则，且在自然科学纯粹部分的其它一些定理也是如此。<br>同时形而上学内任一命题：世界必然有一个最初的开端，即就其目的而言就是由纯粹先天综合命题所构成的。</p><p>纯粹理性的总论题，即纯粹理性的真正论题引出：先天综合判断是如何可能的？<br>形而上学之间没有去涉及分析的和综合的判断相关的概念与问题，而大卫·休谟在一切哲学家中最接近于这个论题，但还远远没有足够地并在其普遍性中思考它，而只是停留在结果和原因相连结的综合命题（因果律）之上。<br>基于上述论题即可理解纯粹理性用在奠立和发展一切含有关于对象的先天理论知识的科学中的可能性，即纯粹数学是如何可能的与纯粹自然科学是如何可能的，即此间的科学已经于现实间存在了。<br>即它们必定是可能的这一点通过它们的现实性而得到了证明<br>而形而上学在此种知识类型之间被赋予了某种意义与概念，即形而上学被现实作为自然倾向而存在。<br>基于思辨引出推论：形而上学作为自然倾向是如何可能的，而在此基于对于其纯粹本质的纯粹性批判与拓展，并且需要得出的必要性结论，得出其间的推论：形而上学作为科学是如何可能的。<br>因此得出理性的批判最终必然导致科学与与其对应的怀疑论（即基于理性的无批判）</p><hr><p>在纯粹理性批判名下的一门特殊科学的理念和划分，在以上的对于任何概念的描述之间，得出了一门特殊科学的理念，即为：纯粹理性批判</p><p>理性则为提供出先天知识的诸原则的能力，而纯粹理性则为包含于完全先天地任何某物的诸原则的理性<br>纯粹理性的一个工具论就是将一切先天纯粹知识能够以获得并被现实地实现出来的那些原则的总合<br>单纯批判纯粹理性与其来源和界限的科学视为纯粹理性的入门，这样一个入门不必被称作一种学理，而只应当叫做纯粹理性的批判<br>它的用处就思辨方面来说实际上只是否定性的，而非拓展原有的理性，即用于澄清原有的理性而且使它们避免犯错误</p><p>一般地关注于人类有关对象的，就（特指）其先天可能的而言的认识方式的知识，称之为先验的，由此间引出一个新的概念体系，则为：先验哲学<br>但对于此间所涉及的概念做为开端，其分支的确太多了，以目前阶段为止则只包含于分析判断与先天综合判断（又称分析的知识与先天综合的知识）<br>但我们只对此间只对唯一的先天综合判断诸原则及其整个范围进行研究，这种研究不足矣真正的称之为学理，而只能称之为先验的判断，即不为拓展知识本身，而只是校正知识本身（即为一切先天知识的有价值或无价值的试金石）<br>则此间的批判就是尽可能的为这类知识的一种工具论作为准备，即先验哲学为纯粹理性的所有原则的体系<br>属于纯粹理性批判的是所有构成先验哲学的现实概念，即纯粹理性批判是完备的先验哲学的理念，但还不是这门科学本身：因为它在分析中只进行到对先天综合知识的完备批判所要求的那个地步<br>先天知识应当是完全纯粹的，即先验哲学是一种仅仅思辨性的纯粹理性的人生智慧（哲学）</p><p>以某一一般体系的普遍观点来划分这门科学，则包含于纯粹理性的一个要素论与其次的包含于纯粹理性的一个方法论<br>即此间的两个分支也许来自于某种共同的、但不为人类所知的根基，还可以将其称之为感性和知性，前者赋对象于人，后者将对象于思考<br>既然感性应当包含有哪些构成对象由以被给与人类的条件的先天表象，则感性将属于先验哲学<br>以此将先验的感性学说归纳为属于要素科学的第一部分，因为人类知识的对象惟一在其之下，才被给予的那些条件，是先行于这些对象在其之下被思维（思考）的那些条件的<br>即有先验要素轮的第一部分：先验感性论</p><p>某种知识无论以何种与通过何种手段与对象发生的何种关系且与对象发生直接关系，并且一切思维将其定义为手段以之为目的的概念，被称为直观<br>但直观只是对象被给予人类时才会发生，即对象对于人类以任何方式的刺激，此间以被对象所刺激的方式来获得表象的能力（接受能力）的概念，被称为感性<br>所以，借助于感性，对象被给予人类，且只有感性才能给人类提供出直观，而此间的直观通过知性被思维（思考），而从知性产生出概念，被称为概念<br>但一切思维必须直接地与间接地借助于某些标志最终与直观、因而对人类来说与感性发生关系，因为以别种方式不可能有任何对象给予人类<br>当人类被一个对象所刺激时，它在表象能力上必然会产生结果，被称为感觉<br>此间的感觉与对象相关的直观就叫做经验性的直观，被称为经验<br>一个经验性的直观的未被规定的对象所产生的概念，被称为现象<br>在现象中，与感觉相应的概念被称之为现象的质料，所其间所有现象基于某种关系进行整理所得出的结果被称为现象的形式<br>一切在其中找不到任何属于感觉的概念的表象所产生的概念，被称为纯粹（基于先验）<br>将现实间的某一概念相关的任何现实概念抛出，所得出的概念，被称为纯直观（即，纯粹直观）<br>一门有关于感性的一切先天原则的科学，被称为先验感性轮，即构成先验要素论的第一部分，从而与包含纯粹思维的诸原则，称之为先验逻辑的那一部分相对</p><p>因此，在先验感性论中首先需要通过排除知性在此凭它的概念所想到的一切，来孤立感性，以便只留下经验性的直观<br>其次，将此间的直观中的一切属于感觉的概念全部抛离，以便只留下纯直观和现象的单纯形式，这就是感性所能先天地提供出来的惟一概念<br>以此，作为先天知识的原则，有两种感性直观的纯形式，即空间和时间</p><hr><p><strong>空间概念于形而上学阐明</strong></p><p>外感官（内心属性）将对象表象的范畴规定在本体之外，空间之中<br>内感官（内心属性）将内心借以直观自身或其内部状态，灵魂本身虽然不能被定义为客观的任何直观，但可以定义为某种确定的形式，只有在此间灵魂的内部状态才有可能，以至于一切相关于内感官的概念在时间的关系间被表象<br>即时间与空间不能被直观表象到，此间引出其是否于现实间存在的论题<br>将一个概念里所属的概念作出清晰（哪怕非详尽）的介绍，当此间的概念被作为先天给予的来描述的概念时，所涉及的现实方法的描述，称为阐明，即形而上学<br>空间的原始表象是先天直观，而非概念</p><p>某一个先行于客体本身且能够于自身中先天的规定客体概念的外部直观于心中存在如何可能？<br>则此某种表象仅作为主体受客体刺激并由此获得对客体的直接表象即直观的形式性状，因而仅作为外感官的一般形式，而在主体内占有自己的位置，才得以可能</p><p>引出如下结论：<br>空间绝非依附于对象本身的任何属性的任何相关概念，无论规定绝对与相对，皆不能于其所属事物之前被先天地直观到<br>空间无非只是外感官的一切现象的形式，即惟一使人类的外直观称为可能的主观感性条件，由此以人为立场以谈论空间<br>即如果人类脱离了惟一能使人类只要有可能为对象所刺激就能获得外部直观的那个主观条件，则空间的表象将会失去任何意义</p><p>将所有相关于空间的对象全部抛离，留下的只是带有空间之名的纯直观，即实在性（客观有效性）与观念性，所以其主张空间（就一切可能的外部经验而言）的经验性的实在性，同时主张空间的先验的观念性<br>也就是只要我们抽掉一切经验的可能性这个条件，并把空间假定位某种给自在之物提供基础的东西，空间就什么也不是了<br>除空间之外，将没有任何主观的且与某种外在东西相关而能称得上是先天客观的表象了<br>因为我们不能从其它这些表象中，如同从空间的直观中那样，引出先天综合命题<br>毋宁说，我们完全不知道自在的对象，而凡是我们称之为外部对象的，无非是我们感性的单纯表现而已，其形式则为空间<br>但其间真实的相关事物、亦即自在之物却丝毫也没有借此得到认识，也不可能借此被认识，但它也从不在经验中被探讨，所以讨论自在之物将不会产生任何现实或实际意义</p><hr><p><strong>时间概念于形而上学阐明</strong></p><p>时间并非从经验中抛离出来的经验性概念，因为，如果不是由时间表象先天地作为基础，同时和相继甚至都不会进入到知觉内，所以一切概念的想象皆以时间为前提<br>即时间是为一切直观奠定基础的一个必然的表象，则时间是被先天给予的，只有在时间中现象的一切现实性才是可能的，即任何表象皆可抛离，除时间（作为此间表象的可能性的普遍条件）是无法抛离的</p><p>在此间先天必然性的基础上，有时间关系的原理、或一般时间公理的可能性，有如：时间只有一维，且无法从经验中引出，因为经验无法提供严格普遍性与无可置疑的确定性<br>这些原理在经验本上称为可能的诸规则而起作用，并且经验之前教导我们，而非经验之后<br>我们只能说：通常的知觉告诉我们是这样，但不能说它必然是这样</p><p>时间不是什么推论性的、或是人们所说普遍性的概念，而是感性直观的纯形式<br>不同的时间只是同一个时间的各部分，但只能通过惟一的对象被给予的表象就是直观<br>因为甚至连不同的时间不能是同时的这一命题也不能从一个普遍概念中推出来，即直接包含在时间的直观和表象之间<br>即必须由直接的直观来为它奠定基础<br>时间概念的先验阐明：只有在时间内，两个矛盾队里的规定才会在一个事物中被发现，即前后相继的被发现，则时间为先天综合知识为现实可能</p><p>引出如下结论：<br>时间在抛离一切直观概念后依旧存在，即时间在没有任何对象概念时仍然存在<br>如果时间作为某种已存在的规定或秩序就不能线性于对象作为条件，也不可能通过综合命题而被先天认识和直观到了<br>相反，这件事很容易发生，如果时间为一切直观得以在内心中产生的主观条件，则此一内直观的形式就能先于对象、因而先天地得到表象了<br>时间不过是内部感官的形式，即我们自己的直观活动和我们内部状态的形式，即时间本身的表象是直观，因此时间的一切关系都能够在一个外部直观上面表达出来<br>时间是所有一般现象的先天形式条件，空间是一切外部直观的纯形式，它作为先天条件只是限制在外部现象</p><p>如果我们把我们的在内部直观自己并借这种直观也把一切外部直观包括在表象能力中的方式都抽掉<br>因而把对象如同他们可能自在地存在那样来看待，那么时间就什么也不是了<br>时间只就现象而言才有客观的有效性，因为现象是我们已经当做我们感官的对象的事物<br>但如果我们抽掉我们直观的感性，因而抽掉我们所持有的那种表象方式，而谈论一般的物，则时间就不再是客观的了<br>因此时间只是人类的直观的一个主观条件（此直观永远是感性的，即限制于人类为对象所刺激的范围内），它超出主观就其自在来说则什么也不是<br>即时间的先验的观念性与任何对象的表象</p><p>时间并不依赖于对象本身，而只依赖于直观它的那个主体<br>纯粹数学：空间和时间是一切感性直观的两个合在一起的纯形式，它们由此使先天综合命题称为可能</p><p>我们的一切直观无非是关于现象的表象</p><hr><p><strong>先验感性论第二版注解相关：</strong></p><p>一切直观无非是关于现象的表象，即人类所直观之事物并非自在之物本身，人类即不是为了自在之物而直观那些事物，它们的关系也并非自在地本身如同它们想我们显现出来的那种性状<br>如果人类将主体或一般感官的主观性状取消，客体在空间和时间内的一切的相关概念以及其本身都会消失，即失去任何意义，所以其不可能作为现象而自在的实存，而只能基于人类的内感性而实存<br>所以人类只能与这种方式发生关系，即空间和时间是这种方式的纯形式，一般感觉则是质料<br>只有这两种形式是人类所能先天的，即在一切现实知觉之前认识到，因此称其为纯直观<br>感觉则是人类知识中得知知识被叫做后天知识、即经验性的东西，所以前者必须依赖于人类的感性，而后者则可以是极为多种多样的<br>即便人类的这一直观提升到最高程度的清晰性，人类也不能借此进一步知悉自在对象本身的性状<br>在本源地依赖于主体的时间和空间条件下，只能通过直观的方式所带来的感性来认识与理解一切概念，即事物的实存，所以自在的对象本身回溯什么，绝对不会通过对它们那惟一被赋予了人类的现象的最明晰的知识而被人类知道</p><p>内心直观自己并非像它直接主动地表象自己那样，而是按照它从内部刺激的那种方式，因而是像它对自己所显现的那样，而不是它所示的那样</p><p>所以人类的整个感性无非是对事物的混乱表象，这种表象夹杂着自在之物本身的概念，即处于人类未借意识将之分辨清楚的任何相关概念的堆积状态<br>而清晰的表象与不清晰的表象的惟一区别只在于逻辑上，而不涉及内容</p><p>健全知性的公正概念来源于对同一个概念的任何思辨性产出，但人类在生活中无法意识到其间的思想所存在的大多数与多方面表象</p><p>人类的对于某一概念的直观只不过是只包含某物的现象以及人类由此被刺激的方式，而人类认识能力的这种接受性就被称为感性，其与有关自在对象本身的知识之间，永远存在着天壤之别</p><p>感官无法超越直观所带来的现象，即自在之物的纯粹，则只能了解感性的直观而无法了解先验的客体</p><p>将本应归于现象的概念归为幻想，如果将人类赋予那些表象形式以客观的实在性，即无法避免不因此而把一切都转化为单纯的幻想</p><p>如果将一切由直观所带来的感性概念所引出的自在之物划分为幻相，则自身于现实间的独立存在也终将与时间或空间一起转化为纯粹的幻相了，这种荒唐的错误至今还从来没有人犯过<br>不应该叫做荒唐的错误，而是不明晰与智慧的不充备与不成熟所带来的必然结果</p><p>不需要将空间与时间间所衍生的直观方式局限于人类的感性，且有可能一切有限的思维的存在着在这点上是必须与人类必然一致的（目前对此无法断定）<br>所以这种直观方式毕竟不会由于这种普遍有效性而不再是感性，这正是因为它是派生的直观，而非本源的直观，因而不是智性直观<br>此间的智性直观以此看来应只属于原始存在者，而永远不属于一个按存有及其直观（在对被给予客体的关系中规定其存有的那个直观）都是不独立的存在者</p><hr><p><strong>主观内容：</strong></p><p>去承认唯心主义，并在唯心主义的道路上越走越远，绞尽脑汁的去研究与单纯只利用智慧去思考，来以描述与明晰世界、现实或自在之物的本质与概念<br>唯心主义所带来的必然结果就是将人类自存在于现实以来利用智慧所想方设法的建造了几千年甚至上万年的逻辑、理智、思维、科学（自然与数理）大厦变得摇摇欲坠</p><p>去承认唯物主义，唯物主义于现实间将拥有惟一的终点，用行动与实践去证明一切，即一切数理的基本命题可以被称之为真<br>可以证得其中的任一原理或性质为真，则皆为真，即为自然与纯粹的真，只要其符合人类所需的结果，即其需求便可称之为真<br>即去接受人类的大脑与智慧进化了成千上万的结果，并以此继续存在，如果命题为假，则任何概念将不会产生任何意义（此唯物主义是建立在人类主观与客观的价值观上的）</p><p>抛离一切有关唯心主义的任何相关概念去思考，即单一性思考</p><p>将不去排除完全性概率与量子理论的现实存在性，量子理论的完全随机性将会产生出有与无之间的概念，如果量子理论存在，则此概念即为现实间的必然性存在<br>而绝非形而上学，纯粹与绝对的唯物主义所涉及的一切概念都不应被称为哲学，而是无限接近于纯粹的科学或者就是绝对的科学，即单向的线性思维</p><p>纯粹唯物主义，给单一方向的思维方式命名为：惟极（惟端）逻辑，即阴阳二极所平衡之极端：太极，指向惟一的平衡之点，即惟一方向</p><p>先验，纯粹向前思考，此间纯粹向后思考，即现实间的存在</p><p>将一切不可确定的概念皆归于确定的</p><p>它有可能是一种无知，也有可能不是一种无知</p><p>对于自身的无知与对于现实的无知</p><hr><p>现实则为存在，实践则为真理<br>只要在现实间通过一切逻辑与直观的感性所带来的、特指于人类的结果被人类判定为是正确的，则其必然存在<br>形而上学、极端唯物主义与哲学存在的必要性</p><p>物极必反，盛极必衰，这句话虽然被普遍的认知为定理，但还远远称不上真理，但在现实间已经经由了无数次的实现、理性与逻辑上的证明<br>本质上并不会借助任何人类的直观感性与任何相关的知性，一旦经由其借助，必将陷入极尽的递归，</p><p>行动成就于现实</p><p>一切哲学、神学、唯心与迷惑的终点</p><p>自在之物，如何去理解自在之物与证明其存在的必要性<br>智慧与现实之间的关系，利用智慧去理解自在之物<br>如果有对自在之物的任何概念猜想，便是足矣去证明与明晰它的理由<br>一切存在皆为合理与我思故我在则与以上所提到物极必反概念的本质相同<br>如果智慧想要去认知，则必然会认知，智慧是不同于现实的存在，大脑、算法、计算能力与创造能力<br>自然的结晶之一：人脑，无数电磁信号组合而构成计算能力，此间的信号有可能并非电磁信号，而是其它任何形式的信号，即以光为载体而产生的信号与量子理论，即[1,1]的存在性</p><p>现实间所不存在的纯粹，所没有意义去探讨的纯粹，接触与接近</p><p>不过是一滩碳水化合物之间的化学与物理作用所产生的结果</p><p>没有意义的概念为什么会想到，关于人类理性的岔路与现实的漏洞，单向路线，抛离一切分支<br>道可道，非常道</p><p>明则知，存即行 &amp; 存即行，明则知</p><p>明确则可了解，存在即可行动</p><hr><ul><li><p>以上为补充内容</p></li><li><p>先验感性论的结论即为获取了为对解决先天综合命题是如何可能的？这一论题所需要的构建之一，即先天的纯直观：空间与时间，则为此间所规定了最基本的范围</p></li></ul><hr><ul><li>纯粹理性批判（唯心主义）：<br>先验感性论<br>先验逻辑：先验分析论 &amp; 先验辨证论<br>先验分析论：概念分析论 &amp; 原理分析论<br>先验辨证论：纯粹理性的概念 &amp; 纯粹理性的辩证推论<br>先验方法论</li></ul><hr><p>语句晦涩难懂，此间的晦涩难懂并不是指内容所涉及的范围有多么高深且不可理解或对于术语的任何使用，而是完全性的不符合现代人的语言与话语逻辑，此间所带来的结果只有无限的拉长对其阅读所带来的时间消耗<br>即便对其间的术语理解到了最接近于纯粹的地步，也需要对其间的每个语句进行逻辑化的规划和整理<br>其实它不是快不快的问题，思考对于我来说是一种享受<br>在某种现实领域的任何现实概念中皆有无数种书籍对于此间一种概念的理解，这些书籍的区别在于对其理解的范畴与深度；<br>寻求最大化包含该领域内的所有概念的书籍去理解与阅读，将会将时间成本最低化，即没必要去读太多的书籍，只需要读少量包含于其它书籍所有概念的书籍。</p><ul><li><p>绪论相关：<br>纯粹性知识 &amp; 经验性知识<br>分析判断 &amp; 综合判断<br>纯粹理性及其推论</p></li><li><p>先验要素（先验感性论）：<br>空间 形而上学 &amp; 先验角度 &amp; 结论<br>时间 形而上学 &amp; 先验角度 &amp; 结论 &amp; 先验感性论 &amp; 结论<br>先验逻辑：先验分析论 &amp; 原理分析论 &amp; &amp; 先验辨证论 &amp; 先验方法论</p></li><li><p>纯粹理性批判-康德</p><blockquote><p>译者：邓晓芒，杨祖陶</p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Apr 21 2020 00:32:29 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;纯粹理性批判-先验感性论-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="哲学" scheme="https://unit-serow.github.io/categories/%E5%93%B2%E5%AD%A6/"/>
    
      <category term="先验哲学" scheme="https://unit-serow.github.io/categories/%E5%93%B2%E5%AD%A6/%E5%85%88%E9%AA%8C%E5%93%B2%E5%AD%A6/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔-2020-04-20</title>
    <link href="https://unit-serow.github.io/2020/04/20/%E9%9A%8F%E7%AC%94-2020-04-20/"/>
    <id>https://unit-serow.github.io/2020/04/20/%E9%9A%8F%E7%AC%94-2020-04-20/</id>
    <published>2020-04-19T19:23:11.000Z</published>
    <updated>2020-04-20T16:50:26.770Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c7bb707f83861037a34cb41995b92ee99acd8c1239263f9ae0dd693132ba2ee7"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      加密文案
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>哲学-2</title>
    <link href="https://unit-serow.github.io/2020/04/18/%E5%93%B2%E5%AD%A6-2/"/>
    <id>https://unit-serow.github.io/2020/04/18/%E5%93%B2%E5%AD%A6-2/</id>
    <published>2020-04-17T21:35:05.000Z</published>
    <updated>2020-04-17T21:38:59.471Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Apr 18 2020 05:39:05 GMT+0800 (中国标准时间) --><center><strong>近代哲学纲要-1</strong></center><a id="more"></a><h2 id="近代哲学纲要-1"><a href="#近代哲学纲要-1" class="headerlink" title="近代哲学纲要-1"></a>近代哲学纲要-1</h2><ul><li>哲学历史相关</li></ul><h3 id="欧洲近代史"><a href="#欧洲近代史" class="headerlink" title="欧洲近代史"></a>欧洲近代史</h3><ul><li>欧洲的近代史包括从中世纪（以文艺复兴作为标志）到工业革命为止的三个世纪，约为十五世纪初至十八世纪末（准确时间为1942年新世界~1789年法国大革命）。</li></ul><p>中世纪的欧洲在经历了由中世纪前期（500~1000）所衍生的民族大迁徙（400-700），再到维京时期（790~1066）与中世纪中期（1100~1300）；<br>又经由十字军东征（1096~1291）与中世纪后期（1300~1499）所衍生的百年战争（1337~1453）之后；<br>进入了逐渐步入近代欧洲的文艺复兴（1300~1600）时期。</p><p>近代欧洲在经历了由宗教改革（1517~1648）所衍生的地理大发现（1500~1700）与三十年战争（1618~1648）之后进入了君主专制时期；<br>即逐渐步入了现代欧洲所衍生的启蒙运动时期 &amp; 理性时代（1600~1700）所带表的现代时期；<br>之后经由法国大革命（1789~1799）之后的拿破仑战争（1803~1815）与塞尔维亚革命（1804~1835）；<br>以此影响直至工业化所带来的第一次世界大战（1914~1918），十月革命（1917）、第二次世界大战（1939~1945）、冷战（1947~1991），再到欧洲一体化（1923~1973）的相关进程；<br>最终到达如今。</p><p>[中世纪~现代] 思潮转折点：文艺复兴 &amp; 宗教改革（1300~1600/1517~1648）、启蒙运动 &amp; 理性时代（1600~1700）、法国大革命 &amp; 第二次世界大战（1789~1799/1939~1945）。<br>其时间跨度约为700年（1300~1945），空间跨度为欧洲至世界，思维跨度为文艺复兴（中世纪欧洲） ~ 现代哲学（1800~1900）<br>此间只对启蒙运动时期之后，即1600年之后的近代哲学（1600~1800）思潮进行探讨，以早期近代哲学到现代哲学时期为基础的时间跨度</p><p>近代哲学不同于其前身，它与亚里士多德的关系更为独立，从17世纪开始，近代哲学以认识论为核心（由于经验论/经验主义与唯理论/理性主义）的争论，使物质与精神的关系作为认识论的首要问题凸显出来</p><ul><li>近代哲学可以分为早期近代哲学阶段与德国古典哲学两个阶段。</li></ul><hr><ul><li>早期近代哲学（17世纪和18世纪）：</li></ul><p>早期近代哲学的学术经典一般包括：勒内·笛卡尔、斯宾诺莎、戈特弗里德·威廉·莱布尼茨、约翰·洛克、乔治·贝克莱、大卫·休谟、伊曼努尔·康德。<br>其它对于早期近代哲学做出贡献的思想家，例如（这里不做过多阐述）：伽利略·伽利莱、皮埃尔·伽桑狄、布莱兹·帕斯卡、尼古拉·马勒伯朗士、艾萨克·牛顿爵士、克里斯蒂安·沃尔夫；<br>夏尔·路易·德·塞孔达（拉布雷德与孟德斯鸠男爵 ）、皮埃尔·贝尔、托马斯·里德、让·勒朗·达朗贝尔、亚当·斯密、伏尔泰（弗朗索瓦-马里·阿鲁埃），而让-雅克·卢梭则是反启蒙运动的开创者。</p><p>早期近代哲学的大致结束通常被确定为伊曼努尔·康德的试图限定形而上学的范围、证明科学知识用到的和自由来调和两者的关系</p><p>经验论与唯理论的争论也包含了唯物主义与唯心主义的争论，而在18世纪，法国的朱利安·奥弗雷·拉·美特利公开宣布唯物主义是唯一的，而百科全书的主编德尼·狄德罗也拒绝承认神的存在。</p><p>经验主义者在因果性上认为只有必然性才是唯一的，即为唯心主义的观念。</p><hr><ul><li>德国古典哲学（18世纪中后期至19世纪初期）：</li></ul><p>德国古典哲学时期的存在代表了此时的哲学进入了近代哲学的总结时期。<br>其主要的思潮核心的转折为：思维与存在的关系更加明确与产生了系统辩证法。</p><p>其代表人物有：I.康德、J.G.费希特、F.W.谢林、G.W.F.黑格尔等。</p><ul><li><p>康德：<br>康德主义，即批判哲学的先验方法（受到休谟的影响）</p></li><li><p>费希特 &amp; 谢林：<br>费希特：主观的思维与客观的存在之统一理论；<br>谢林：自然和精神、存在和思维、客观和主体，表面相反，实则统一，在同一个绝对的不同发展阶段，此绝对则为万物万物之根源，艺术将是最直观的理性；<br>费希特原承认斯宾诺莎的机械的因果决定论，后受康德影响，谢林从费希特理论出发且深受斯宾诺莎和文学上浪漫主义的影响。</p></li><li><p>黑格尔：<br>黑格尔主义，即创立了西方哲学史上最庞大的唯心主义体系并系统的阐述了辩证法，包括关于绝对精神概念的提出</p></li></ul><hr><ul><li>现代哲学（1800~1900）：<br>19世纪中叶开始，西方哲学进入了现代哲学阶段（在19世纪中期，欧洲的工业革命几近完成）</li></ul><p>现代哲学与19世纪中后期的哲学流派：叔本华-意志主义、新康德主义、新黑格尔主义、马克思主义。<br>此时的哲学与后来的存在主义、现象学在当代一般归为欧陆哲学，与20世纪以后着重严禁逻辑与词语分析所发展的分析哲学称为风格迥异的两大西方哲学典范。</p><p>20世纪的西方哲学体系的主流有两条：<br>一为由弗里德里希·路德维希·戈特洛布·弗雷格（弗雷格）与伯特兰·亚瑟·威廉·罗素，第三代罗素伯爵（罗素），并以路德维希·约瑟夫·约翰·维特根斯坦（维特根斯坦）为主的分析哲学。<br>其将哲学问题变成语言分析问题，因此产生了逻辑经验主义或逻辑实证主义以及其他语言分析相关的哲学学派。</p><p>二为由埃德蒙德·古斯塔夫·阿尔布雷希特·胡塞尔（胡塞尔）创立的现象学发展起来，以马丁·海德格尔（海德格尔）为主的存在主义。<br>其将哲学问题变成对个人生存状态的反思，由此产生了解释学。</p><ul><li>其他思潮这里不做过多阐述。</li></ul><hr><p><strong>重要的哲学流派：</strong></p><ul><li>德国唯心主义哲学（核心思潮为唯心主义、经验主义 &amp; 理性主义），代表作：纯粹理性批判、精神现象学。</li><li>马克思主义哲学，（核心思潮为唯物主义、辩证唯物主义 &amp; 历史唯物主义），代表作：共产党宣言、自然辩证法。</li><li>实用主义，（核心思潮为理性主义与经验主义之间）</li><li>现象学，（核心思潮为直接直观 &amp; 经验感知）</li><li>存在哲学，（核心思潮为非理性主义）</li></ul><hr><ul><li>相关关键字：<br>史前、古典、中世纪、近代、现代。<br>文艺复兴、宗教改革、巴洛克、启蒙时代、科学革命、大分流、欧洲一体化。</li></ul><hr><h3 id="其它内容"><a href="#其它内容" class="headerlink" title="其它内容"></a>其它内容</h3><p><strong>相关参考：</strong></p><ul><li>皆源于中文维基：<blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%A6" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%A6</a><br><a href="https://zh.wikipedia.org/wiki/%E4%BC%8A%E6%9B%BC%E5%8A%AA%E5%B0%94%C2%B7%E5%BA%B7%E5%BE%B7" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E4%BC%8A%E6%9B%BC%E5%8A%AA%E5%B0%94%C2%B7%E5%BA%B7%E5%BE%B7</a><br><a href="https://zh.wikipedia.org/wiki/%E6%A0%BC%E5%A5%A5%E5%B0%94%E6%A0%BC%C2%B7%E5%A8%81%E5%BB%89%C2%B7%E5%BC%97%E9%87%8C%E5%BE%B7%E9%87%8C%E5%B8%8C%C2%B7%E9%BB%91%E6%A0%BC%E5%B0%94" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E6%A0%BC%E5%A5%A5%E5%B0%94%E6%A0%BC%C2%B7%E5%A8%81%E5%BB%89%C2%B7%E5%BC%97%E9%87%8C%E5%BE%B7%E9%87%8C%E5%B8%8C%C2%B7%E9%BB%91%E6%A0%BC%E5%B0%94</a><br><a href="https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%B8%E5%AE%B6%E5%88%97%E8%A1%A8" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%B8%E5%AE%B6%E5%88%97%E8%A1%A8</a><br><a href="https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%B8%E5%B9%B4%E9%91%91" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%93%B2%E5%AD%B8%E5%B9%B4%E9%91%91</a></p></blockquote></li></ul><hr><p><strong>相关理论归纳：</strong></p><ul><li>形而上学</li><li>反现实主义、非现实主义、现实主义、存在主义</li><li>悲观主义、乐观主义、享乐主义、理想主义</li><li>唯物主义、形而上学唯物主义、辩证唯物主义</li><li>自我主义、理性主义、客观唯心主义、主观唯心主义、非理性主义、斯多葛主义</li><li>儒家思想、佛家思想、道家思想</li><li>利他主义、功利主义、唯美主义</li><li><p>至公（旧教）主义、抗辩（新教）主义</p></li><li><p>物极必反，盛极必衰，阴阳二元即为无</p></li><li><p>相关学科：神学、科学、心理学</p></li><li><p>分支：形而上学、知识论、逻辑学、伦理学、美学</p></li></ul><hr><ul><li><p>经验主义<br>培根（1561–1626）<br>霍布斯（1588–1679）<br>洛克（1632–1704）</p></li><li><p>唯物主义<br>笛卡尔（1596–1650）<br>斯宾诺莎（1632–1677）<br>莱布尼茨（1646–1716）</p></li><li><p>神学<br>梅森（1588–1648）<br>伽桑狄（1592–1655）<br>帕斯卡（1623–1662）<br>牛顿（1642–1727）</p></li></ul><hr><p><strong>领域相关：</strong></p><ul><li><p>形上学：<br>原子论、二元论、一元论、自然主义</p></li><li><p>本体论：<br>行动、事件、过程哲学</p></li><li><p>现实：<br>反实在论、概念论、唯心主义、唯物主义、自然主义、唯名论、实在论</p></li><li><p>知识论：<br>理性主义、唯心主义、经验主义、建构主义、特殊主义、怀疑论、唯我论、信仰主义</p></li><li><p>精神：<br>行为主义、取消主义、副现象论、机能主义、客观主义、主观主义</p></li><li><p>伦理学：<br>结果论、义务伦理学、德性伦理学</p></li><li><p>自由意志：<br>相容论、决定论、自由意志主义</p></li><li><p>规范性：<br>绝对主义、特殊主义、相对主义、虚无主义、怀疑主义、普遍主义</p></li><li><p>美学：<br>形式主义、Institutionalism、Aesthetic response</p></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Apr 18 2020 05:39:05 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;近代哲学纲要-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="无" scheme="https://unit-serow.github.io/categories/%E6%97%A0/"/>
    
      <category term="concept" scheme="https://unit-serow.github.io/categories/%E6%97%A0/concept/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>代数-2</title>
    <link href="https://unit-serow.github.io/2020/04/16/%E4%BB%A3%E6%95%B0-2/"/>
    <id>https://unit-serow.github.io/2020/04/16/%E4%BB%A3%E6%95%B0-2/</id>
    <published>2020-04-15T19:25:10.000Z</published>
    <updated>2020-04-15T19:27:02.925Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Apr 16 2020 03:34:07 GMT+0800 (中国标准时间) --><center><strong>线性代数 & 纯粹概念理解-1</strong></center><a id="more"></a><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><h3 id="关于线性方程"><a href="#关于线性方程" class="headerlink" title="关于线性方程"></a>关于线性方程</h3><p>什么是线性方程<br>线性方程就是方程的别称，只不过线性方程相比方程的通常概念中增加了向量的概念<br>方程即为含有未知数的等式，线性方程表达式通常由实数（则为系数，通常视为未知数的系数），未知数，向量与等式所构成</p><p>假如有任一向量且某一集合空间内有一点，将此点连接到向量的基点，则有一线段，即称该线段的长度的值为实数（向量的基点到任一点的长度）<br>线性方程中的实数概念则由此可知，所以在定义该实数数值大小的时候就表达式已经对该线段中的任一点坐标与向量的基点坐标进行定义了<br>线性方程中还有一个必不可少的概念就是等式的值，只有在对其值已经确定且能够构成等式的时候才能称其为方程，而非普通的表达式<br>有如：a_11x_1 + a_12x_2 = b_1</p><h3 id="什么是线性方程组"><a href="#什么是线性方程组" class="headerlink" title="什么是线性方程组"></a>什么是线性方程组</h3><p>线性方程组就是多个线性方程所构成的多列表达式，这些表达式只用于表达同一平面内的某一种关系，比如说交叉关系<br>可以将每一个线性方程视为任一向量所构成的线段，该线段在某一空间内拥有意义<br>当线性方程组内有两个以上的线性方程，即为两个线段，此时这两个线段之间应该有一定的关系，关系有如相交或重合<br>如果没有关系，则此线性方程没有意义，则为无解，或称期间线性方程的关系是不相容的（此时的关系通常为平行），反之则相容<br>线性方程所有解，即未知量的解（或视为某一空间内的某一点）所构成的集合，被合称为该线性方程组的解集，不相容则为空集<br>相交时解集只有一个，平行时为零个，重合时为无穷多个元素，同时如果有两个方程则拥有相同的解集，则称它们之间的关系为等价</p><p>在求解线性方程组时可以带入严格三角形与的概念</p><p>由线性方程组的概念引出系数矩阵与增广矩阵的概念<br>矩阵就是一个矩形的数字阵列，矩阵中的行用于表达未知数的系数，而列用于表示向量概念<br>这个向量所表达的意义是什么呢<br>该向量用于表达第一个方程所属向量基点到下一个方程所属向量基点之间的距离大小，第一行方程还可以称为主行，其中的非零元素称为主元<br>比如：[1,0 &amp; 0,-1]，该矩阵中第一行的方程与第二行方程中向量所构成的线段的长度则为1<br>如果矩阵的行数与列数相等，则称此矩阵为方阵，如果在矩阵的右端加一列方程组的右端项，所得到的新矩阵则为该方程组的增广矩阵<br>增广矩阵每一行的第一个非零元所对应的变量被称为首变量，而在求解所进行的化简当中跳过的列所对应的变量则称为自由变量（行阶梯形）</p><p>如果得知了矩阵的概念，求解线性方程组就可以对行阶梯形的概念进行带入了，严格三角形是将所有的未知项的系数从下到上逐一化为零，从而最后得到一个倒着的三角形，而行阶梯形最后化得的矩阵图象则为呈现阶梯型线段<br>在将线性方程组的增广矩阵华为阶梯性形的过程称为高斯消元法</p><p>若同一个线性方程组内方程的个数多于未知量的个数，则称其为超定的，超定方程组通常是不相容的，同时将一个由任意未知量的任意个线性组的方程组称为亚定的，则为亚定方程组<br>如果某一相容的方程组内所有的未知项及其元均被解开，即除1之外的元均被消去，则将此矩阵称为行最简型<br>如果线性方程组的右端皆为零，则称其为齐次的，所以齐次方程组总是相容的，即为平凡解（则所有的未知量皆为零），反之则成为不平凡解</p><hr><h3 id="关于矩阵"><a href="#关于矩阵" class="headerlink" title="关于矩阵"></a>关于矩阵</h3><p>矩阵的算术运算有此几种，即为加、减、乘、标量乘法及转置<br>矩阵中的元素成为标量，它们通常是实数或复数，在大多数情况下所考虑的矩阵内的元素皆为实数<br>所以具有任意个实数和任意个变量的线性方程组的解是一个实的n元组，由实数组成的n元组则为向量，如果此n元组表示为一个1x任意数实数的矩阵，则称为行向量，若n元组表示为任意实数x1的矩阵，则称其为列向量<br>在使用矩阵方程时，通常多用列向量用于表示其解，所有任意实数x1的实数矩阵构成的集合成为该实数维欧几里得空间，即为R_n<br>若两个矩阵相等，则它们的维数及它们对应的元素必然相等，通常将此种关系称之为相等<br>矩阵间乘法的概念来源于线性方程组，其矩阵之间的乘积则为标量间的乘积，即其中元素的向量值的积，得出的结果称之为标量积<br>同一个矩阵内，其向量与标量之间所构成的表达式被称为其间的线性组合<br>关于矩阵的其它算法定理与推理这里不过过多赘述<br>以上所概念即为矩阵算术</p><p>关于矩阵代数，矩阵代数即为对于矩阵的代数运算法则，在代数的运算法则内有一些对于矩阵是可用的，还有一些则为不可用的，这里不做阐述</p><p>对于一个实数a，如果存在一个数b使得ab=1，则称它有关于乘法的逆元，任何非零的数a均有一个乘法逆元，则b等于a的倒数，此概念可以推广到矩阵乘法中逆的概念<br>如果存在这样的两个矩阵，则称其任一矩阵为非奇异的或可逆的，而另一个矩阵则为前一个矩阵的乘法逆元，反之则将其称之为奇异的</p><p>关于初等矩阵、分块矩阵<br>初等矩阵：<br>在任一线性方程组两端同时乘以同一系列的特殊矩阵所获得的一切新矩阵皆为初等矩阵，此间只进行了一次的初等行运算，另外还有三种初等运算所对应三种初等矩阵<br>另外还有对角矩阵与三角形矩阵<br>分块矩阵：<br>在数学中通常会将矩阵看成由若干子矩阵复合而成的矩阵，一个矩阵可通过在其内部画若干条直线来划分其子矩阵，其中的子矩阵还可以称之为快<br>标量在外积展开时还可以将其称之为内积，例如将两个矩阵进行乘法运算时，乘积中的每一个元素就是一个标量积（一个行向量乘以一个列向量）</p><hr><h3 id="什么是行列式"><a href="#什么是行列式" class="headerlink" title="什么是行列式"></a>什么是行列式</h3><p>关于矩阵的行列式</p><p>每一个方形矩阵可以和一个称为矩阵的行列式的实数相对应，以此来判断此矩阵是否奇异<br>在每一个拥有任意列与任意行的矩阵当中，均可对应于一个标量，然后以此标量来判断矩阵是否奇异</p><p>行列式即为由行与列所构成的表达式，可以将行列式视为矩阵对数值的处理强度，因为矩阵对于向量的处理是通过改变基向量而实现的<br>以某二维空间为例，有某一基向量的张成面积为某值，经过矩阵的处理，其面积变成了其他的值，此值所表示的意义则为该矩阵的行列式</p><p>可以将某个矩阵的行列式视为该矩阵的标量，其本质也是标量<br>如果有某两个矩阵，用其中一个矩阵减去另一个矩阵，则前一个矩阵称为后一个矩阵的子式，而前一个矩阵称为其任意标量（a_ij）的余子式</p><p>标量就是用于对矩阵本身产生表示作用的量，矩阵的行列式就是矩阵进行变化的结果（基于另一个矩阵处理后的张成面积），其行列式无论表示为何种状态，其矩阵皆能进行回推且值不发生改变</p><p>矩阵还拥有伴随构造，即可引出克拉默法则</p><hr><p>关于向量空间</p><p>也许最基本的向量空间就是欧几里得向量空间R^n，也可以将R^n空间看成是所有元素都是实数的n × 1矩阵的集合</p><p>关于子空间</p><p>关于线性无关、基和纬数、基变换</p><p>什么是行空间和列空间</p><p>代数…</p><p>代数好像无法用语言描述</p><p>…</p><p>这…</p><p>啊</p><p>代数学无法用语言描述，它不想数学分析，其概念几乎都可以用文字描述以便于理解</p><p>数字是数字，语言是语言，数字用于描述纯粹的精神性概念，而语言不同，语言可以连接现实与精神</p><p>代数，代数是什么呢</p><p>它代表的不是数，而是一种纯粹的精神概念</p><p>用数去代表精神，智慧与万物间所存在的规律</p><p>这才是代数</p><p>将抽象与纯粹的概念用以数表示</p><p>这是代数</p><p>代数</p><p>…</p><p>代表语言去描述精神，如果皆能用语言描述则代数将毫无意义</p><p>代数，用数去代表数，用数去代表精神概念，用精神概念去代表语言</p><p>用数去连接精神与现实</p><p>啊…</p><p>以后的笔记将会用纸去写，在计算机内直接用语言描述不太现实</p><hr><p>至此</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Apr 16 2020 03:34:07 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;线性代数 &amp; 纯粹概念理解-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="algebra" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/algebra/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔-2020-04-16</title>
    <link href="https://unit-serow.github.io/2020/04/16/%E9%9A%8F%E7%AC%94-2020-04-16/"/>
    <id>https://unit-serow.github.io/2020/04/16/%E9%9A%8F%E7%AC%94-2020-04-16/</id>
    <published>2020-04-15T19:24:57.000Z</published>
    <updated>2020-04-17T21:34:48.624Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="60b47140a60d841d311054e62b4a668e0a39dfcbddbe7acc6ead931ff70e7053"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      加密文案
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>代数-1</title>
    <link href="https://unit-serow.github.io/2020/04/15/%E4%BB%A3%E6%95%B0-1/"/>
    <id>https://unit-serow.github.io/2020/04/15/%E4%BB%A3%E6%95%B0-1/</id>
    <published>2020-04-15T11:42:39.000Z</published>
    <updated>2020-04-15T11:43:18.431Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Apr 15 2020 19:44:27 GMT+0800 (中国标准时间) --><center><strong>代数 & 矩阵基本概念文字描述-1</strong></center><a id="more"></a><h2 id="代数"><a href="#代数" class="headerlink" title="代数"></a>代数</h2><h3 id="何为代数-amp-线性代数"><a href="#何为代数-amp-线性代数" class="headerlink" title="何为代数 &amp; 线性代数"></a>何为代数 &amp; 线性代数</h3><p>代数只是对于现实进行描述的一种工具<br>而进行描述的过程中必然会有现实碰撞，即为几何<br>几何与代数不分家，因为现实处于空间之内</p><p>代数，代则为代指，即替代，用数去代替数，数将永远是数，永远都不会变<br>代数之间的运算皆基于自然间的规律与定理，无论怎么去代，它都永远不会变</p><p>线性代数就是代数的引申概念，本质与代数无异<br>加入线性的原因可能是对于学习阶段的标识与特指更加深层的代数理论</p><p>线性代数可以比作输入一段直线，经过加工之后，产出一段直线<br>线性的意思就是，往机器里扔进去直线，产出的肯定也是直线<br>它本来是啥，出来的就是啥，无论怎么去转换</p><p>还可以基于函数的概念来理解代数，函数的自变量通过对于对应法则的定义，所得出的因变量即可用于表示函数值<br>但是在通常情况下，自变量通常不止一个，而是有多个，此时经过运算后，因变量也会有多个，线性代数应运而生</p><p>如果有很多个数，可以将其用括号括起来，以此形成一个数组，在集合学中，数组被称为向量<br>而线性代数中所谓的对应法则则是线性代数中的矩阵<br>输入一段向量，经由矩阵（函数则为对应法则）的处理，最后输出一段向量，并且保证输入与输入的向量值的本质毫无差别<br>由此引出以下有关于矩阵的概念</p><hr><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><h3 id="何为矩阵"><a href="#何为矩阵" class="headerlink" title="何为矩阵"></a>何为矩阵</h3><p>矩阵是一个由向量构成的任意纬度的向量空间</p><p>假如输入一条直线[1,2]，即向量[1i,2j]，其中i与j称为基向量<br>向量的端点，基于平面的某一点进行连接，所产生的线段则为直线，这两个向量指向同一个方向且为同样大小，则此向量所示的图象则为直线，其长度是为一的一维线段<br>则以上的向量就是以这两个基本向量拼凑组合出来的</p><p>假如有某一个矩阵为[0,1 -1,0]，则此矩阵所代表对于向量的处理过程即为：将基向量i，换成矩阵中的第一列，将基向量j，换为矩阵中的第二列<br>然后再以新的基向量为原料，重新利用[1,2]来拼凑出一个新的向量，用新的基向量拼凑出来的新向量就是输出</p><p>$ \begin{bmatrix} 0 &amp; 1 \\ -1 &amp; 0 \\ \end{bmatrix} $</p><p>即第二列变成第二个基向量$\vec{j^1}$ = $ \begin{bmatrix} 1 \\ 0 \\ \end{bmatrix} $<br>第一列变成第一个基向量$\vec{i^1}$ = $ \begin{bmatrix} 0 \\ -1 \\ \end{bmatrix} $<br>则原来的向量$ \begin{bmatrix} 1 \\ 2 \\ \end{bmatrix}，变为$1 \cdot \vec{i^1} + 2 \cdot \vec{j^1}$<br>则有$ \begin{bmatrix} 0 \cdot 1 + 1 \cdot 2 \\ -1 \cdot 1 + 0 \cdot 2 \\ \end{bmatrix} $ = $ \begin{bmatrix} 2 // -1 // \end{bmatrix} $<br>这里用上标1来表示已变化向量<br>多维向量遇到多维矩阵同理，皆是向量之间的变化</p><p><strong>关于行列式</strong></p><p>矩阵对向量进行处理，而行列式则为用于描述其处理强度的概念</p><p>矩阵对向量的处理是通过改变基向量而实现的<br>这里以一二维空间为例，有某一基向量的张成的面积为某值，经过矩阵的处理，其面积变成了其它的值，此值所表示的意义则为矩阵行列式<br>有时候会出现矩阵的行列式为零，则说明新的基向量的张成面积为零，则说明新的基向量发生了重合，还有一些情况，矩阵的行列式为负数，则说明线性空间发生了翻转<br>也就是说，本来默认的两个基向量，j在i的逆时针方向，经过矩阵加工之后，线性空间发生了翻转，则导致i在j的逆时针方向</p><p><strong>关于单位矩阵</strong></p><p>矩阵能够对向量进行处理，从而产生一个新的向量，有一种矩阵比较特殊，无论给它输入什么样的向量，处理过后的向量皆与原向量相同，此种矩阵则为单位矩阵<br>既然矩阵对向量的处理作用是改变基向量，如果想保证输入与输出相等，则只需保证矩阵不会改变基向量即可<br>即每列只存在一个实数</p><p>所以n阶单位矩阵则为：<img src="/images/n阶单位矩阵-1.png" width="40%" height="40%"></p><p>呃…是有点粗糙了…</p><hr><p><strong>关于逆矩阵</strong></p><p>矩阵对于向量具有处理作用，即两个矩阵相乘，则表示的是两种加工作用的叠加<br>即为：向量1-&gt;矩阵1-&gt;向量2，向量2-&gt;矩阵2-&gt;向量三，等价于：向量1-&gt;矩阵1 \cdot 矩阵2 -&gt;矩阵3<br>如果当中的向量1经过此类处理后等于向量三，则说明向量经过矩阵1和矩阵2的处理之后，又变回去了<br>进一步说明矩阵1和矩阵2对于向量的加工正好相反，则可称矩阵1和矩阵2互为逆矩阵</p><p>即因为：向量1 -&gt; 矩阵1 \cdot 矩阵2 -&gt;向量1<br>又因为：向量1 -&gt; 单位矩阵 -&gt; 向量1<br>所以：矩阵1 \cdot 矩阵2 = 单位矩阵</p><p>为什么行列式为0的矩阵没有逆矩阵，因为行列式如果为0，表明矩阵在对向量的变换的过程种，将向量空间压缩到了一个更低的纬度上<br>比如将二维矩阵经过某一行列式维0的矩阵处理，则新的矩阵在同一条直线上（一维），向量降维后，将无法再还原回原来的样子</p><hr><h3 id="何为秩"><a href="#何为秩" class="headerlink" title="何为秩"></a>何为秩</h3><p>依旧基于矩阵对于向量进行加工的原理，以此变成另一个向量<br>比如一个三阶矩阵，可以对很多三维向量进行加工，从而完全变成另一套三维向量<br>有时候，所有这些新的三维向量最终都会落在一条直线上，即一维<br>有时候，所有的新的三维向量都落在一个二维平面上，即二维<br>有时候，所有的新的三维向量都落在一个三维空间上，即三维</p><p>以上的情况分别分别对应于秩1，2，3<br>总之，秩就是描述这个矩阵会不会将输入的向量空间将为<br>如果不会发生降维情况，此种情形称之为满秩</p><hr><p><strong>关于特征向量</strong></p><p>基于以上对于矩阵的概念描述</p><p>有时会出现对于某一个矩阵，输入一个向量，经过矩阵的处理后，新生成的向量与原来的向量共线<br>也就是说这个矩阵对这个特定的向量的处理过程种并没有改变方向，则称这个不会改变方向的向量为此矩阵的特征向量</p><p>虽然不会被改变方向，但通常大小会因此而改变，新的长度假如是原向量长度的a倍，则称这个a为特征向量的特征值</p><hr><h2 id="方程"><a href="#方程" class="headerlink" title="方程"></a>方程</h2><h3 id="何为方程"><a href="#何为方程" class="headerlink" title="何为方程"></a>何为方程</h3><p>含有未知数的等式可称为方程，方程本身即为表达式，即为方程式<br>含有未知数的等式，用于表示若干个数学表达式之间相等关系的一种等式（这里的相等并不准确）<br>方程式即为向量表达式，一个方程用于表达一个向量，而多个方程用于表达多个向量之间的关系</p><p>方程通常由常数项，未知项与其等式组合而成，一个表达式可视为由一个基点，一个向量与端点及其值所构成的等式<br>一个数就是一个向量，或者说一个数值是一个向量，或一个向量与一个常数的乘积</p><p>方程组，即为联立方程，将多个方程联合再一起，使其中的未知数同时满足一个方程的一组方程<br>能同时满足方程组中每个方程的未知数的值，称为方程组的解，解则为由多个不同向量所构成交点</p><p>一个矩阵内任一列，皆为向量，由原点，即端点引出，至第二行的所给出的值</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Apr 15 2020 19:44:27 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;代数 &amp; 矩阵基本概念文字描述-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="algebra" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/algebra/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>归纳法相关-1</title>
    <link href="https://unit-serow.github.io/2020/04/15/%E5%BD%92%E7%BA%B3%E6%B3%95/"/>
    <id>https://unit-serow.github.io/2020/04/15/%E5%BD%92%E7%BA%B3%E6%B3%95/</id>
    <published>2020-04-15T11:40:34.000Z</published>
    <updated>2020-04-15T11:43:54.225Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Apr 15 2020 19:44:27 GMT+0800 (中国标准时间) --><center><strong>归纳-1</strong></center><a id="more"></a><h2 id="归纳-1"><a href="#归纳-1" class="headerlink" title="归纳-1"></a>归纳-1</h2><ul><li>含有主观见解<blockquote><p>极端唯物主义</p></blockquote></li></ul><h3 id="数学归纳法（Mathematical-Induction、MI、ID）"><a href="#数学归纳法（Mathematical-Induction、MI、ID）" class="headerlink" title="数学归纳法（Mathematical Induction、MI、ID）"></a>数学归纳法（Mathematical Induction、MI、ID）</h3><p>数学证明方法之一，用于证明某个给定命题在整个（或者局部）自然数范围内成立<br>除了自然数以外，广义上的数学归纳法也可用于证明一般良基结构，例如集合论中的数，这种广义的数学归纳法应用于数学逻辑和计算机科学领域，并称其为结构归纳法<br>数学归纳法属于完全严谨的演绎推理法，事实上所有数学证明都是演绎法</p><p>最简单和最常用的数学归纳法是证明当n等于任意一个自然数的某命题成立，通常分为两步，即为起始步骤与递推步骤<br>数学归纳法常常需要采取一些变化来适应实际的需求，所以数学归纳法拥有众多变体<br>包括，从零以外的自然数开始、只针对偶数或只针对奇数、递降归纳法（也称递归归纳法）、完整归纳法（也称第二数学归纳法或强归纳法）、超限归纳法</p><p>形式写法通常使用此三种：二阶逻辑、一阶逻辑或一阶ZFC集合论（公理集合论）</p><p>皮亚诺公理视数学归纳法不证自明，设作共设，而于ZFC集合论，数学归纳法可从良序定理推导而出</p><ul><li><p>涉及概念：</p><blockquote><p>归纳推理、演绎推理、结构归纳法、数学证明<br>初等数论、初等数学、数学推理、数学哲学、数理逻辑</p></blockquote></li><li><p>以上内容参考自中文维基-数学归纳法</p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6%E5%BD%92%E7%BA%B3%E6%B3%95</a></p></blockquote></li></ul><hr><p>归纳、归纳至何处、由归纳法所产生的概念与结论、归纳的概念为何物</p><p>以下将对以上主题进行逐一讨论</p><hr><p>归纳</p><p>什么是归纳，归纳的文字意义是什么</p><p>归纳的意义不过于为归结与纳入</p><p>往哪里归结、往哪里纳入、为什么要将其归结、为什么还要纳入？</p><p>学习与知识的本质即为经验经由线性时间单位的累积所带来的结果单位<br>所谓的纳入，即为将进行数理证明所需要进行的逻辑推理步骤，进行统一的表示，直至双眼及感官可视的范围与空间</p><p>即感官范围-&gt;信息-&gt;大脑-&gt;精神-&gt;逻辑-&gt;结论-&gt;现实-&gt;文字-&gt;感官范围-&gt;大脑-&gt;…</p><p>对其进行表示的理由就是让智慧来对其进行下一个单位&amp;步骤的逻辑推理&amp;演算，将所有的知识&amp;智慧产出皆归纳到同一感官范围之内，即为归，而在每进行完一轮现实过程的处理之后，开始进入下一次基于智慧的递归<br>上一句话可以无视，进行拼凑的内容太多了<br>或者说，可以将感官范围到达大脑的过程，称为纳，而将其进行现实产出的过程，则为归</p><p>现实产出将会产生意义，其意义即为基于智慧对于当前逻辑的进一步演算与推理</p><p>说白了，就是将智慧所产出的内容归到纸上，然后再由感官纳到智慧，每一的归所带来的结果都是让下一轮的纳，更加具体且逻辑化</p><p>归纳法应用到现实当中就是证明以及推理的过程，此过程被智慧及其独立的个体意识记忆到除大脑以外的概念之上，比如说纸张</p><p>现实，智慧属于现实吗？<br>既然说到了智慧属于侧面，即智慧不属于现实，但为什么智慧会对现实产生影响呢</p><p>如果说智慧是不合理的存在，即不存在于现实（起源于无），那现实存在吗<br>如果智慧存在于现实，则现实存在于现实，那个体意识（智慧）有什么存在的意义吗<br>没有意义，智慧改变了现实与自然，关于唯心与唯物</p><p>如果以唯物的角度去思考，则智慧产生于环境与自然的线性时间累积<br>智慧源于无，与空同级，而非与现实同级，如何证明<br>无中生有<br>无中生有？<br>我不能容忍<br>0-&gt;1</p><p>已经说了，现实间的任何智慧都不可能到达于纯粹与无，只能无限的接近，如果智慧源于无，智慧的对立面？<br>意识的对立面则为无意识，智慧是有，而无则为无，智慧的对立面是无吗，现实的对立面则为虚拟，或精神</p><p>智慧与现实，智慧属于现实是说不通的，但不属于现实貌似也没有太强的逻辑性</p><p>我正在尝试用知识性来解释纯粹性，目前的知识性还太过弱小，此论题至此为止</p><p>不用文字表示了，以后如果有能力的话将用数理证明<br>写都写了，就不纳入随笔了</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Apr 15 2020 19:44:27 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;归纳-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="number theory" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/number-theory/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>无穷级数-1</title>
    <link href="https://unit-serow.github.io/2020/04/14/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0-1/"/>
    <id>https://unit-serow.github.io/2020/04/14/%E6%97%A0%E7%A9%B7%E7%BA%A7%E6%95%B0-1/</id>
    <published>2020-04-14T09:44:04.000Z</published>
    <updated>2020-04-14T09:44:38.318Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Apr 14 2020 17:44:45 GMT+0800 (中国标准时间) --><center><strong>无穷级数 & 欧拉公式-1</strong></center><a id="more"></a><h3 id="无穷级数"><a href="#无穷级数" class="headerlink" title="无穷级数"></a>无穷级数</h3><p>无穷级数是表示函数、研究函数性质以及进行数值计算的一种工具<br>常数项级数，无穷级数基本、函数顶级数、幂级数、三角级数</p><p>关于常数项级数</p><p>在由近似到精确的过程中，会有由有限个数量相加到无穷多个数量相加的问题，有如利用多变形面积来计算圆周率的近似值<br>在利用多边形面积来计算多边形面积时进行对其中和的表达式项数会无限增多，由此得知无穷多个数量以此相加的数理表达式</p><p>一般的，如果给定一个数列，$u_1,u_2,u_3,…,u_4,…$，那么由此数列构成的表达式，$u_1+u_2+u_3,…,+u_4+…$，被称作（常数项）无穷级数，简称（常数项）级数，即级数</p><p>形式定义记为：$\sum_{i=1}^{\infty} u_i = u_1+u_2+u_3+…+u_i+…$，其中第$n$项$u_n$叫做级数的一般项</p><p>关于表示无穷级数中无穷多个数量相加</p><p>作（常数项）级数的前n项的和：$s_n = u_1+u_2+…+u_n = \sum_{i=1}^{n} u_i$，其中$s_n$称为此级数的部分和，当$n$取其它实数值时，此等式将构成任意个新的数列<br>此时可通过该数列是否拥有无穷级数，以此来确定其收敛与发散</p><p>引出定义：如果级数$\sum_{i=1}^{\infty} u_i$的部分和数列{$s_n$}有极限$s$，即$\lim_{n \to \infty} s_n = s$<br>则称无穷级数$\sum_{i=1}^{\infty} u_i$收敛，此时的极限是则为此级数的和，并可表示为$s = u_1+u_2+…+u_i+…$<br>如果{$s_n$}没有极限，则称无穷级数$\sum_{i=1}^{\infty} u_i$发散</p><p>所以当级数收敛时，其部分和$s_n$是级数的和s的近似值，它们之间的差值（误差值）则为级数的余项，其绝对值则为误差$|r_n|$</p><p>由上述定义可得知级数与数列极限的关系，给一定级数$\sum_{i=1}^{\infty} u_i$，就有部分和数列${$s_n = \sum_{i=1}^{n} u_i$}$<br>反之，如果给定数列${s_n}$，就有以${s_n}$为部分和的数列的级数$s_1 + (s_2-s_1) + … + (s_i-s_{i-1}) + … + = s_1 + \sum_{i=2}^{\infty} (s_i - s_{i-1}) = \sum_{i=1}^{\infty} u_i$，其中$u = s_1，u_n = s_n - s_{n-1}$ $(n ≥ 2)$</p><p>按照定义，级数$\sum_{i=1}^{\infty} u_i$与数列${s_n}$同时收敛或同时发散，有$\sum_{i=1}^{\infty} u_i = \lim_{n \to \infty} s_n$，即$\sum_{i=1}^{\infty} u_i = \lim_{n \to \infty} \sum_{i=1}^{\infty} u_i$</p><p>无穷级数$\sum_{i=0}^{\infty} aq_i = a+aq+aq_2+…+aq_i+…$，叫做等比级数（或几何级数），其中$a ≠ 0$，$q$叫做级数的公比，此级数的为发散性质</p><p>关于收敛级数的定义、定理及其推论与柯西审敛原理与其推论这里不做过多阐述</p><p>常数项级数的审敛法、正项级数及其审敛法、交错级数审敛法</p><p>常数项级数的各项可以是正数、负数或零的级数可以被称为正项级数，此种级数非常重要，因为有很多级数的收敛性问题都可以归结为正项级数的收敛性问题</p><p>关于绝对收敛与条件收敛</p><p>有一一般级数$u_1+u_2+…+u_n+…$，其各项为任意实数，如果级数$\sum_{i=1}^{\infty} u_i$各项的绝对值所构成的正向级数$\sum_{i=1}^{\infty} |u_i|$收敛，则称$\sum_{i=1}^{\infty} u_i$绝对收敛<br>如果级数$\sum_{i=1}^{\infty} u_i$收敛，而级数$\sum_{i=1}^{\infty} |u_i|$发散，则称级数$\sum_{i=1}^{\infty} u_i$条件收散<br>可得知如果绝对级数收敛，其级数必定收敛<br>绝对收敛级数的性质这里不做阐述</p><hr><h3 id="幂级数"><a href="#幂级数" class="headerlink" title="幂级数"></a>幂级数</h3><p>关于函数项级数的概念<br>如果给定一个定义在区间$I$上的函数列，$u_1(x),u_2(x),u_(x),…,u_n(x),…$，则此函数数列所构成的表达式$u_1(x)+u_2(x)+u_3(x)+…+u_n(x)+…$可称为定义在区间$I$上的（函数项）无穷级数，简称（函数项）级数，即函数级数<br>对于每一个确定的值$x_0 \in I$，函数项级数称为常数项级数$u_1(x_0)+u_2(x_0)+u_3(x_0)+…+u_n(x_0)+…$，此级数可能收敛也可能发散<br>如果级数收敛，则称点$x_0$是函数项级数的收敛点，如果级数，就称点$x_0$是函数项级数的发散点<br>函数项级数的收敛点的全体称为它的收敛域，发散点的全体称为它的发散域</p><p>对应于收敛域内的任意一个数$x$，函数项级数成为一收敛的常数项级数，因而有一确定的和$s$<br>这样，在收敛域上，函数项级数的和是$x$的函数$s(x)$，通常称$s(x)$为函数项级数的和函数，此函数的定义域就是级数的收敛域，并写成$s(x) = u_1(x)+u_2(x)+u_3(x)+…+u_n(x)+…$<br>将函数项级数的前$n$项的部分和记作$s_n(x)$，则在收敛域上有$\lim_{n \to \infty} s_n(x) = s(x)$，记$r_n(x) = s(x) - s_n(x)$，$r_n(x)$叫做函数项级数的余项（当然，只有$x$在收敛域上$r_n(x)$才有意义），并有$\lim_{n \to \infty} r_n(x) = 0$</p><p>函数项级数种简单而常见的一类级数就是各项都是常数乘幂函数的函数项级数，即所谓幂函数，由幂级数的系数所构成<br>幂级数的审敛与运算这里就不做过多阐述了</p><p>关于将函数展开成幂级数<br>如果有某一函数，要考虑它是否能在某个区间内展开成幂级数，就是说是否能找到这样一个幂级数，它在某区间内收敛，且其和恰好就是所给定的函数<br>如果能找到这样的幂级数，则称此函数在该区间内能展开称幂级数，而此幂级数在该区间内就表达了此函数<br>关于函数的幂级数展开式的应用，通常用有函数的幂级数展开式来进行近似计算，即在展开式有效的区间内，函数值可以近似地利用这个级数按精确度要求计算出来，计算时可带入舍入误差的概念</p><p>关于微分方程的幂级数中一阶微分方程和二阶齐次线性微分方程的幂级数的幂级数的解法这里不做阐述</p><hr><h3 id="欧拉公式"><a href="#欧拉公式" class="headerlink" title="欧拉公式"></a>欧拉公式</h3><p>设有复数项级数为$(u_1+v_{1}i)+(u_2+v_{2}i)+…+(u_n+v_{n}i)+…$，其中$u_n与v_n(n=1,2,3,…)$为实常数或实函数<br>如果实数部所构成的级数$u_1+u_2+…+u_n+…$，收敛于和$u$，并且虚部所构成的级数$v_1+v_2+…+v_n+…$，收敛于和$v$，则称该复数项级数收敛且其和为$u+vi$</p><p>如果级数各项的模所构成级数，$\sqrt{u_{1}^{2}}{v_{1}^{2}} + \sqrt{u_{2}^{2}}{v_{2}^{2}} + \sqrt{u_{n}^{1}}{v_{n}^{1}}$收敛，则称此级数为绝对收敛<br>如果以上所描述的复数项级数收敛，由于$|u_n| ≤ \sqrt{u_{n}^{2}}{v_{n}^{2}}$，$|v_n| ≤ \sqrt{u_{n}^{2}}{v_{n}^{2}} (n=1,2,3,…)$，则其由实部与虚部所构成的级数绝对收敛，从而复数项级数收敛</p><p>有一复数项级数</p><p>$1 + z + \frac{1}{2!} z^2 + … + \frac{1}{n!} z^n + … (z=x+yi)$，可证明该级数在整个复面上是绝对收敛的<br>在$x$轴上$(z=x)$它表示指数$e^x$，在整个复平面上通常用它来定义复变指数函数，记作$e^z$，于是$e^z$定义为$e^z = 1 + z + \frac{1}{2!} z^2 + … + \frac{1}{n!} z^n + …$ $(|z| &lt; \infty)$<br>当$x=0$时，$z$为纯虚数，以上$e^z$定义表达式则成为：<br>$<br>\begin{align}<br>e^yi = 1 + yi + \frac{1}{2!} (yi)^2 + \frac{1}{3!} (yi)^3 + … + \frac{1}{n!} (yi)^n + … \\<br>&amp; = 1 + yi - \frac{1}{2!} y^2 - \frac{1}{3!} y^3 + \frac{1}{4!} y^4 + \frac{1}{5!} y^5 - … \\<br>&amp; = ( 1 - \frac{1}{2!} y^2 + \frac{1}{4!} y^4 ) + ( y - \frac{1}{3!} y^3 + \frac{1}{5!} y^5 - … ) i \\<br>&amp; cos y + isiny<br>\end{align}<br>$<br>将$y$换写为$x$，上式即为：</p><p>&amp;&amp;e^xi = cos x - i sin x&amp;&amp;</p><p>即欧拉（Euler）公式</p><hr><p>欧拉公式 &amp; 推论：</p><p>以上述欧拉公式为例，其公式中的复数z可以表示为指数形式：</p><p>即$z = \rho(cos \theta + i sin \theta ) = \rhoe^{i\theta}$，其中$\rho = |z|$是z$$的模，而$\theta = arg z$是$z$的辐角</p><p>在上述欧拉公式中把$x$换成$-x$，又有：$e^{-xi} = cos x - i sin x$</p><p>把上式与其相加或相减，得：</p><script type="math/tex;mode=display">\left\{\begin{array}cos x = \frac{e^{xi} + e^{-xi}}{2}sin x =  \frac{e^{xi} + e^{-xi}}{2i}\end{array}\right</script><p>这两个式子也叫做欧拉公式，此式或上式揭示了三角函数与复变量指数函数之间的一种联系</p><p>最后，根据最初对于$e^2$的定义式，利用幂级数的乘法，不难验证$e^{z1+z2} = e^{z1} \cdot e^{e2}$</p><p>特殊地，取$z_1$为实数$x$，$z_2$为纯虚数$yi$，则有$e^{x+yi} = e^x \cdot e^{yi} = e^x (cos y + i sin y)$<br>也就是说，复变量指数函数$e^z$在$z=x+yi$处的值是模为$e^x$、辐角为$y$的复数</p><hr><h3 id="函数顶级数的一致收敛性"><a href="#函数顶级数的一致收敛性" class="headerlink" title="函数顶级数的一致收敛性"></a>函数顶级数的一致收敛性</h3><p>现已知有限个连续函数的和仍是连续函数，有限个函数的和的导数及积分也分别等于它们的导数及积分的和</p><p>而对于无穷多个函数多的和也拥有此类性质<br>即无穷多个连续函数的和$s(x)$依然是连续函数<br>无穷多个函数的导数及积分的和仍然等于它们的和函数的导数及积分<br>对于幂级数来说必然是肯定的，而对于一般函数项级数也依旧如此</p><p>设有函数项级数$\sum_{n=1}^{\infty} u_n(x)$，如果对于任意给定的正数$\varepsilon$，皆存在一个只依赖于$\varepsilon$的正整数$N$，使得当$n &gt; N$时，对于区间$I$上的一切$x$，都有不等式$|r_n(x)| = |s(x) - s_n(x)| &lt; \varepsilon$成立<br>则称此函数项级数$\sum_{n=1}^{\infty} u_n(x)$在区间I上一致收敛于和$s(x)$，也称函数序列{$s_n(x)$}在区间$I$上一致收敛于$s(x)$</p><p>关于其几何概念、对其的判别方法与一致收敛级数的基本性质这里不做阐述</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Apr 14 2020 17:44:45 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;无穷级数 &amp; 欧拉公式-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="mathematical analysis" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/mathematical-analysis/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>多元微积分-1</title>
    <link href="https://unit-serow.github.io/2020/04/14/%E5%A4%9A%E5%85%83%E5%BE%AE%E7%A7%AF%E5%88%86-1/"/>
    <id>https://unit-serow.github.io/2020/04/14/%E5%A4%9A%E5%85%83%E5%BE%AE%E7%A7%AF%E5%88%86-1/</id>
    <published>2020-04-13T22:12:23.000Z</published>
    <updated>2020-04-13T22:18:17.174Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Tue Apr 14 2020 06:18:24 GMT+0800 (中国标准时间) --><center><strong>多元微&积分及其空间解析几何概念完全文字描述</strong></center><a id="more"></a><ul><li>向量&amp;空间解析几何&amp;多元复合/隐函数微分（偏导&amp;全微）&amp;重积分&amp;曲线微分&amp;曲线积分&amp;曲面积分<blockquote><p>不对空间解析几何进行过多讨论，以纯粹的代数角度去理解多维</p></blockquote></li></ul><h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><h3 id="关于向量"><a href="#关于向量" class="headerlink" title="关于向量"></a>关于向量</h3><p>客观现实中任何概念的任何存在于现实间的概念（或称此概念为大小、方向等等），即为向量，向量又被称为矢量<br>数学中常用一条有方向的线段，即有向线段来表示向量，有限线段的方向表示向量的方向</p><p>在现实中，有些向量与起点有关，有些则无关<br>因为一切向量的共性是它们都有大小和方向，因为在数学上只研究与起点无关的向量，并称这种向量为自由向量，简称为向量<br>即只对向量的大小和方向进行考虑，而不论它的起点在什么地方<br>当遇到与起点有关的向量时，可在一般原则下作特别处理<br>数学中，向量通常特指自由向量，而物理中通常将向量称为矢量</p><p>当某一自由向量和另一自由向量大小相等且方向相同，则称其之间的关系为相等，也就表示经过平行移动后能完全重合的向量是相等的</p><p>向量的大小被称作向量的模，模即为数的绝对值，模等于1即为单位向量，模等于零则为零向量，记为0<br>零向量的起点和终点重合，所以没有对于方向的讨论意义</p><p>设某一空间内有两个非零向量，取空间内任意一点，点与向量依次连接为直线<br>所得出的角则为向量之间的夹角，即角由向量在同一空间集合内的自由定义得出<br>如果这两个向量之中的任一向量为零向量，有规定，夹角可以在0到定义区间内任意取值</p><p>如果此间向量的夹角等于最大值或最小值（无穷大的极限）间的一个确定值<br>则称这两个向量之间平行<br>如果夹角等于最大值的一半，则称为垂直<br>由以上对于零的规定得出结论，零向量与任何向量皆平行与垂直</p><p>当两个平行向量的起点放在同一点时，它们的终点和公共起点应在一条直线上，因此两向量间平行，还可称其为共线<br>当多个向量的起点在同一点时且终点和公共起点在同一平面上，则称此多个向量为共面</p><hr><h3 id="关于向量的加减法"><a href="#关于向量的加减法" class="headerlink" title="关于向量的加减法"></a>关于向量的加减法</h3><p>三角法则 &amp; 平行四边形法则：c=a+b<br>由此得出推论，交换律：a+b=b+a，结合律：(a+b)+c=a+(b+c)</p><p>如果有一递增向量a1+a2+…+an，以前一个向量的终点作为次一次的起点，相继作向量a1,a2,…,an<br>再以第一个向量为起点，最后一个向量为终点作一向量，这个向量即为所求的和<br>即有s=a1+a2+a3+…+an</p><p>设a为一向量，与a的模相同而方向相反的向量叫做a的负向量，记为-a</p><p>由此引出两个向量之间的差，有如：b-a=b+(a)，即把向量-a加到向量b上，使得b与a的差b-a<br>推论不进行说明</p><p>关于向量的乘法</p><p>目前推论：向量与任何实数的乘积皆为向量，如果实数大于零，则其乘积与原向量相同，如果实数小于零则其乘积与原实数相反，如果实数等于零，则其乘积等于零，如果是零向量，则方向随意<br>实数即为有值向量，<br>有推论：同方向向量于同方向向量的乘积为同方向向量，不同方向向量与不同方向向量的乘积为不同方向向量，有如：<code>a*a=a^2，a*-a=-a^2，-a*-a=a^2</code></p><p>向量的相加以及数乘向量通常为向量的线性运算</p><p>可证推论：一个非零的向量初一它的模的结果是一个与原向量同方向的单位向量<br>其它推论暂时省略</p><hr><h2 id="空间解析几何"><a href="#空间解析几何" class="headerlink" title="空间解析几何"></a>空间解析几何</h2><h3 id="关于空间直角坐标系"><a href="#关于空间直角坐标系" class="headerlink" title="关于空间直角坐标系"></a>关于空间直角坐标系</h3><p>由同一集合空间内有四轴、横轴、纵轴、数轴及坐标轴构成<br>三个坐标轴将空间分为八面，每一面称为挂限，第一卦限即为最直观的挂限<br>即由横轴、坐标轴、数轴构成二维面、数轴、坐标轴、纵轴构成的二维面、纵轴、坐标轴、横轴构成的而维面所构成的一个三维空间</p><p>任何现实的三维空间皆由这八个挂面所构成，即八个挂面对应于八卦中的八个卦爻，构成了现实的三维空间，即现实世界</p><p>将由向量所基于坐标系内的坐标轴以准确坐标表示的等式即为坐标分解式，坐标分解时称原向量为沿定义个数坐标轴方向的分向量<br>如果坐标轴为被定义的有序数，此有序数被称为其原向量的坐标或点，原向量到点的向量被称为关于此坐标轴内原点的向径</p><p>利用向量的坐标自然可得向量的加减法和向量与数的乘法运算规则（暂时还不算定理）</p><p>关于向量的模、方向角、投影：<br>任一非零向量与三条坐标轴的夹角所产生的角被称为方向角，则其余弦方程被称为方向余弦，即向余弦</p><p>设某一非零单位向量与任意点为确定的横轴（一维空间），任给另一个其它的单位向量，作原点到此向量的线段等于此向量大小，再作此线段另一端点垂直于前面所描述的轴<br>延伸前一向量直至于线段端点重合，则此重合点为端点再前一向量上的投影<br>则垂直线称为前一向量在横轴上的分向量，如果有一常数，常数与第一个向量的和等于垂直点到原点的距离，则将该常数称为前一向量在横轴上的投影</p><p>数量积即为两向量夹角的余弦的乘积，向量积则为夹角的正弦的乘积，混合积则为某两个向量的数量积与第三个任意向量的乘积</p><p>曲线方程 &amp; 曲面方程、空间曲线方程、空间直线方程皆为表达式，脑部一下就行</p><hr><h2 id="多元函数微分"><a href="#多元函数微分" class="headerlink" title="多元函数微分"></a>多元函数微分</h2><h3 id="什么是一元函数与一元平面（二维空间）"><a href="#什么是一元函数与一元平面（二维空间）" class="headerlink" title="什么是一元函数与一元平面（二维空间）"></a>什么是一元函数与一元平面（二维空间）</h3><p>以前所讨论的函数皆只有一个自变量，这种函数被称为一元函数<br>但是现实中的一个变量往往依赖于多个变量，由此引出多元函数与多元函数微分与积分的基本问题</p><p>以下的概念皆基于一元函数及其微分来对多元函数及其微分进行讨论，一元到二元与二元到其它多元的归概念与规律相同</p><p>先来谈谈什么是多元函数，有关于平面点集与<code>*n</code>纬空间<br>在讨论一元函数时所涉及的概念、理论以及芳芳都是基于某一定义集合内的空间，这里将这些集合称为R1，R2，R3，…，Rn等等，以此类推</p><p>当有二维数组（有序二元实数组）在任一平面直角坐标系间内定义，则此间的任意点都将与此二维数组之间建立了对应关系<br>所以该有序实数组内的任何实数与其平面上任何点都将没有区别，称这种建立了坐标系的平面称为坐标系平面</p><p>二元有序实数组的全体所构成的集合即为坐标平面，坐标平面内具有某种性质的任意点的集合，称之为平面点集</p><p>设有任一点是平面上的一个点，又有某一正数存在于此平面间，与此点距离小于此常数的点的全体所构成的集合，即为此点的邻域<br>内点就是邻域内的任意点，外点就是领域外的任意点，如果有点存在于临界的定义重合的位置，则此点为边界点，则此临界内所有点的集合所构成的，以闭区间形式所表示的集合，称为边界<br>还有一些重要的点集，比如开集、闭集、连通集、区域、闭区域、有界集都由此引出</p><h3 id="什么是N维空间"><a href="#什么是N维空间" class="headerlink" title="什么是N维空间"></a>什么是N维空间</h3><p>设n为被定义的一个正整数，用Rn表示n元有序数组的全体所构成的集合，则表示n维空间，也就是R的n次方，即某一集合的n次方</p><p>可以把所谓的n维空间理解为某一个多元数组，关于其线性运算的概念这里就不说了<br>先说说多元函数，也就是多维函数，所谓的元就是根源，即对其基本的定义</p><p>设D是R^2的一个非空子集，则有映射f:D-&gt;R为定义在D上的二元函数，通常被记为z=f(x,y),(x,y)∈D或z=f(P),P∈D，则点集D称为函数的定义域，x与y为自变量，z为因变量<br>基于上述描述，与自变量x和y的一对值（即二元有序实数组）(x,y)相对应的因变量z的值，也可以称为f在点(x,y)处的函数值，记为f(x,y)，即z=f(x,y)，函数值f(x,y)的全体所构成的集合称为函数f的值域，即f(D)</p><p>基于集合去理解所谓的二维函数及多维函数</p><p>一维函数就是集合与集合之间的基本映射关系，而二维函数所存在的最基本定义就是其自变量由两个以上的不同集合所定义</p><p>这两个空间集合被包含于一个更加广泛的空间集合之内，基于这两个集合内任意元素所构成的两个一维坐标点所构成的一个多维平面内的所有坐标即为多维坐标，即其表达式，多维函数<br>是一个集合取一个元素，还是一个集合取两个元素所构成的因变量的值，假如有两个几何A{a1,a2…an}，B{b1,b2,b3…bn}，由此得知<br>如果将其定义为多元，即多维空间，多维空间的本质即为多元数组，即多维集合</p><p>以二维举例，有两个映射，映射A的元素为a，B则为b，将A与B所构成的集合称为C，另有一集合D包含于C，即有D: D-&gt;C，此时的C应该记为C^2<br>这里只基于代数层面进行了讨论，几何层面很容易理解，就不多说了<br>依次类推，三元函数即为d = f(a,b,c),(a,b,c) ∈ e，e是最大的集合，d是函数表达式</p><p>多元函数：f: D -&gt; R^n ∈ D<br>由单一映射所引申出的n维映射（n维集合），不想对几何层面进行太多讨论了<br>几何就是多维集合在平面上的点集</p><p>什么是多维函数的极限，一维函数拥有极限，多维函数也拥有多重极限，同时拥有连续性</p><hr><h3 id="偏导数是什么"><a href="#偏导数是什么" class="headerlink" title="偏导数是什么"></a>偏导数是什么</h3><p>在对一元函数进行讨论时对函数的变化率引出了导数的概念，所以多元函数同时拥有变化率的概念<br>但多元函数的自变量不止一个，以致因变量与自变量的关系要比一元函数更加复杂</p><p>此时引出概念，有一二元函数z=f(x,y)，如果只有自变量x变化，而自变量y固定，即为常量，此时它就是x的一维函数，此函数对于x的导数即为z=f(x,y)对于x的偏导数</p><p>设某一二维函数在某一点的邻域内有定义，当函数内的某一自变量被固定为常数，而另一个自变量在其邻域内有增量，则相应的函数有增量<br>如果该函数的极限表达式存在，则称此极限为此二维函数在其邻域处对有增量的自变量的偏导数<br>公式属实能给我写裂开，暂时就不写了，以后会对其进行文字笔记整理然后将图片上传至归档文案内<br>另外偏导函数就是偏导数的别称</p><p>关于高阶偏导数，高阶偏导数就是高于二阶的偏导数，如果在某个多元函数内有多个偏导数时，则称它们是该函数的高阶偏导数，所以高阶偏导数只能在函数为多元的情况下出现<br>按照对变量求导次数的不同可以得出混合偏导数的概念</p><hr><h3 id="全微分是什么"><a href="#全微分是什么" class="headerlink" title="全微分是什么"></a>全微分是什么</h3><p>由偏导数的概念可知，二元函数对于某个自变量的偏导数表示当另一个自变量固定时，因变量相对于该自变量的变化率</p><p>基于一元导数函数中增量与微分的关系，可得知一个相对于多元函数偏导数的概念，即此多元函数偏导数的值与此函数的差值，即为偏增量<br>函数的无穷大表达式与函数的表达式所得出的表达式为函数的增量表达式，而偏增量就是基于该函数增加了偏导数的概念<br>即只有单一自变量的增量表达式</p><p>在应用数学中，有时需要研究多元函数中各个自变量都取得增量时因变量所获得的增量，即全增量，称其为自变量增量的全增量<br>设有一二元函数在其内有一点的某邻域有定义，有一基于此点的增量点为此邻域内的任意一点，则称这两点的函数值之差的表达式为函数在此点对于其函数各个自变量的全增量<br>如果该邻域内的点不依赖于自变量的增量且仅于其自变量有关，则称此函数在此点可微分<br>而将此点的表达式称此函数在此点的全微分，如果函数在某区域内各点皆可微分，则称此函数在此区域内可微分<br>则有二维函数的全微分等于它的两个偏微分之和，通常将此类概念称为二元函数的微分复合叠加原理</p><p>全微分通常可应用于近似计算</p><p>以此引出多维复合函数、多维隐函数、多元函数微分、多元函数极值、其它定理及公式的多维应用</p><p>复合函数通常有一维函数与多维函数复合和多维函数与多维函数复合<br>将某函数与某函数的复合函数的偏导数值的商的表达式被称为全导数</p><p>当同一个函数内有多个自变量存在，但只有一个自变量拥有可导，其它的自变量均为常量，前者的自变量即为此函数的偏导</p><p>同时隐函数也可以进行求导，对于隐函数的求导需要利用多元复合函数的求导法<br>先说说隐函数存在的必要的条件，设某一二维函数在某点的邻域内具有连续偏导数，且其中带有一个带有偏导性质的自变量不等于零，则另一个自变量的表达式在此点的某一个邻域内恒能唯一确定一个连续且具有连续导数的函数<br>相关的还有隐函数的方程组与在拥有多个变量情况下的隐函数的多个隐函数方程</p><p>多元函数微分学的几何应用这里不进行讨论，也就是对于向量与多元函数微分的讨论，包括方向导数与梯度</p><hr><h3 id="多元函数的极值是什么"><a href="#多元函数的极值是什么" class="headerlink" title="多元函数的极值是什么"></a>多元函数的极值是什么</h3><p>即关于最大值、最小值、极大值与极小值的问题</p><p>基于一元函数的极值概念引出多元函数的极值概念<br>即设有一多元函数的定义域为D，有任一点为D的内点，若存在此点的某个属于该定义域D内的邻域，使得对于该邻域内任何异于此点的其它点，皆小于此点<br>则称该函数在此点有极大值，此点则称为该函数的极大值点<br>若对于该邻域内异于此点的任何点，皆大于此点，则称此函数在此点内有极小值，此点则称为该函数的极小值点<br>此概念可延伸自多元复合偏导函数</p><p>若有一点能使多元函数内自变量皆为零并保证函数可成立，则称此点为此函数的驻点</p><p>关于条件极值<br>在上述所描述的极值概念当中，对于函数的自变量，除了限制在函数的定义域内外，并无其他条件，成此类情形为无条件极值<br>但是在应用数学中，有时会遇到对函数的自变量还有附加条件的极值问题，此类极值的情形被称为条件极值</p><p>对于将条件极值化为无条件极值的方法，可以使用拉格朗日乘数法，从此延伸处拉格朗日函数与拉格朗日乘子，同时n阶函数也可套用n阶泰勒公式<br>关于极值的充分条件与最小二乘法，即经验公式这里就不做阐述了</p><hr><h2 id="重积分"><a href="#重积分" class="headerlink" title="重积分"></a>重积分</h2><h3 id="重积分是什么"><a href="#重积分是什么" class="headerlink" title="重积分是什么"></a>重积分是什么</h3><p>关于多元函数的重积分<br>将一元函数积分内的概念推广与定义到区域、曲线及曲面上的多元函数的情形，便能得到重积分、曲线积分及曲面积分的概念</p><p>关于多重积分，多重积分所求量皆可归结为同一形式的和的极限，二重计算方法为两次单积分，即两次定积分，还可以利用极坐标来和换元法来计算二重积分，而三重积分则华为三次积分来计算<br>含参变量的积分，参变量就是积分过程中的一个常量<br>还可以理解为是将积分概念从积分范围为数轴上的一个区间推广到积分范围为平面或空间内的一个比区域的情形<br>而曲线积分与曲面积分则为将积分概念推广到积分范围为一段曲线弧或一片曲面的情形，经由此类推广后的积分称为曲线积分和曲面积分<br>区别为对弧长的曲线积分、对坐标的曲线积分、对面积的曲线积分与对坐标的曲线积分，可使用格林公式来对曲线积分进行计算</p><p>通过高斯公式可以引出通量与散度的概念，通过斯托克斯公式可以引出环流量与旋度的概念</p><hr><p>无穷级数在下一篇文章内进行理解</p><hr><p>实数即为向量，因为实数的存在最基本需要大小概念，有方向的数量概念</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Tue Apr 14 2020 06:18:24 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;多元微&amp;积分及其空间解析几何概念完全文字描述&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="mathematical analysis" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/mathematical-analysis/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>随笔-2020-04-13</title>
    <link href="https://unit-serow.github.io/2020/04/13/%E9%9A%8F%E7%AC%94-2020-04-13/"/>
    <id>https://unit-serow.github.io/2020/04/13/%E9%9A%8F%E7%AC%94-2020-04-13/</id>
    <published>2020-04-12T16:05:07.000Z</published>
    <updated>2020-04-15T11:44:18.798Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="71e33cedab181bc3ed9258cb8a70820c36f6ed40c7bdee8e94ed5e5a2ee76a0b"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      加密文案
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>微积分-1</title>
    <link href="https://unit-serow.github.io/2020/04/13/%E5%BE%AE%E7%A7%AF%E5%88%86-1/"/>
    <id>https://unit-serow.github.io/2020/04/13/%E5%BE%AE%E7%A7%AF%E5%88%86-1/</id>
    <published>2020-04-12T16:03:54.000Z</published>
    <updated>2020-04-12T16:04:50.441Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 13 2020 00:06:00 GMT+0800 (中国标准时间) --><center><strong>微&积分基本概念完全文字描述-1</strong></center><a id="more"></a><ul><li>微&amp;积分基本概念描述-1<blockquote><p>不含任何定理及推论</p></blockquote></li></ul><h2 id="关于微分"><a href="#关于微分" class="headerlink" title="关于微分"></a>关于微分</h2><h3 id="什么是可导"><a href="#什么是可导" class="headerlink" title="什么是可导"></a>什么是可导</h3><p>说白了就是任一函数在任一趋近于无穷小（基于极限）的范围（也可以说是任一点的邻域范围）内拥有意义，此函数与范围由定义得知<br>也可以说是</p><h3 id="什么是导数"><a href="#什么是导数" class="headerlink" title="什么是导数"></a>什么是导数</h3><p>任一函数在被定义点的邻域内的极限表达式（任意向量）</p><p>读法是，函数在某点处可导或者是在某点具有导数或导数存在</p><p>导数就是对函数变化率概念的精确描述（接近于极限&amp;接近于纯粹的角度）</p><p>变化率通常特指某一所选概念的变化速度，速度是时间与一维向量的衍生概念</p><p>当函数在某点间趋近于无穷大时，则不可导</p><h3 id="什么是导函数-1"><a href="#什么是导函数-1" class="headerlink" title="什么是导函数-1"></a>什么是导函数-1</h3><p>在任一属于任一开区间的集合范围内，任一函数在此区间内皆可导，由此范围所衍生出的其它函数，被称为导函数</p><p>由此衍生出当某一幂函数的指数为1时，此间导数皆为一，有关其它的逻辑性推论就不做说明了</p><p>所以任一函数在任一点上的导数就是其导函数在某一定义点上的函数值，基于同一集合内</p><p>常数在此概念间没有讨论意义，即为无，表示为0</p><hr><h3 id="什么是左导数和右导数"><a href="#什么是左导数和右导数" class="headerlink" title="什么是左导数和右导数"></a>什么是左导数和右导数</h3><p>基于上述说明，任一导数在其定义点的邻域内的向量，趋近于无穷小则为左导数，反之亦然</p><p>当某一函数在任一开区间内可导，且左导数和右导数都存在，则该函数在此闭区间上可导</p><hr><h3 id="什么是增量"><a href="#什么是增量" class="headerlink" title="什么是增量"></a>什么是增量</h3><p>以增加形式接近于极限的量</p><h3 id="区间是什么"><a href="#区间是什么" class="headerlink" title="区间是什么"></a>区间是什么</h3><p>区间分为有界区间与无界区间，有界可以分为上界和下界，开区间和闭区间<br>上界即为以增量无限接近于无穷大极限的区域，下界即为以增量无限接近于无穷小极限的区域<br>圆括号表示排除，方括号表示包括，单元素不能用集合表示，即为空集，无意义区间</p><p>区间任一向量单位与其它任一向量单位之间的实数所构成的集合，这两个向量可以被称为端点<br>开区间就是，不包括端点本身的某一实数范围，闭区间就是包括端点本身的某一实数范围</p><hr><h3 id="什么是高阶导数"><a href="#什么是高阶导数" class="headerlink" title="什么是高阶导数"></a>什么是高阶导数</h3><p>高阶导数是相较于导数的更高的数理逻辑层面</p><p>如果说导数只定义了一瞬间，则高阶导数定义了一瞬间之间的一瞬间（并不准确），此间可以无限次迭代<br>如果以某一瞬时速度的时间单位所得出的距离，该瞬时速度则为导数，则其速度的加速度为二阶导数，二阶导数被定义为高阶&amp;多阶导数，即为n阶导数</p><p>二阶导数或其它的高阶导数所强调的更多是一阶导数的过程，所有的极限描述的皆是过程，其更接近于无与纯粹</p><hr><h2 id="有关于极限"><a href="#有关于极限" class="headerlink" title="有关于极限"></a>有关于极限</h2><p>基于接近于无时（纯粹角度）<br>如果极限存在或被定义于现实间，则没有&amp;应没有任何有关于任何向量的概念<br>当然，还可以说它都是存在的同时相等，因为它根本没有任何讨论意义与现实概念</p><p>基于数轴时（一维角度）<br>它拥有左极限与右极限的概念</p><p>极限所描述与表示&amp;表述&amp;表达的是一个变量，而不是某一个具体的量，永远都不可能是</p><hr><h3 id="需要记住的几点"><a href="#需要记住的几点" class="headerlink" title="需要记住的几点"></a>需要记住的几点</h3><p>自变量和对应法则的乘积是因变量，自变量是被定义的<br>定义域是映射的原像集合，值域是像的集合，由对应法则决定<br>函数指的是对应法则与自变量所产生的映射集合，可以用来指映射出来的集合，表达式本身与因变量和对应法则的乘积</p><p>接近于无穷数量的概念都是基于集合的</p><p>数理永远接近于无，而永远无法到达无</p><hr><h3 id="什么是显函数与隐函数"><a href="#什么是显函数与隐函数" class="headerlink" title="什么是显函数与隐函数"></a>什么是显函数与隐函数</h3><p>显函数就是可以直接将自变量表达式写在因变量任意一侧的函数表达式&amp;函数值&amp;函数</p><p>隐函数就是当任一函数内的任一变量在正负无穷集合范围内进行取值时，其它任何存在于此函数之间的其它变量将永远与之相对应，有如：x=0<br>也可以将隐函数称之为方程</p><p>所以对于隐函数的显化，有时是很困难的，甚至有可能是不可能的，此时需要去证明此函数没有现实间的任何存在意义</p><p>没错，它存在的意义就是让我去证明它没有存在的意义<br>如果由此思想引出推论，则现实间不可能存在没有现实存在意义的任何概念，包括函数，即任何隐函数皆为可显，或者说皆有可显性（抛开价值论）<br>但是先不管隐函数是否能显化，其都可以直接由方程来表示出其隐函数所确定的导数，也就是对恒等式两边进行求导</p><hr><h3 id="什么是参数方程"><a href="#什么是参数方程" class="headerlink" title="什么是参数方程"></a>什么是参数方程</h3><p>参数方程是由现实概念与数值所引出的数理概念<br>定义参数方程的最终目的是确定其参数方程间所有的函数的逻辑关系（即函数关系），并用表达式表示出来<br>则称此函数关系所表达的函数为由此参数方程所确定的函数</p><p>有定理&amp;推论可直接将参数方程确定出其函数的导数<br>在一阶导数公式中，如果参数方程内拥有任一相同变量，即可用逐次利用反函数与复合函数性质与定理&amp;规律来进行直接求导<br>高阶导数公式同理</p><hr><h3 id="什么是相关变化率"><a href="#什么是相关变化率" class="headerlink" title="什么是相关变化率"></a>什么是相关变化率</h3><p>假如有某一可到函数与另一可导函数的任意变量间存在某种关系，从而其可导函数的变化率之间也必然存在一定关系<br>相关变化率指的就是这个所谓的必然存在的一定关系，以便从其中一个变化率求出另一个变化率</p><hr><h3 id="什么是微分"><a href="#什么是微分" class="headerlink" title="什么是微分"></a>什么是微分</h3><p>关于无穷小与高阶无穷小的表示方法就不说了</p><p>当某一函数在某区间内有定义且可导，则有增量，其中，增量中将会有一大部分的数值是相对于增量总体来说变化率更低（其根本就是不变的常数量）的，将这一部分增量忽略不计，其它相对于此增量更小的增量即为微分<br>如果微分能够存在，函数自然就是可导的了</p><p>这里有一任一金属薄片，因其受到温度影响，面积发生了改变，即体积值增大<br>利用金属薄片现有的体积减去原有的体积则得出金属薄片的增量，此时可以将金属薄片的增量视为两部分<br>第一部分是变化率相较于其它部分更低的量，可以用某一线性函数表示，而第二部分则是其剩余的体积，即第二部分可以视为比第一部分更高阶的无穷小<br>因此可见，如果边长的改变很微小，及其属于高阶无穷小的面积的绝对值很小时（趋近于无穷），第一部分所属的面积改变量即可用线性函数来表示<br>则其中第一部分是不依赖于第二部分的常数，即可将第二部分的无穷小增量表达式（函数）称之为微分，上面也说了，微分存在则代表此函数在某一范围内可微</p><p>归纳为几句话</p><p>当某函数于某点可微时，即该函数可导，反之亦然<br>因为极限与无穷小的关系，可以将微分表达式添加任何常量<br>即，当某一函数在某一点可微时，其微分表达式只有一个</p><p>可以将以上描述的第二部分称为函数极限增量的主部，而第一部分可以称为线性主部（必须趋近于无穷大）</p><p>当某函数微分不等于零时，将其微分转化成近似代替增量时，会有一定误差<br>即当某一函数自变量增量表达式的绝对值趋近于无限小时，有定论，其增量值域将约等于其微分</p><p>是因为微分是变量，不等于零的同时即为永远接近于零，所以与通常基于零定义的函数极限表达式相比，必定会有定义误差<br>即永远接近于无穷的误差</p><h3 id="什么是函数的微分"><a href="#什么是函数的微分" class="headerlink" title="什么是函数的微分"></a>什么是函数的微分</h3><p>就是某一函数在任一点的微分，就可以称为函数的微分，表示为dy<br>通常还会将其函数的自变量的增量称为自变量的微分，表示为dx<br>并且函数的微分dy与自变量的微分dx之商等于该函数的导数<br>因此，也可将导数称之为微商</p><p>如果同一等式内的两个值都是在同一个自变量的变化过程中无穷小，如果等式右边的表达式表示了微分的表达式主体，则称等式中右侧的值，或者说是自变量为该等式的主部，反之亦然</p><p>微分通常用于函数的近似计算，一旦进行了近似计算就必然会产生误差，误差可分为间接值误差，绝对误差和相对误差，其区别之是所得值和表达方式&amp;表达式不同<br>绝对误差限和相对误差限就是对于误差所在任意区间的一个相对估值</p><hr><p>此篇文章将尝试以纯语言的方式表述基本概念<br>不会涉及任何定理</p><hr><h3 id="什么是微分中值"><a href="#什么是微分中值" class="headerlink" title="什么是微分中值"></a>什么是微分中值</h3><p>在应用数学领域中的基本公式与定理，通常用于解决实际问题<br>基本的微分中值定理有罗尔定理及其推论拉格朗日与柯西定理</p><h3 id="什么是函数的驻点（稳定点或临界点）"><a href="#什么是函数的驻点（稳定点或临界点）" class="headerlink" title="什么是函数的驻点（稳定点或临界点）"></a>什么是函数的驻点（稳定点或临界点）</h3><p>就是在函数的导数表达式中等于零的点</p><p>在以上基本定理的推导过程中可能需要用到辅助函数，辅助函数的作用是将函数中不相关的变量创造联系关系<br>最后将辅助函数所取得的关系结论带到原有导数函数中，以解决函数的求导问题</p><p>拉格朗日中值定理的作用是引出微分之中的有限增量，所以还可以称其为有限增值定理，则其表达式为有限量公式<br>拉格朗日定理在微分学中占有的地位非同小可，甚至可以将其称之为微分中值定理</p><p>柯西中值定理是拉格朗日中值定理的推论，而拉格朗日定理是罗尔定理的推论</p><hr><h3 id="什么是洛必达法则"><a href="#什么是洛必达法则" class="headerlink" title="什么是洛必达法则"></a>什么是洛必达法则</h3><p>当一个导数函数（极限表达式）以无限大趋近于某个区间范围或无限</p><p>但如果有某两个任意的导数函数同时以无限大趋近于某个区间范围或无限时，这两个导数函数之间的任何关系都是待定的，甚至有可能没有任何关系<br>这种极限表达式被称之为未定式，可以记为零比零或无限比无限，也就是未定义公式</p><p>洛必达法则是用于在此中表达式之间进行求导再求极限最后以去顶未定式的值的方法<br>具体就是分别对分子分母求导，然后依上述步骤进行逻辑运算</p><p>还有一个就是泰勒公式，再一些比较复杂的函数内，为了便于研究，往往希望用一些简单的函数来近似表达<br>由于用多项式表达式表示的函数只需要对自变量进行有限次的加、减、乘三种算术运算，便能求出它的函数值<br>因此在数学种经常用多项式来近似的表达函数<br>也就是泰勒中值定理，其引论为泰伦公式，拉格朗日余项与麦克劳林公式</p><p>关于基本的微分中值公式与定理的概念可能就到这了</p><hr><h3 id="什么是函数的单调性"><a href="#什么是函数的单调性" class="headerlink" title="什么是函数的单调性"></a>什么是函数的单调性</h3><p>以前所讨论的是任一函数在某一确定区间内的单调性的概念，这里的函数单调性是基于导数函数的</p><p>依旧是对于切线问题的延伸概念，假如有一曲线，取曲线上任一两点画一直线，将直线移动至无限接近取所属切线的点<br>最后取一待定切线，也就是切线方程（一切表达式，即为永远趋近于无限的导数函数表达式）<br>但此曲线在切线上的情况既有可能是上升的，也有可能是下降的前提下，得出曲线上各点对于切线斜率是非负的或是非正的<br>因此，得出该曲线间单调性概念，这个曲线就是某一导数函数</p><p>这些概念在某些定理或其推论中是不分区间概念的</p><h3 id="什么是曲线的凹凸性与拐点"><a href="#什么是曲线的凹凸性与拐点" class="headerlink" title="什么是曲线的凹凸性与拐点"></a>什么是曲线的凹凸性与拐点</h3><p>凹凸性就是某一导数函数在其切线所因出的范围内朝上还是朝下<br>什么是朝上朝下<br>将切点表达式向曲线的弧内移动，所对应曲线的两个点，有时是向上移动，有时是向下移动<br>向下移动就是凸函数，即为凸弧，反之亦然，即为凹弧<br>但这个移动不是单纯的平移，而是基于其曲线函数的定义区间进行移动的，即移动过后所产生的直线的线段中点永远对应于原曲线的切点表达式所表达的切点</p><p>什么是拐点</p><p>基于以上说明，拐点就是当曲线所移动的直线的某一端，到达了另外一个与之前曲线性质不同的弧，即由凹弧改变为凸弧的一个转折点，这个点就是此区间的拐点<br>所以同一个曲线函数内可以拥有多个拐点，而找出拐点的一个方法就是判断在任意一个区间范围内的极限（或者称为导数）函数表达式是否存在<br>不存在就表示的确是拐点，反之亦然</p><hr><p>什么是函数的极值</p><p>极值就是极大值和极小值</p><p>基于上述内容所描述的曲线的拐点，假如有任一曲线上有某一拐点的左侧为单增，而右侧为单减，将此拐点的去中心邻域中的任意一点到此拐点的区间表达式<br>称之为此点是此曲线的极大值或极小值表达式，此点所表示的导数函数所表达的是某个移动趋向的表达式，这个表达式可以直接称之为极大值或极小值<br>还可以说是单增或单减以趋近于极限的方式至其极限的表达式，函数取得极值的点就是极值点</p><p>拐点也是一个极限表达式，即导数函数，而绝非某个确定的值</p><p>所以说只需要知道曲线函数上的任一确定拐点表达式，便可知道其曲线函数的最大值及其最小值，因为基于极限，所以区间概念没有意义</p><p>在应用数学中常以目标函数来描述关于最大值或最小值的问题</p><p>可引出的定义包括光学的折射定律</p><p>什么是函数的最大值与最小值</p><p>上方已经对其进行描述了</p><p>关于函数图形的描绘方法和几何学之间的描述这里不方便描述</p><hr><h3 id="什么是曲率"><a href="#什么是曲率" class="headerlink" title="什么是曲率"></a>什么是曲率</h3><p>先说说弧微分，假设有一个曲线函数在某一区间内具有连续导数，在此曲线上取任一点作为度量弧长的基点，并定义函数自变量增大的方向作为该曲线的正向<br>对曲线取另外的任一点，上面的点称为点一，此点称为点二，点一到点二之间的值，也就是点一到点二之间的弧的绝对值则为此弧的长度<br>当此弧的方向与以上定义的曲线正向一致时，弧表达式以无穷大远离0（也就是刚才对于正向所描述的增大），反之则以无穷大接近于0（也就是减小）<br>此间的两个方向是其中任一一点的单调函数（一单减，二单增等等若干种情况）</p><p>由此，可理解弧微分及其导数的概念，即为弧进行移动时的增量表达式（无论定于方向），用于描述弧微分的公式就是弧微分公式</p><p>接下来讨论讨论什么是曲率<br>可以明确的就是直线不弯曲并且半径小的圆比半径达的圆的弯曲的更厉害些，而其它曲线的不同部分有不同的弯曲程度<br>比如最基本的幂函数抛物线在顶点附近的弯曲就比远离顶点的部分更厉害些</p><p>当曲线上没一点处都具有切线，且切线随切点的移动过而连续转动，这样的曲线称为光滑曲线<br>光滑曲线上有任一点a作为某一弧s的基点，再定义有一点对应于弧s，又有一点为弧s的增值所截取的点c，由b到c的弧为s的增量弧s1<br>可得出角（这里假定该曲线再平面上已经拥有了xoy坐标系）a1，作为点b处的倾角与点c的倾角增量a1（增量a1是一个整体单位）<br>用倾角增量a1比上增量弧s1，所得出的表达式则是单位弧段上切线转过的角度的大小，即为用于描述从b到c这段弧的平均弯曲程度<br>这个弧度的比值表达式就是b到c弧的平均曲率</p><p>类似于从平均速度引进瞬时速度的方法，即可将上述平均曲率的极限叫做此曲线在点b处的曲率，通常用k表示</p><p>可得知从而得处圆上各点处的曲率都等于半径的倒数，即可证出半径越小曲率越大</p><h3 id="什么是曲率圆"><a href="#什么是曲率圆" class="headerlink" title="什么是曲率圆"></a>什么是曲率圆</h3><p>在曲线的任一点处的曲率为k且k不等于0，在此点处的曲线的法线的凹侧取一点d，使得dm等于1/k（半径的倒数或半径都可以用于表示曲率）<br>以d为圆心，dm（或1/k）作半径作圆，此圆则被称作曲线在此点处的曲率圆，d为其曲率中心，dm或1/k则为曲率半径</p><p>当有一任意凹弧c与凹弧内点a和弧上点b，则点a在弧上进行任何移动时，都会对从a到b的距离或其它任何向量单位造成一定的影响<br>当a点因为在弧c上的移动而造成接更近于点b时，此间的距离曲线b被称为曲线c的渐屈线，反之则为渐伸线</p><hr><h3 id="什么是方程的近似解"><a href="#什么是方程的近似解" class="headerlink" title="什么是方程的近似解"></a>什么是方程的近似解</h3><p>在应用数学中，经常会遇到求解高次方程或其它类型的方程的问题，要求得此类方程的实根的精确值，往往很困难<br>所以就需要寻求此方程的近似解</p><p>一般求方程近似解可以分为两步，第一步是确定根的大致范围，具体的将，就是确定某一个闭区间，使所求的根是位于此区间内的唯一实根，这一步工作为根的隔离，此区间则称为所求实根的隔离区间</p><p>二分法，切线法，割线法或弦截法</p><hr><h3 id="什么是微分方程"><a href="#什么是微分方程" class="headerlink" title="什么是微分方程"></a>什么是微分方程</h3><p>将所有要找的函数及其导数的关系式，这样的关系式即为微分方程，找出未知函数的过程就是解微分方程</p><hr><h2 id="关于积分"><a href="#关于积分" class="headerlink" title="关于积分"></a>关于积分</h2><p>积分就是微分的逆运算<br>也就是说将函数的求导进行逆运算，即寻找一个可导函数，使它的导函数等于已知的函数</p><h3 id="什么是原函数"><a href="#什么是原函数" class="headerlink" title="什么是原函数"></a>什么是原函数</h3><p>说是，有任一区间，在区间内有任意可导函数的导函数，即此对于此函数的任何自变量都属于区间集合内的任意元素<br>此时，就可以称原来的可导函数为导函数在此区间内的一个原函数<br>如果函数在其定义区间内可连续，则此定义区间上可存在导函数，使任一自变量值都内对应于区间内的值，所以说连续函数一定有原函数</p><h3 id="什么是不定积分"><a href="#什么是不定积分" class="headerlink" title="什么是不定积分"></a>什么是不定积分</h3><p>在任意区间内，函数f(x)的带有任意常数项的原函数称为F(x)（或f(x)dx）在此区间上的不定积分</p><p>如果说导数和微分是用于表示无穷大的小，积分就是将这些独立且单一的无穷小概念所指的量集中在一起<br>或者说将所有接近于极限的无穷小的表达式进行集中表达，其中进行集中表达的表达式则为被积分表达式<br>积分通常用积分号来表达，以上述内容为基础，则f(x)称为被积函数，f(x)dx称为被积表达式，x称为积分变量</p><p>因为当f(x)有一个原函数，那么f(x)就有无限多个原函数，所以在表达式中可以增加任何常数，且表达式为合理，此常数可以用C表示</p><p>还有就是如果任意区间上的F(x)是f(x)的一个原函数，那么f(x)的其它原函数和F(x)有什么关系<br>设一个A(x)是f(x)的另一个原函数，即对任意自变量x皆属于此区间集合内的值，则A(x)的导数等于f(x)<br>于是，f(x)的所有原函数的差皆为0<br>又因为从微分的概念中得知在一个区间上导数恒为零的函数必为常数<br>所以还可以将所有原函数的差定义为某个常数C0</p><p>到此，表明了A(x)与F(x)之间只差一个常数，因为，当C为任意常数时F(x)+C就可以表示f(x)的任意一个原函数<br>由此引出以上对于不定积分的定义，所谓的不定的概念就是指此间原函数的差值，即为常数C<br>这个差值是怎么来的呢，因为导数之间只有表达式的存在，任何表达式所表达的皆是以无穷大趋近于极限的概念<br>本来就是不确定的表达式，得出的结果必然是不确定的了，即从此间所得的已有函数的原函数之间的差值<br>这个原函数基于某个导数函数的（概括）表达式就是不定积分，也可以理解为差值的集合<br>另外就是不定积分是概念，积分是行为<br>积分和微分虽为逆运算，但概念极为接近<br>可以将不定积分表示为原函数加任意常量的形式，有如：积分符号f(x)dx=F(x)+C</p><p>函数f(x)的原函数的图形称为f(x)的积分曲线</p><p>积分表就不写了，能写裂开，关于积分的运算还有换元积分法中的第一类与第二类换元法与分部积分法<br>积分表中有的公式可以被称作递推公式，只要对此公式进行重复使用就可以得出最后的结果</p><p>还有就是有理函数的积分<br>前面的两个基本方法是用于求不定积分的</p><h3 id="什么是有理函数"><a href="#什么是有理函数" class="headerlink" title="什么是有理函数"></a>什么是有理函数</h3><p>有理函数就是两个多项式的商，还可以称为有理分式，通常会假定其间的分子多项式和分母多项式之间不存在公因数<br>当分支多项式的次数小于分母多项式的次数时，则此有理函数有意义，称之为真分式，反之则为加分式<br>求有理函数的积分就是把真分式化成部分分式之和，最后进行逻辑运算得出的最终结果则为此间表达式所拥有的值<br>也就是将有理函数化为积分，其中有一些定理与推论，这里就不介绍了</p><hr><h3 id="什么是定积分"><a href="#什么是定积分" class="headerlink" title="什么是定积分"></a>什么是定积分</h3><p>先举两个例子，一个是曲边梯形，一个是变速运动</p><p>有某导数函数y=f(x)在任一闭区间[a,b]上非负且连续，由直线x=a、x=b、y=0及曲线y=f(x)所围成的图形称为曲边梯形，其中的曲线弧称为曲边<br>具体解决方法可以是先将[a,b]划分为许多小区间，在每个小区间内用其中某一点处的高度来近似代替同一个区间上的窄曲边梯形的变高，则可以将每个窄曲边梯形近似的看作是一个个窄矩形<br>然后就可以以所有这些窄举行面积之和作为曲边梯形面积的近似值，并把区间[a,b]无限的细分下去<br>即为便每个小区间的长度都趋于零，此时所有的窄矩形面积之和的极限就可定义为曲边梯形的面积，最后利用和式来表示其曲边梯形的面积<br>变速直线运动的路程的描述与此同理，也可以看作为是对于曲线弧的曲边与其它面积之和的描述，只不过变速运动涉及时间的无穷线性概念</p><p>所以就可以引出如下对于定积分的抽象定义</p><p>设某函数在某闭区间上有界，在此闭区间内插入若干个分点，有如（[a,b]，[f(x)]）：<code>a=x0&lt;x1&lt;x2&lt;...&lt;xn-1&lt;xn=b</code>，把区间[a,b]分成n个小区间[x0,x1],[x1,x2]…,[xn-1,xn]<br>在每一个小区间上取任一一点b，作函数f(b)与小区间长度的增值的乘积，并将其求和，其间的值则为每个小区间内增值的最大值，当此增值以无穷大接近于0时，该和的极限总存在<br>且与上述闭区间的分法以及上述点b取法无关，则称此极限为此函数在此区间上的定积分，简称为积分</p><p>f(x)为被积函数，f(x)dx为被积分表达式，x为积分变量，上为积分上限，下则为积分下限，其上限与下限的集合被称为积分区间</p><p>基于无限与接近纯粹的角度去理解积分，所谓的积分就是基于某一接近于极限的数组中的所有增量所衍生出的表达式，所以说积分拥有和，则为求和符号表达式<br>如果函数在闭区间上的定积分存在，则可以称函数在此闭区间可积<br>可得出定积分的计算结果必然永远都不少绝对准确的定量，所以可以用近似值的思维来表示定积分的近似值表达式<br>即求和符号的上界越大，所取得的近似值越接近值与相对于其它值越精确<br>求积分近似值可以用矩形法，即矩形法公式</p><p>还可以得出积分表达式对于任意个有限函数的线性组合永远可以成立<br>还有就是定积分对于积分区间具有可加性，也就是无论区间无论进行何种变化，总有某一积分等式成立</p><p>积分中值定理和中值公式就不说了，定积分也拥有换元积分法与分布积分法</p><p>关于积分的一些基本定理可以推出公式，包括于牛顿-莱布尼茨公式，也可以叫做微积分基本公式</p><hr><h3 id="什么是反常积分"><a href="#什么是反常积分" class="headerlink" title="什么是反常积分"></a>什么是反常积分</h3><p>在实际问题中经常会遇到积分区间为无穷区间，或者被积函数为无界函数的积分，它们已经不属于定积分了<br>客观的将此种积分称为反常积分，即无穷限的反常积分和无界函数的反常积分</p><p>反常积分的审敛法与伽马（Γ）函数这里不做介绍了</p><p>定积分通常使用元素法于现实间应用，通常用于求解平面图形的体积，旋转体的体积，平面曲线的弦长，物理学中也有应用</p><hr><p><strong>关于定积分的基本概念描述到此</strong></p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 13 2020 00:06:00 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;微&amp;积分基本概念完全文字描述-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="mathematical analysis" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/mathematical-analysis/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>极限-1</title>
    <link href="https://unit-serow.github.io/2020/04/11/%E6%9E%81%E9%99%90-1/"/>
    <id>https://unit-serow.github.io/2020/04/11/%E6%9E%81%E9%99%90-1/</id>
    <published>2020-04-11T12:37:01.000Z</published>
    <updated>2020-04-12T16:03:45.278Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Apr 13 2020 00:06:00 GMT+0800 (中国标准时间) --><center><strong>极限相关定理参考-1</strong></center><a id="more"></a><h3 id="极限相关"><a href="#极限相关" class="headerlink" title="极限相关"></a>极限相关</h3><p><strong>有关数列的极限：</strong></p><ul><li><p>数列：有次序的数，可趋近于无限；</p><blockquote><p>有如：$A_1,A_2,A_3,…,A_n,\cdots,(n\to\infty)$。</p></blockquote></li><li><p>有概念：</p></li><li><p>设任一法则，有$n \in N$，对应任一实数$x$；</p><blockquote><p>这群实数从$x_0$开始按下标$n$，从小到达排序得到的一个数列；<br>称其为数列，即为数列$\lbrace x_n \rbrace$。</p></blockquote></li><li><p>项：数列中的每一个数。</p><blockquote><p>一般项 &amp; 通项：第$n$项$x_n$。</p></blockquote></li><li><p>在几何学内：数列$\lbrace x_n \rbrace$为数轴上的任一动点，依次取数轴上的任意点；</p><blockquote><p>有如：$x_1,x_2,x_3,…x_n…$。</p></blockquote></li><li><p>数列 $\lbrace x_n \rbrace$ 可看作$D$为正整数$n$的函数 $x_n = f(n)$,$n /in N_{+}$；</p><blockquote><p>当$D=n$为任一正整数时，有数列$\lbrace x_n \rbrace$。</p></blockquote></li><li><p>有公理：</p><blockquote><p>当$n\to\infty$时，$x_n = f(n)$能够接近于某个确定的数值。</p></blockquote></li><li>根据公理得数列极限定义：<blockquote><p>设$\lbrace x_n \rbrace$为一数列，有常数$a$，对于任一正数$\varepsilon,\varepsilon\in\infty$；<br>总存在正整数$N$，使$n &gt; N$，不等式$|x_n-a| &lt; \varepsilon$都成立，则称$a$是数列$\lbrace x_n \rbrace$的极限，或称数列$\lbrace x_n\rbrace$收敛于$a$；</p></blockquote></li><li><p>记为$\lim_{n \to \infty} X_n = a$或$x_n \to a (n\to\infty)$</p><blockquote><p>如果不存在$a$，则数列$\lbrace x_n \rbrace$没有极限或称数列$\lbrace x_n \rbrace$是发散的，习惯上称$\lim_{n \to \infty} X_n$不存在。</p></blockquote></li><li><p>有性质：</p><blockquote><p>定义的$N$与任一正数$\varepsilon$相关且随之改变。</p></blockquote></li><li><p>在几何学内：</p></li><li>对于数列${x_n}$的极限为$a$有性质，将$a$及其数列$x_1,x_2,x_3,…,x_n,…$在数轴上用点表示，数轴上作点$a$的$\varepsilon$邻域即开区间$(a-\varepsilon,a+\varepsilon)$；<blockquote><p>因不等式$|x_n-a|&lt;\varepsilon$与不等式 $a - \varepsilon &lt; x_n &lt; a + \varepsilon$等价；<br>即当$n&gt;N$时，任一点$x_n$都在开区间$(a-\varepsilon,a+\varepsilon)$内，而只有有限个(至多有$N$个)在此区间之外。</p></blockquote></li><li>记为记号：$\forall$用以表示”对于任意给定的”或”对于每一个”，$\exists$用以表示”存在”。</li><li><p>有如：对于任意给定的$\varepsilon&gt;0$记为$\forall \varepsilon&gt;0$，存在正整数$N$记为$\exists$正整数$N$；</p><blockquote><p>数列的极限$\lim_{n \to \infty} X_n = a$有定义，记为$\lim_{n \to \infty} X_n = a \Leftrightarrow \forall \varepsilon &gt; 0$，$\exists$正整数$N$，当$n &gt; N$时，有$|x_n-a| &lt; \varepsilon$。</p></blockquote></li><li><p>有规律：在利用数列极限定义来证$a$是数列$\lbrace x_n \rbrace$的极限时，对于任意整数$\varepsilon$，要能够指出定义中正整数$N$的存在；</p></li><li>有$|x_n-a|$小于某个量(量与$n$间有$f$)，当量小于$\varepsilon$时，$|x_n-a| &lt; \varepsilon$必然成立，则证出有$N$必然存在；</li><li>则有定理：基于极限定义，如果有且可证满足此定义的$N$，则此$N$必然存在。</li></ul><hr><p><strong>有关收敛数列：</strong></p><ul><li>由数列极限性质有以下四个定理（即性质）：</li></ul><ol><li>定理一（极限的唯一性）：有数列$\lbrace x_n \rbrace$收敛，则此极限唯一（可用反证法，同理可证发散性质）。</li><li>定理二（收敛数列的有界性）：有数列$\lbrace x_n \rbrace$收敛，则此数列必然有界。</li><li>定理三（收敛数列的保号性）：有$lim_\lbrace n \to \infty \rbrace X_n=a$，且$a &gt; 0$(或$a &lt; 0$)，则存在$N$，有$n &gt; N$，则皆$x_n &gt; 0$(或$x_n &lt; 0$)。<blockquote><p>有推论：有数列$\lbrace x_n \rbrace$在某项有$x_n ≥ 0$(或$x_n ≤ 0$)，且$lim_\lbrace n\to \infty \rbrace X_n=a$，则$a ≥ 0$(或$a ≤ 0$)。</p></blockquote></li><li>定理四（收敛数列与其子数列间的关系）：有数列$\lbrace x_n \rbrace$收敛于$a$，则其任一子数列必然必然收敛，且极限为$a$。</li></ol><hr><p><strong>有关函数的极限：</strong></p><ul><li>基于数列极限定义，引出函数极限定义：<blockquote><p>数列${x_n}$为自变量等于$n$的$f$：$x_n=f(n),n\inN_{+}$，即${x_n}$有$\infty=a$，得自变量$n$取正整数且$$n\to +\infty$时，其$f(n)$的$lim_{n\to a}$；<br>将数列极限定义$f(n)$的自变量的变化过程$n \to \infty$等特殊性质抛出；</p></blockquote></li><li>得此函数极限基本概念：<blockquote><p>在自变量的某个变化过程中，如果对应的$f$值无限趋近于某一$\forall$，此$\forall$在此变化过程中函数（$f$）的极限。</p></blockquote></li><li><p>有性质：</p><blockquote><p>此极限与自变量的变化过程有关，即自变量变化，函数$f$极限的形式随之变化。</p></blockquote></li><li><p>数列极限则为：$f(n)$当$n\to \infty$时的极限，此自变量变化过程为$n\to \infty$。</p></li><li><p>有关自变量变化时$f(x)$极限的变化：</p><blockquote><p>情形一：自变量$x$任意地接近于有限值$x_0$或趋近于有限值$x_0$(记作$x\tox_0)$时，对应$f(x)$的变化情形。<br>情形二：自变量$x$的$|x|$无限增大且趋近于无穷大(记作$x\to \infty$)时，对应$f(x)$的变化情形。</p></blockquote></li></ul><hr><p><strong>情形一（自变量趋于有限值时函数的极限）：</strong></p><ul><li>分析为：</li><li>自变量$x$为$x\tox_0$，如果在$x\tox_0$中，其$lim_{f(x)\to \forall{A}}$，则称$A$为$f(x)在x\to x_0$时的极限；<blockquote><p>此间假定$f(x)$在点$x_0$的某个去中心域内有定义。</p></blockquote></li><li>在$x\tox_0$的过程中，其$f(x)$无限接近于$A$，则$|f(x)-A|$能任意小；<blockquote><p>基于数列极限性质，$|f(x)-A|=|f(x)-A|&lt;\varepsilon$，其中$\varepsilon$为$\forall$正数；<br>对于$\varepsilon$，有$x_0$充分接近于$x$的$f(x)$满足不等式$|f(x)-A|&lt;\varepsilon$；<br>而充分接近于$x_0$的$x$为$0&lt;|x-x_0|&lt;\delta$，$\delta$为$\forall$正数。</p></blockquote></li><li><p>在几何学中：</p><blockquote><p>适合不等式$0&lt;|x-x_0|&lt;\delta$的$x$全体，就是点$x_0$的去心$\delta$邻域，而邻域半径$\delta$则表示为$x$接近$x_0$的程度。</p></blockquote></li><li><p>由以上分析，得$x\to x_0$时$f(x)$定义：</p></li><li><p>定义一：</p></li><li><p>设$f(x)$在$x_0$的任一去中心邻域内有定义，有常数$A$，对于$\forall$正数$\varepsilon$（无论多小），总有正数$\delta$，使当$x$满足$0&lt;|x-x_0|&lt;\delta$时，对应的$f(x)$皆满足$|f(x)-A|&lt;\varepsilon$；</p><blockquote><p>则将$A$称为函数$f(x)$当$x\tox_0$时的极限，记为$lim_{x\tox_0} f(x)=A$或$f(x)\toA$(当$x\tox_0$)。</p></blockquote></li><li><p>定义中$0&lt;|x-x_0|$为$x\neqx_0$，则$x\tox_0$时$f(x)$没有极限，与$f(x)$在点$x_0$是否有定义并无关系。</p><blockquote><p>可表述为：$lim_{x\to x_0} f(x)=A\Leftrightarrow\forall \varepsilon&gt;0$，$\exists \delta&gt;0$，当$0&lt;|x-x_0|&lt;\delta$时，有$|f(x)-A|&lt;\delta$。</p></blockquote></li><li><p>有$f(x)$，当$x\tox_0$时的极限为$A$时，有其几何概念：</p><blockquote><p>有任一正数$\varepsilon$，作平行为$x$轴的两条直线$y=A+\varepsilon$和$y=A-\varepsilon$，界于这两条直线之间是一横条区域。</p></blockquote></li><li><p>根据定义，对于$\varepsilon$，有点$x_0$的一个$\delta$邻域$(x_0-\delta,x_0+\delta)$，当$y=f(x)$的图形上的点的横坐标$x$在邻域$(x_0-\delta,x_0+\delta)$内，但$x\neqx_0$；</p><blockquote><p>这些点的纵坐标$f(x)$满足$|f(x)-A|&lt;\varepsilon$或$A-\varepsilon&lt;f(x)&lt;A+\varepsilon$；<br>亦即这些点落在直线$y=A+\varepsilon$和$y=A-\varepsilon$所定义区域之内。</p></blockquote></li><li><p>以$x_0$为空心的任何开区间称为$x_0$的邻域，记为$U(x_0)$；</p><blockquote><p>在$U(x_0)$中去掉中心$x_0$后，称为点$x_0$的去中心域，记为$\circ{U}(x_0)$。</p></blockquote></li><li><p>设$x_0 \in R$，$\delta&gt;0$，开区间$(x_0-\delta,x_0+\delta)$称为点$x_0$的$\delta$邻域，记为$U(x_0,\delta)$；</p><blockquote><p>点$x_0$的去心$\delta$邻域记作$\circ{U}(x_0,\delta)$，$\delta$称为邻域半径。</p></blockquote></li></ul><hr><ul><li>基于$x\tox_0$时$f(x)$的极限概念中，$x$是既从$x_0$的左侧也从$x_0$的右侧趋于$x_0$的；<blockquote><p>当$x$从$x_0$的左侧趋于$x_0$(记为$x\tox_{0}^{-}$)，当$x$从$x_0$的右侧趋于$x_0$(记为$x_{0}^{+}$)。</p></blockquote></li><li>在$x\tox_{0}^{-}$时，$x$在$x_0$左侧，$x &lt; x_0$，在$lim_{x\to x_0} f(x)=A$的定义中，把$0&lt;|x-x_0|&lt;\delta$改为$x_0-\delta&lt;x&lt;x_0$；<blockquote><p>则称$A$为函数$f(x)$当$x\tox_0$时的左极限，记为：$lim_{x\to x_{0}^{-}} f(x)=A$或$f(x_{0}^{-})=A$。</p></blockquote></li><li><p>同理，在$lim_{x\to x_0} f(x)=A$的定义中，把$0&lt;|x-x_0|&lt;\delta$改为$x_0 &lt; x &lt; x_0+\delta$；</p><blockquote><p>则称$A$为函数$f(x)$当$x\tox_0$时的右极限，记为$lim_{x\to x_{0}^{+}} f(x)=A$或$f(x_{0}^{+})=A$。</p></blockquote></li><li><p>可将左极限与右极限统称为单侧极限。</p></li><li><p>根据$x\tox_0$时函数$f(x)$的极限的定义以及在左极限和右极限的定义；</p></li><li>有定理：函数 $f(x)$当$x\tox_0$ 时极限存在的情形为 $f(x_{0}^{-})=f(x_{0}^{+})$（即必要且相等）；</li><li>有公理：在此种情形下$f(x_{0}^{-})$和$f(x_{0}^{+})$必然存在，若不相等，则$lim_{x\to x_0} f(x)$不存在。</li></ul><hr><p><strong>情形二（自变量趋近于无限大时函数的极限）：</strong></p><ul><li><p>基于函数极限定理：</p><blockquote><p>在$x\to \infty$的过程中，其函数值$f(x)$无限接近于$\forall A$，则将$A$称为函数$f(x)$当$x\to \infty$时的极限。</p></blockquote></li><li><p>有定义（设函数$f(x)$当$|x|$大于$\forall$正数时有定义）：</p><blockquote><p>如果存在常数$A$，对于$\forall$正数$\varepsilon$（无论多小），总存在正数$A$，使当$x$满足不等式$|x| &gt; X$时，其函数值$f(x)$满足不等式$|f(x)-A|&lt;\varepsilon$；<br>则称常数$A$为函数$f(x)$当$x\to \infty$时的极限，记为$lim_{x\to \infty} f(x)=A$或$f(x)\to A$（当$x\to \infty$）。</p></blockquote></li><li>可将其简单表达为：$lim_{x\to \infty} f(x)=A\Leftrightarrow\forall\varepsilon&gt;0$，$\exists X&gt;0$，当$|x| &gt; X$时，有$|f(x)-A|&lt;\varepsilon$。</li><li><p>有定理：</p><blockquote><p>当$x &gt; 0$且$x\to +\infty$时，将上方定义中的$|x| &gt; X$改为$x &gt; X$，就可得$lim_{x\to +\infty} f(x)=A$的定义。<br>同理，当$x &lt; 0且x\to -\infty$时，将上方定义中的$|x| &gt; X改为x&lt;-X$，就可得$lim_{x\to -\infty} f(x)=A$的定义。</p></blockquote></li><li><p>在几何学中：</p><blockquote><p>$lim_{x\to \infty}=A$的意义是：作直线$y=A-\varepsilon$和$y=A+\varepsilon$；<br>则总有任一正数$X$，使$x &lt; -X$或$x &gt; X$时，$y=f(x)$的图形位于这两条线之间；<br>此时，直线$y=A$是$y=f(x)$图形的水平渐近线。</p></blockquote></li></ul><hr><p><strong>关于函数极限的性质：</strong></p><ul><li>基于收敛性质及函数极限定义，有函数极限性质（基于$lim_{x\to x_0} f(x)$形式）的四个定理：</li></ul><ol><li>定理一（函数极限的唯一性）：有$lim_{x\to x_0} f(x)$，则唯一。</li><li>定理二（函数极限的局部有界性）：有$lim_{x\to x_0} f(x)=A$，则有常数$M &gt; 0$和$\delta &gt; 0$，使得当$0 &lt; |x-x_0| &lt; \delta$时，有$|f(x)| ≤ M$。</li><li>定理三（函数极限的局部保号性）：有$lim_{x\to x_0} f(x)=A$，且$A &gt; 0$（或$A &lt; 0$），则有常数$\delta &gt; 0$，使得当$0 &lt; |x-x_0| &lt; \delta$时，有$f(x) &gt; 0$（或$f(x) &lt; 0$）。<blockquote><p>可得推论：如果$lim_{x\to x_0} f(x)=A（A\neq0）$，必然存在$x_0$的某一去中心邻域$\circ{U}(x_0)$，当$x\in\circ（x_0）$时，有$|f(x)| &gt; /frac{|A|}{2}$。<br>又得推论：如果在$x_0$的某区中心邻域内$f(x) ≥ 0$（或$f(x) ≤ 0$），而且$lim_{x\to x_0} f(x)=A$，则$A ≥ 0$（或$A ≤ 0$）。</p></blockquote></li><li>定理四（函数极限与数列极限的关系）：有$lim_{x\to x_0} f(x)$，${x_n}$为函数$f(x)$的$D$内任一收敛于$x_0$的数列，且$x_n\neqx_0$（$n \in N_+$），则其数值数列${f(x_n)}$必然收敛，且$lim_{x\to \infty} f(x_n)=lim_{x\to x_0} f(x)$。</li></ol><hr><p><strong>关于无穷小与无穷大：</strong></p><ul><li><p>关于无穷小：</p></li><li><p>有函数 $f(x)$，当 $x \to x_0$ （或 $x \to \infty$ ）时的极限为零，则称函数 $f(x)$ 为当 $x \to x_0$ （或 $x \to \infty$ ）时的无穷小。</p><blockquote><p>当有以零为极限的数列 $\lbrace x_n \rbrace$，称其为 $n \to \infty$ 时的无穷小。<br>当 $f(x) \equiv 0$ 时，对 $\forall \varepsilon &gt; 0$ ，总有 $|f(x)| &lt; \varepsilon$ 。</p></blockquote></li><li><p>有定理（关于无穷小与函数极限）：</p></li></ul><ol><li>定理一：在自变量的同一变化过程 $x \to x_0$ （或 $x \to \infty$ ）中，函数 $f(x)$ 具有极限 $A$ 的充分必要条件是 $f(x) = A+\alpha$ ，其中 $\alpha$ 是无穷小。<blockquote><p>由此可证 $x \to \infty$ 。</p></blockquote></li></ol><hr><ul><li><p>关于无穷大：</p></li><li><p>有 $x \to x_0$ （或 $x \to \infty$ ）时，其函数值的绝对值 $|f(x)|$ 可以大于预先置顶的任何很大的正数 $M$ ；</p><blockquote><p>则可称函数 $f(x)$ 是当 $x \to x_0$ （或 $x \to \infty$ ）时的无穷大。</p></blockquote></li></ul><ol><li>则有定义二：</li></ol><ul><li><p>设函数 $f(x)$ 在 $x_0$ 的某一取信邻域内有定义（或 $|x|$ 大于某一正数时有定义）。</p><blockquote><p>有 $\forall$ 正数 $M$（无论多大）且总存在正数 $\delta$ （或正数 $X$ ）；<br>只要 $x$ 适合 $0 &lt; |x-x_0| &lt; \delta$ （或 $|x| &gt; X$ ），对应的函数值 $f(x)$ 总是满足不等式$|f(x)| &gt; M$ ；<br>则可称函数 $f(x)$ 是当 $x \to x_0$ （或 $x \to \infty$ ）时的无穷大。</p></blockquote></li><li><p>基于函数极限定义，当 $x \to x_0$ （或 $x \to \infty$ ）时的无穷大函数 $f(x)$ 的极限是不存在的。</p><blockquote><p>此形态被称为函数的极限是无穷大，并记作： $\lim_{x \to x_0} f(x) = \infty$ （或 $\lim_{x \to \infty} f(x) = \infty$ ）。<br>如果在无穷大的定义中，把 $|f(x)| &gt; M$ 换成 $f(x) &gt; M$ （或 $f(x) &lt; -M$ ）；<br>记为：$\lim_{x \to x_0} f(x) = +\infty$ （或 $\lim_{x \to x_0} f(x) = -\infty$ ）且 $x$ 皆趋近于无限。</p></blockquote></li><li><p>无穷大并不是现实间所存在的数，其只是作为一个概念存在于现实。</p></li><li><p>如果 $\lim_{x \to x_0} f(x) = \infty$ ，那么直线 $x = x_0$ 是函数 $y = f(x)$ 的图形铅直渐近线。</p></li></ul><ol><li>即有定理二：</li></ol><ul><li>在自变量的统一变化过程中，有 $f(x)$ 为无穷大，则 $\frac{1}{f(x)}$ 为无穷小；<blockquote><p>反之，有 $f(x)$ 为无穷小，且 $f(x) \neq 0$ ，则 $\frac{1}{f(x)}$ 为无穷大。<br>由此可证 $x \to x_0$ 与 $x \to \infty$ 。</p></blockquote></li></ul><hr><p><strong>关于极限的运算（基于极限的四则运算法则和复合函数的极限运算法则）：</strong></p><ul><li><p>以下公式只对 $x \to x_0$ 进行表述，且$lim$不会标明自变量的变化过程：</p></li><li><p>$x \to \infty$可参考：</p><blockquote><p>$x \to x_0 = x \to \infty$<br>$\delta = X$<br>$0 &lt; |x-x_0| &lt; \delta$<br>$|x| &gt; X$</p></blockquote></li></ul><ol><li><p>定理一：两个无穷小的和是无穷小。</p><blockquote><p>有推论：有限个无穷小之和也是无穷小。</p></blockquote></li><li><p>定理二：有界函数与无穷小的乘积是无穷小。</p><blockquote><p>推论一：常数与无穷小的乘积是无穷小。<br>推论二：有限个无穷小的乘积是无穷小。</p></blockquote></li><li><p>定理三：如果 $\lim f(x) = A，\limg(x) =B$ ，则有以下推论：</p><blockquote><p>推论一：$\lim[f(x) \pm g(x)] = \limf(x) \pm \limg(x) = A \pm B$<br>推论二：$\lim[f(x) \cdot g(x)] = \limf(x) \cdot \limg(x) = A \cdot B$<br>推论三：若又有 $B \neq 0$ ，则 $\lim \frac{f(x)}{g(x)} = \frac{\limf(x)}{\limg(x)} = \frac{A}{B}$</p></blockquote></li></ol><ul><li><p>定理三中的推论一与推论二可推广到有限个函数的情形：</p><blockquote><p>如果 $\limf(x)$ ， $\limg(x)$ ， $\limh(x)$ 都存在，则有：<br>推论：$\lim[f(x) + g(x) - h(x)] = \limf(x) + \limg(x) - \limh(x)$<br>推论：$\lim[f(x) \cdot g(x) \cdot h(x)] = \limf(x) \cdot \limg(x) \cdot \limh(x)$</p></blockquote></li><li><p>基于定理三种的推论二，又有推论：</p><blockquote><p>推论一：如果 $\limf(x)$ 存在，而 $c$ 为常数，那么 $\lim[cf(x)]=c\limf(x)$。<br>因为在求极限时，常数因子可以提到极限记号的外面，因为$\lim c=c$。<br>推论二：如果 $limf(x)$ 存在，而 $n$ 是正整数，那么 $/lim[f(x)]^n=[/limf(x)]^n$。</p></blockquote></li><li>证：<br>$<br>\begin{align}<br>\lim[f(x)]^n &amp; = \lim[f(x) \cdot f(x) \cdot \cdots \cdot f(x)] \\<br>&amp; = \limf(x) \cdot \limf(x) \cdot \cdots \cdot \limf(x) = [\limf(x)]^n<br>\end{align}<br>$</li></ul><hr><ul><li>关于数列，有类似的极限四则运算法则，则有以下定理：</li></ul><ol><li>定理四：</li></ol><ul><li>设有数列 $\lbrace x_n \rbrace$ 和 $\lbrace y_n \rbrace$ ；<blockquote><p>如果 $\lim_{n \to \infty} x_n = A$ ， $\lim_{n \to \infty} y_n = B$</p></blockquote></li><li>则有：<blockquote><p>$\lim_{n \to \infty} (x_n \pm y_n) = A \pm B$<br>$\lim_{n \to \infty} {x_n \cdot y_n} = A \cdot B$</p></blockquote></li><li><p>当 $y_n \neq 0$ （$n=1,2,\cdots$）且$B \neq 0$时，$\lim_{n \to \infty} /frac{x_n}{y_n} = /frac{A}{B}$</p></li><li><p>定理五: 如果 $\varphi(x) \geq \psi(x)$ ，而 $\lim \varphi(x) = A$ ， $\lim \psi(x) = B$ ，那么 $A \geq B$</p></li><li>证：<blockquote><p>令 $f(x) = \varphi(x) - \psi(x)$ ，则 $f(x) \geq 0$ ，根据定理三有：<br>$<br>\begin{align}<br>\lim f(x) = \lim [\varphi(x) - \psi(x)] \\<br>= \lim \varphi(x) - \lim \psi(x) = A - B<br>\end{align}<br>$</p></blockquote></li><li><p>因为有 $\lim f(x) \geq 0$ ，即 $A - B \geq 0$ ，故 $A \geq B$ 。</p></li><li><p>另有推论：</p><blockquote><p>求有理整函数（多项式）或有理分式函数时，当 $x \to x_0$ 的极限时，只需要将 $x_0$ 代替函数中的 $x$ 就行了；<br>因为对于有理分式函数，虚假定这样带入后分母不等于零；<br>所以在关于商的极限的运算法则不能使用。</p></blockquote></li></ul><hr><ol><li>定理六（复合函数的极限运算法则）：<blockquote><p>设函数 $y = f[g(x)]$ 是由函数 $u = g(x)$ 与函数 $y = f(u)$ 复合而成，$f[g(x)]$ 在点 $x_0$ 的某去心邻域内有定义；<br>若 $\lim_{x \to x_0} g(x) = u_0$ ， $\lim_{u \to u_0} f(u) = A$ ，且存在 $\delta_0 &gt; 0$ ，当 $x \in \circ{U} (x_0,\delta_0)$ 时，有 $g(x) \neq u_0$ ；<br>则： $\lim_{x \to x_0} f[g(x)] = \lim_{u \to u_0} f(u) =A$</p></blockquote></li></ol><ul><li><p>在定理六中，把 $\lim_{x \to x_0} g(x) = u_0$ 换成 $\lim_{x \to x_0} g(x) = \infty$ 或 $\lim_{x \to \infty}$ ；</p><blockquote><p>而把 $\lim_{u \to u_0} f(u)$ = $A$ 换成 $\lim_{u \to \infty} f(u) = A$ ；<br>可得类似定理。</p></blockquote></li><li><p>定理六表示，如果函数 $g(x)$ 和 $f(u)$ 满足改定理条件，那么作代换 $u = g(x)$ 可把求 $/lim_{x \to x_0} f[g(x)]$ 化为求 $/lim_{u \to u_0} f(u)$ ；</p><blockquote><p>这里 $u_0 = \lim_{x \to x_0} g(x)$ 。</p></blockquote></li></ul><hr><ul><li>利用其性质与定理进行逻辑运算</li><li>运算规律数不胜数，这里不做过多赘述</li><li>推论即为定理</li></ul><hr><ul><li>注：正整数$N$、定义域$D$、值域$R$、$\forall a/A$、函数$f$。</li></ul><hr><p>关于极限存在准则与两个重要极限：</p><p>准则一：<br>如果数列\lbrace x_n \rbrace，\lbrace y_n \rbrace及\lbrace z_n \rbrace满足下列条件：</p><ol><li>从某项起，即\exists n_0 \in N，当n &gt; n_0时，有y_n \leq x_n \leq z_n；</li><li>\lim_{n \to \infty} y_n = a，\lim_{n \to \infty} z_n = a，那么数列\lbrace x_n \rbrace的极限存在，且\lim_{n \to \infty} x_n = a。</li></ol><p>上述数列极限存在准则可推广到函数的极限：<br>准则一推论：</p><ol><li>如果x \in \circ{U} (x_0,r)（或|x| &gt; M）时，g(x) \leq f(x) \leq h(x)；</li><li>\lim_{x \to x_0} g(x) = A，\lim_{x \to x_0} h(x) = A（且x \to \infty）那么\lim_{x \to x_0} f(x)（且x \to \infty）存在，且的等于A。</li></ol><p>称准则一及其推论一位夹逼准则。</p><p>作为准则一推论一的应用，证明此重要极限之一：</p><p>\lim_{x \to 0} \frac{sin x}{x} = 1</p><p>函数 \frac{sin x}{x}对于一切x \neq 0都有定义。</p><hr><p>准则二：单调有界性数列必有极限。</p><p>如果数列{x_n}满足条件：x_1 \leq x_2 \leq x_3 \leq \cdots \leq x_n \leq x_{n+1} \leq \cdots，则称数列{x_n}是单调增加的。<br>如果数列{x_n}满足条件：x_1 \geq x_2 \geq x_3 \geq \cdots \geq x_n \geq x_{n+1} \geq \cdots，则称数列{x_n}是单挑减少的。<br>单调增加和单调减少的数列统称位单调数列。</p><p>因为收敛的数列一定有界且有界的数列不一定收敛，在准则二中：如果数列不仅有界，并且还是单调的；<br>那么此数列的极限必定存在，也就是此数列必定收敛。</p><p>这里的单调数列是广义的，就是说，在条件中也包括相等的情形；<br>也可将以上对于单调数列的定义称为广义的单调数列。</p><p>准则二有如下几何解释：</p><p>在数轴间，其单调数列的点x_n只可能在一个方向移动，所以只有两种情形：<br>或者点x_n沿数轴移向无穷远（x_n \to +\infty或x_n \to -\infty）；<br>或者点x_n无限趋近于某一个定点A，也就是数列{x_n}趋于一个极限。</p><p>但现在假定数列是有界的，而有界数列的点x_n都落在数轴上的某一个区间[-M,M]内；<br>那么上述的第一种情况就不可能发生了；<br>这就表示这个数列趋近于一个极限，并且此极限的绝对值不超过M。</p><p>作为准则二的应用，可引出第二个重要极限：</p><p>\lim_{x \to \infty} \left(1+\frac{1}{x}\right)^2</p><p>则分别有n \to +\infty与n \to -\infty两种情况</p><hr><p>相应于单调有界数列必有极限的准则二，函数极限也有类似的准则。<br>对于自变量的不同变化过程（x \to x_{0}^{-}，x \to x_{0}^{+}，x \to -\infty，x \to +\infty），准则有不同的形式。<br>现以x \to x_{0}^{_}为例，将相应的准则叙述如下：</p><p>准则二推论一：设函数f(x)在点x_0的某个左邻域内单调并且有界，则f(x)在x_0的左极限f(x_{0}^{-})必定存在。</p><hr><p><strong>柯西极限存在法则：</strong></p><p>因为收敛数列不一定是单调的，因此，准则二所给出的单调有界这条件，是数列收敛的充分条件，而不是必要的。<br>其中有界这一条件对数列的收敛性来说是必要的，而柯西极限存在准则给出了数列收敛的充分必要条件。</p><p>柯西极限存在法则：<br>数列{x_n}收敛的充分必要条件是：对于任一给定的正数\varepsilon，存在正整数N，使得当m&gt;N，n&gt;N时，有|x_n-x_m|&lt;\varepsilon</p><p>此准则的几何意义：<br>数列{x_n}收敛的充分必要条件是：对于任一给定的正数\varepsilon，在数轴上一切具有足有大号码的点x_n中，任意两点间的距离小于\varepsilon。<br>柯西极限存在法则有时也可叫做柯西审敛原理。</p><hr><p>关于无穷小的比较：</p><p>已知：无穷小间的和、差和乘积仍是无穷小，但无穷小间的商会出现的情况有所不同。<br>两个无穷小之比的极限的各种不同情况，反应了不同无穷小趋近于零的快慢程度；<br>有如在x \to 0的过程中，x^2 \to 0比3x \to 0快些，而sin x \to 0与x \to 0的快慢相仿。</p><p>这里以无穷下之比的极限存在并接近于无穷大时，来说无穷小之间的比较。<br>此间α及β都是在同一个自变量变化过程中的无穷小，且a ≠ 0，\lim frac{β}{α}</p><p>有定义：</p><ol><li>如果\lim {β}{α} = 0，则称β是比α高阶的无穷小，即为β = \circ (α)；</li><li>如果\lim {β}{α} = \infty，则称β是比α低阶的无穷小；</li><li>如果\lim {β}{α} = c ≠ 0，则称β与α是同阶无穷小；</li><li>如果\lim {β}{α_k} = c ≠ 0，k &gt; 0，则称β是关于α的k阶无穷小；</li><li>如果\lim {β}{α} = 1，则称β与α是等价无穷小，即为α~β。</li></ol><p>则等价无穷小是同阶无穷小的特殊情形，即c=1的情形。</p><hr><p>关于等价无穷小：</p><p>定理一：β 与 α 是等价无穷小的充分必要条件为 β = α + \circ (α)<br>定理二：设α ~ \tilde{α}，β ~ \tilde{β}，且\lim \frac{\tilde{β}}{\tilde{α}}，则 \lim \frac{β}{α} = \lim \frac{\tilde{β}}{\tilde{α}}</p><p>定理二表明：求两个无穷小之比的极限时，分子及分母都可用等价无穷小来代替；<br>因此，如果用来代替的无穷小选的适当的话，就可以使计算简化。</p><hr><p>关于函数的连续性：</p><p>动态的现实现象所反映就是函数的连续性。</p><p>关于增量，连续性与函数连续性的概念与定义：</p><p>关于增量：</p><p>设变量u从它的一个初值u_1变到终值u_2，终值与初值的差u_2 - u_1就叫做变量u的增量，记作\Deltau，即为：\Deltau = u_2 - u_1<br>增量\Deltau可以是正的，也可以是负的。<br>\Delta若为正，变量u从u_1变到u_2=u_1+\Deltau时是增大的；当\Deltau为负时，变量u是减小的。</p><p>应该注意到的是记号\Deltau并不表示某个量\Delta与变量u的乘积，其为整体记号。</p><p>假定函数y=f(x)在点x_0的某一个邻域是有定义的；<br>当自变量x在此邻域内从x_0变到x_0+\Deltax时，函数值或因变量f(x)相应地从f(x_0)变到f(x_0,+\Deltax)；<br>因此函数值或因变量f(x)的对应增量为：\Deltay=f(x_0+\Deltax)-f(x_0)</p><p>习惯上也可以称\Deltay为函数的增量。</p><p>几何关系：<br>假如保持x_0不变而让自变量的增量\Deltax变动，一般来说，函数的增量\Deltay也要随着变动。<br>则对其概念有描述：如果当\Deltax趋近于零时，函数的对应增量\Deltay也趋于零，即\lim_{\Deltax \to 0} \Deltay =0 或 \lim_{\Deltax \to 0} [f(x_0+\Deltax) - f(x_0)] = 0；<br>则称函数y=f(x)在点x_0处是连续的；<br>则有定义：\lim_{\Deltax \to 0} \Deltay = \lim_{\Deltax \to 0} [f(x_0+\Deltax)-f(x_0)] = 0，则称函数y=f(x)在点x_0连续。</p><p>函数y=f(x)在x_0连续的定义用不同的方式来描述：<br>设x=x_0+\Deltax，则\Deltax \to 0就是x \to x_0；<br>又由于 \Deltay=f(x_0 + \Deltax) - f(x_0) = f(x) - f(x_0)，即f(x) = f(x_0)+\Deltay；<br>可见\Deltay \to 0就是f(x) \to f(x_0)，因此\lim_{\Deltax \to 0}\Deltay =0与\lim_{x \to x_0}f(x) = f(x_0)相当。<br>所以，函数y=f(x)在点x_0连续的定义又可叙述如下：</p><p>设函数y=f(x)在点x_0的某一邻域内有定义，如果\lim_{x \to x_0}f(x) = f(x_0)，那么就称函数f(x)在x_0处连续。</p><p>由函数f(x)当x \to x_0时的极限的定义可知，上述定义也可以用\varepsilon - \delta语言表达如下：没有如下了，我裂开了</p><p>至此换种风格来进行笔记</p><hr><p>函数y=f(x)在点x_0连续的定义：<br>设函数y=f(x)在点x_0的某一邻域内有定义，如果\lim_{x \to x_0}f(x) = f(x_0)，那么就称函数f(x)在x_0处连续。<br>也可称：f(x)在点x_0连续\Leftrightarrow \forall \varepsilon&gt;0，\exists \delta &gt; 0，当|x-x_0| &lt; \delta，有|f(x)-f(x_0)|&lt; \varepsilon<br>妈的，草！！！</p><hr><p>左连续概念：<br>有\lim_{x \to x_{0}^{-}} = f(x_{0}^{^})存在且等于f(x_0)，即f(x_{0}^{-})=f(x_0)，则函数f(x)在点x_0左连续。</p><p>右连续概念：<br>\lim_{x \to x_{0}^{+}} f(x) = f(x_{0}^{+})存在且等于f(x_0)，即f(x_{0}^{+}) = f(x_0)，则函数f(x)在点x_0右连续。</p><p>在区间上每一点都连续的函数，称为在该区间上的连续函数，或者说函数在该区间上连续。</p><p>如果区间包括端点，如果函数在右端点连续则是指左连续，在左端点连续是指右连续。</p><p>连续函数的图形是一条连续而不间断的曲线。</p><p>因为如果f(x)是有理整函数（多项式），那么对于任意的实数x_0，都有\lim_{x \to x_0} f(x) = f(x_0)；<br>因此有理整函数在区间(-∞,+∞)内是连续的。</p><p>对于有理分式函数F(x)=/frac{P(x)}{Q(x)}，只要Q(x_0) ≠ 0，就有\lim_{x \to x_0} F(x) = F(x_0)，因此有理分式函数在其定义域内每一点都是连续的。</p><hr><p>关于函数的间断点：</p><p>设函数f(x)在点x_0的某去中心邻域内有定义；<br>在此前提下，如果函数f(x)有下列三种情形之一：</p><ol><li>在x=x_0没有定义</li><li>虽在x=x_0有定义，但\lim_{x \to x_0} f(x)不存在</li><li>虽在x=x_0有定义，且\lim_{x \to x_0} f(x)存在，但\lim_{x \to x_0} f(x) ≠ f(x_0)</li></ol><p>那么函数f(x)在点x_0为不连续，而点x_0称为函数f(x)的不连续点或间断点。</p><p>间断点类型：无穷间断点、振荡间断点、可去间断点、跳跃间断点、第一类间断点、第二类间断点。</p><hr><p>关于连续函数的运算与初等函数的连续性：</p><p>关于闭区间上连续函数的性质：</p><hr><p>极限环节至此</p><hr><p>数列极限</p><p>映射与函数、函数极限、无穷小与无穷大、极限存在法则 &amp; 两个重要极限、无穷小的比较、函数的连续性、函数的间断点、初等函数的连续性</p><p>极限运算法则、连续函数的运算</p><p>映射与函数</p><p>映射、像、原像、满射、单射、双射、算子、泛函、变换、函数、逆映射、复合映射<br>自变量、因变量、定义域、函数值、函数关系、值域、自然定义域、图形<br>绝对值函数、符号函数、阶梯曲线、阶梯函数、取整函数、分段函数<br>上界、下界、有界，无界，单调增加，单调减少，单调函数<br>偶函数、奇函数、周期函数、周期、最小正周期、反函数、直接函数、复合函数、中间变量<br>幂函数、指数函数、对数函数、三角函数、反三角函数、基本初等函数、初等函数、曲线函数、反曲线函数<br>双曲正弦、双曲余弦、双曲正切、反双曲正弦、反双曲余弦、反双曲正切</p><p>数列与函数极限</p><p>数列、极限、项、一般项、通向、收敛于、发散、有界、无界、子列、函数极限、左极限、右极限、单侧极限<br>无穷大、无穷小铅直渐近线、单调增加，单调减少，单调数列、柯西极限存在法则、有界性<br>高阶无穷小、低阶无穷小、同阶无穷小、k阶无穷小、函数的连续性、左连续、右连续、区间、不连续点、间断点<br>无穷间断点、震荡间断点、可去间断点、跳跃间断点、第一类间断点、第二类间断点、定义区间、幂指函数、开区间、闭区间、一致连续</p><p>函数的运算<br>极限的运算</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Apr 13 2020 00:06:00 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;极限相关定理参考-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="mathematical analysis" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/mathematical-analysis/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>哲学-1</title>
    <link href="https://unit-serow.github.io/2020/04/10/%E5%93%B2%E5%AD%A6-1/"/>
    <id>https://unit-serow.github.io/2020/04/10/%E5%93%B2%E5%AD%A6-1/</id>
    <published>2020-04-10T12:01:18.000Z</published>
    <updated>2020-04-10T16:49:50.560Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Apr 11 2020 00:49:59 GMT+0800 (中国标准时间) --><center><strong>哲学类别汇总-1</strong></center><center><strong>学习资源&参考资料汇总-1</strong></center><a id="more"></a><h3 id="哲学-类别一览："><a href="#哲学-类别一览：" class="headerlink" title="哲学/类别一览："></a>哲学/类别一览：</h3><p><strong>哲学（客观）：</strong></p><ul><li><p>主分支：形而上学/宇宙论、知识论、逻辑学、伦理学/价值论、美学。</p></li><li><p>特殊分支：后设哲学、宗教哲学、心灵哲学、语言哲学、科学哲学、政治哲学、法律哲学。</p></li><li><p>哲学历史：古典、中世纪、文艺复兴、近代（巴洛克时期、启蒙时代、十九世纪）、当代。</p></li><li><p>哲学环境：东方、西方。</p></li></ul><hr><p><strong>学派（客观）：</strong></p><ul><li><p>古典哲学：古中国、古希腊&amp;古罗马、古印度、波斯&amp;古巴比伦。</p></li><li><p>中世纪哲学（9-16世纪）：基督欧洲、东亚、印度、伊斯兰、犹太教。</p></li><li><p>近代哲学（17-19世纪）：人物、唯物、唯心、其它。</p></li><li><p>当代哲学（20-21世纪）：分析、欧陆、其它。</p></li></ul><hr><p><strong>领域（客观）：</strong></p><ul><li>形上学、本体论、现实、知识论、精神、伦理学、自由意志、规范性、美学。</li></ul><hr><ul><li>现实 &amp; 精神：知识论、逻辑学、形而上学、古中国。</li></ul><hr><ul><li><p>形而上学&amp;Metaphysics（”第一哲学”和“哲学的基本问题“）：易经 · 系辞上传-形而上者谓之道，形而下者谓之器。</p></li><li><p>形而上学的分支：自然主义、自然哲学、本体论、宗教哲学、精神哲学、知觉哲学。</p></li></ul><hr><ul><li><p>知识论：关于知识的本质、起源和范围的一个哲学分支。</p></li><li><p>目前的知识论和认识论之间的关系存在争议。</p></li><li><p>当前的知识理论以基础主义及连贯主义做基础。</p></li></ul><hr><ul><li><p>逻辑，又称理则、伦理、推理、推论，是对有效推论的哲学研究。</p></li><li><p>逻辑讨论逻辑论证会呈现的一般形式，哪种形式是有效的，以及其中的谬论。</p></li><li><p>逻辑通常可以被分为三部分：归纳推理、溯因推理和演绎推理。</p></li><li><p>在哲学里，逻辑是指形式逻辑和数理逻辑，形式逻辑是研究某个形式语言的有效推论。</p><blockquote><p>主要是演绎推理。<br>在辩证法中也会学习到逻辑。<br>数理逻辑是研究抽象逻辑关系和数学基本的问题。</p></blockquote></li><li><p>在心理、脑科学、语义学、法律里，是研究人类思想推理的处理。</p></li><li><p>在学习、推理统计学里，是研究最大可能的结论。</p><blockquote><p>主要是归纳推理、溯因推理。</p></blockquote></li><li><p>在计算机科学里，是研究各种方法的性质，可能性，和实现在机器上。</p><blockquote><p>主要是逻辑推理，溯因推理，也有在归纳推理的研究。</p></blockquote></li><li><p>演绎和归纳。</p></li><li><p>认知心理学。</p></li></ul><hr><p><strong>参考资料：</strong></p><ul><li><p>中文维基：逻辑<a href="https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91" target="_blank" rel="noopener">跳转</a></p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E9%80%BB%E8%BE%91</a></p></blockquote></li><li><p>中文维基：知识论<a href="https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AF%86%E8%AE%BA" target="_blank" rel="noopener">跳转</a></p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AF%86%E8%AE%BA" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AF%86%E8%AE%BA</a></p></blockquote></li><li><p>中文维基：形而上学<a href="https://zh.wikipedia.org/wiki/%E5%BD%A2%E4%B8%8A%E5%AD%B8" target="_blank" rel="noopener">跳转</a></p><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%BD%A2%E4%B8%8A%E5%AD%B8" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%BD%A2%E4%B8%8A%E5%AD%B8</a></p></blockquote></li></ul><hr><ul><li><p>斯坦福哲学百科全书<a href="https://plato.stanford.edu/" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://plato.stanford.edu/</code></p></blockquote></li><li><p>对于哲学的某些层面，读书只不过是对各类客观所定义的名词进行系统性的认识与理解</p><blockquote><p>永远认清自己所学习知识的方向，目的与本质<br>时刻认清主观思维所对应的客观体系与类别<br>第一个沉思 笛卡尔<br>形而上学 亚里士多德 公元前四世纪<br>易经＆周易<br>道德经<br>逻辑学 精神现象学 黑格尔<br>柏拉图<br>尼采<br>苏格拉底<br>休谟<br>卢梭<br>概念文字 戈特洛布·弗雷格 1879年</p></blockquote></li></ul><hr><ul><li>数理类别总汇（数学领域/MSC分类标准/中国学科分类国家标准）：</li></ul><blockquote><p>数学基础（纯粹数学）：范畴论、集合论、数理逻辑、数学哲学。<br>代数：初等代数、线性代数、抽象代数、多重线性代数、泛代数。<br>数学分析：微积分、实变函数、复变函数、微分方程、泛函分析、调和分析。<br>离散数学：组合数学、图论、序理论、博弈论。<br>几何：代数几何、解析几何、微分几何、离散几何学、欧几里得几何、非欧几何、有限几何学。<br>数论：算术、代数数论、解析数论、几何数论、丢番图数论。<br>拓扑学：代数拓扑、微分拓扑、几何拓扑。<br>统计学：测度与概率、数理统计学、数据科学、统计推断、回归分析、统计学习理论、机器学习、人工智能、数据结构与算法。<br>计算科学：计算机科学、计算理论、数值分析、最优化、计算机代数。<br>应用数学：控制论、信息论、计算化学、数理生物学、数理经济学、计量经济学、数理金融学、数学心理学、数学物理学。</p></blockquote><hr><ul><li><p>代数学&amp;离散数学&amp;数学分析&amp;数论&amp;基础数学&amp;统计学&amp;计算科学</p></li><li><p>代数&amp;离散</p></li><li><p>数论&amp;分析&amp;基础&amp;纯粹</p></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sat Apr 11 2020 00:49:59 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;哲学类别汇总-1&lt;/strong&gt;&lt;/center&gt;&lt;center&gt;&lt;strong&gt;学习资源&amp;参考资料汇总-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="无" scheme="https://unit-serow.github.io/categories/%E6%97%A0/"/>
    
      <category term="concept" scheme="https://unit-serow.github.io/categories/%E6%97%A0/concept/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>set-1</title>
    <link href="https://unit-serow.github.io/2020/04/10/set-1/"/>
    <id>https://unit-serow.github.io/2020/04/10/set-1/</id>
    <published>2020-04-10T11:59:24.000Z</published>
    <updated>2020-04-10T12:01:04.190Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="fc22a889eaaee5e393935ff37dd32835f859dc14670f276471b9a2ef6eee1cf4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      加密文案
    
    </summary>
    
    
      <category term="无" scheme="https://unit-serow.github.io/categories/%E6%97%A0/"/>
    
      <category term="concept" scheme="https://unit-serow.github.io/categories/%E6%97%A0/concept/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>学习-1</title>
    <link href="https://unit-serow.github.io/2020/04/10/%E5%AD%A6%E4%B9%A0-1/"/>
    <id>https://unit-serow.github.io/2020/04/10/%E5%AD%A6%E4%B9%A0-1/</id>
    <published>2020-04-09T19:53:48.000Z</published>
    <updated>2020-04-09T19:54:31.289Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Apr 10 2020 03:58:56 GMT+0800 (中国标准时间) --><center><strong>类型: 讨论文案</strong></center><a id="more"></a><h3 id="关于学习"><a href="#关于学习" class="headerlink" title="关于学习"></a>关于学习</h3><p>学习方法相关</p><p>目前还需要不断改进</p><p>多数适用于自学</p><p>一种完全基于计算机与网络的学习方法</p><p>注重于对于基本概念的基本理解与深层理解</p><p>机械化的强制练习&amp;长时间的实践</p><p>任何能力与经验都来自于长时间的主动累积与被动累积<br>前者为主动累积，为入门阶段<br>后者为被动累积，为基础阶段</p><p>为将低金钱成本，将会高时间成本</p><p>可以使用PDF或其它文件类型的电子书籍<br>书籍首选以目前最为掌握的语言为中心</p><p>用文本工具做出书籍或其它资料的重要部分，以及自己对于所对应知识理解，无论深浅都需要写出来<br>笔记可以写到博客上存储到云端，以便复习与浏览<br>此博客/写笔记的博客尽量不要公开，因为可能会没有技术性的资料</p><p>对于我来说，公开此时的网点地图的结果将只是自欺欺人，不知深浅</p><p>只不过可以公开给朋友或者熟悉的人，以便参考与讨论(但前提是不会让自己的心理受到伤害)</p><p>不能怕多与怕麻烦，对技术与能力的学习需要不断的实践，练习与行动</p><p>学习在现实间需要使用到的技能的核心为行动，而概念的核心在于理解与长时间的实践<br>对于知识所属概念的理解来源于长时间的认识以及实现</p><p>一切基于现实间的行动皆会产生现实间的结果，问题是自己是否已经行动的足够了，这一点自有自己清楚<br>自欺欺人者将永远止步于此，当发现自己止步于某个阶段时，重新审视自己，必须继续行动，即便无法前进</p><p>对于行动也不要过度盲目，争取对于自身目前的水平有一个客观的批判与了解<br>再去选择要学习领域或能力的学习难度与深浅</p><p>如果想要自学，并且一切都是从头开始，那么学习的道路必然会是非常艰辛和坎坷的<br>必要的时候需要去了解大概的体系，对于某一个点进行学习与突破，再去理解其它的知识</p><p>关于至顶向下的学习方法(针对于某个体系，而非某个技能)<br>至顶向下的学习方法对于自学的初学者非常不友好<br>刚开始的情况可能只有看着一堆连读都不会读的术语发懵<br>进行逐一突破也不是不可行，只不过大多数的结果就是耗尽精力，时间，兴趣，甚至去行动的大多数动力<br>至于后果，恐怕今生对于这个技能和领域可能只剩下恐惧和无力了<br>只不过科班最好的教学流程与方法可能就是至顶向下了<br>在有人带的情况下，此种方法将会节约大量的时间与精力，只不过这里只去讨论自学</p><p>这是一个关于最低化学习成本与让其无中生有的话题</p><hr><p>还有一个不可忽视的一点就是环境问题<br>环境，可以称作是学习过程中最重要的因素<br>无论科班(学校)还是自学<br>对于环境的选择需要根据自身的情况</p><p>对于一万小时定律我是深信不疑的，一万小时大约需要五年时间<br>但是用五年时间只去专精一项技能，恐怕是不值得的<br>一万小时定理所带来的结果是专精一个领域，而不是某项技能</p><hr><p>需要切记的两点: 环境与客观</p><p>对于自身所拥有(现有)的能力与知识，有一个极端客观的评价与估量<br>时刻保持理智，务必保持客观，必须认清自己的水平<br>这一点…有时很简单，有时很难……</p><p>所需要学习的知识和技能不能超出估量程度太多，无论向上还是向下，前者没有结果，后者浪费时间<br>前者虽然浪费了时间，但可能多少会有点收获，但后者多半是没有收获</p><p>一步一个脚印，一点一点来，怕的不是时间的消耗，而是时间的浪费<br>只要不去无意义的浪费时间，时间将永远足够(因为时间是否足够的概念是基于主观的，如果时间不够当然就不会引出这些话题了)</p><p>可以适当的从网络上汲取学习意见，只不过对于学习意见的选择千万要谨慎，毕竟他是他，我是我</p><hr><p>觉悟与毅力</p><p>别去低估自己的能力，别去高估自己的毅力</p><p>让阶段，结果和生存作为目标</p><p>哪怕慢一点，也千万别去消磨自己任何的耐力和毅力，别去挑战毅力，因为未来太远了</p><p>当然不能太慢了，需要快的就快，自己选择，结果都是属于自己的</p><p>如果是兴趣使然，当然是最好的</p><p>所以最怕的就是着急，三分钟热度的问题不是来源于某个冲动，而是来源于学习的方法和对所学知识的了解</p><p>三分钟的热度至少可以证明你已经开始行动了，现实的一切结果皆来源于行动</p><p>行动永远放在第一位，至于怎么去行动就需要看自己的了</p><p>还有就是关于觉悟，关于自己的觉悟与什么是觉悟，这是一个极端主观的话题，估计在现实世界中只有自己能够理解与了解</p><p>关于意义的话题也不做阐述了</p><hr><p>拥有目的性与阶段性</p><p>关于迷茫&amp;方向丢失</p><p>迷茫是主观的结果</p><p>有时哪怕重新开始，也不要继续浪费时间与消耗自己的耐力</p><p>想去学什么和该去学什么</p><p>你应该首选去学自己该学的，这一点是由客观环境决定的，而非主观，一切顺天应人</p><p>其次再去学你想学的，用闲暇和多余的时间与精力</p><p>如果去消耗时间去学一些与自己所处环境无关的技能，大多数的结果可能只是对于时间的无意义浪费</p><p>环境问题是必须去重视的，包括自身目前所拥有的能力所衍生的基本生存所必须拥有的能力</p><hr><p>如果错误了呢？<br>如何去证明与了解自身的主观性错误<br>此时需要的只是比前一秒更加客观的视角与更加理智的讨论</p><p>人在保持理智时所做出的事将会是最荒唐的<br>因为智慧不是属于现实的概念</p><hr><p>前一秒的自己要永远要保证比后一秒的自己更加强大</p><hr><p>写的有点多了，只是因为想写多一点<br>至此结束吧，今天对于自身的讨论<br>可能会有很多废话，但我在此时可能察觉不到</p><hr><p>呃…知道去怎么做为什么还不去做呢？</p><p>当世间一切都显得毫无意义时，现实与本能会给予自己方向</p><hr><p>CN-2020-04-10/am-3.43</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Apr 10 2020 03:58:56 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;类型: 讨论文案&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="无" scheme="https://unit-serow.github.io/categories/%E6%97%A0/"/>
    
      <category term="concept" scheme="https://unit-serow.github.io/categories/%E6%97%A0/concept/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MCU-1</title>
    <link href="https://unit-serow.github.io/2020/04/09/MCU-1/"/>
    <id>https://unit-serow.github.io/2020/04/09/MCU-1/</id>
    <published>2020-04-09T14:59:59.000Z</published>
    <updated>2020-04-09T19:58:48.327Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Apr 10 2020 03:58:56 GMT+0800 (中国标准时间) --><center><strong>MCU/单片机-1</strong></center><center><strong>基本概述-1</strong></center><a id="more"></a><h3 id="single-chip-microcomputer"><a href="#single-chip-microcomputer" class="headerlink" title="single-chip microcomputer"></a>single-chip microcomputer</h3><p><strong>简要概述:</strong></p><ul><li><p>单片机</p><blockquote><p>全称单片微型计算机(single-chip microcomputer)<br>又称微控制器(microcontroller)<br>简称为MCU</p></blockquote></li><li><p>将中央处理器，存储器，定时/计算器(timer/counter)，各种输出输入接口等都集中在一块集成电路芯片上的微型计算机</p><blockquote><p>比起应用于个人计算机中的通用性微处理器相比，其更强调的是自供应(不用外接硬件)和节约成本</p></blockquote></li><li><p>绝大多数的现代单片机皆基于冯·诺依曼结构</p><blockquote><p>此结构清楚地定义了嵌入式系统所必须的四个基本部分:<br>一个中央处理器核心<br>程序存储器(只读存储器或闪存)<br>数据存储器(随机存储器)<br>一个或者更多的定时器/计数器</p></blockquote></li><li><p>若干个用以与外围设备及其扩展资源进行通信的输入/输出端口</p><blockquote><p>以上所描述的所有设备与功能皆被集中在单个集成电路芯片上</p></blockquote></li><li><p>单片机与通用型中央处理器单元芯片不同</p><blockquote><p>前者一般很容器配合最小型的外部支持芯片而制成工作计算机<br>从而将单片机系统植入设备内部，以控制设备</p></blockquote></li><li><p>传统的微处理器是不允许这么做的，它想要完成单片机的所有工作，就必须连接一些其它的外界芯片</p><blockquote><p>比如说如果因为芯片上没有数据存储器，就必须添加一些RAM的存储芯片<br>虽然所添加存储的容量很灵活，但是至少还是要去添加<br>另外还需要很多连线来传递芯片之间的数据</p></blockquote></li><li><p>与以上的情况相比，单片机的工作则相对独立，一个典型的微控制器只需要一个时钟发生器和很少的RAM和ROM(或EPROM，$E^2PROM$)就可以在软件和晶振下工作了</p><blockquote><p>同时微处理器具有丰富的输入输出设备，通常这些集成在内部的设备可以通过特殊的指令来操作</p></blockquote></li><li><p>单片机的时钟频率通常较通带的计算机芯片要更低，但它价格低廉并且能够提供充足的程序存储器，从而丰富片上的接口</p></li><li><p>某些架构的单片机产商众多，单片机之间最主要的区别就在于其架构层面</p><blockquote><p>而有些单片机是市面上的主流架构，每一种架构都需要进行单独的学习<br>最主流的单片机架构有如: 8051系列与Z80系列</p></blockquote></li><li><p>一些现代的微控制器支持一些内建的高级编程语言，有如: BASIC，C，C++等等</p></li></ul><hr><p><strong>关于各类单片机的其它区别(单片机的比特数):</strong></p><ul><li>根据总线或数据寄存器的宽度，单片机又分为4位，8位，16位和32位单片机<blockquote><p>其中4位多用于家电或其它的低级物联设备<br>8位与16位单片机主要用于一般的控制领域，而不用于使用操作系统<br>32位多用于网络操作，多媒体处理等复杂处理的场合，一般要使用嵌入式操作系统</p></blockquote></li></ul><hr><p><strong>关于单片机的开发:</strong></p><ul><li>单片机的软件开发中，以往多使用汇编语言，如今使用C语言较多，还可以使用BASIC语言等更适合初学者的语言，部分的集合开发环境支持C++<blockquote><p>单片机的软件测试需要使用单片机开发器或模拟器</p></blockquote></li></ul><hr><p><strong>关于单片机的硬件:</strong></p><ul><li>可以使用开发板来进一步简化程序的开发和烧纸的过程<blockquote><p>开发板可能是包含实际芯片或是仿真器<br>通过配套的下载线，来连接电脑与开发板，从而在电脑上编写程序然后下载到开发板<br>批量生产会用到编程器</p></blockquote></li></ul><hr><ul><li>关于常见单片机及其厂商&amp;其它小众的单片机及其厂商<blockquote><p>单片机软件开发环境与仿真&amp;布图的设计软件<br>这里不做过多赘述</p></blockquote></li></ul><hr><ul><li><p>核心理念是自给自足与节约成本</p><blockquote><p>原理&amp;应用&amp;接口</p></blockquote></li><li><p>补充图片</p></li></ul><p><img src="/images/MCU-1/单片机-1.png" width="40%" height="40%"></p><p><img src="/images/MCU-1/单片机-2.png" width="40%" height="40%"></p><p><img src="/images/MCU-1/单片机-3.png" width="40%" height="40%"></p><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h3><p><strong>以下内容参考自中文维基:</strong></p><ul><li><p>单片机<a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E7%89%87%E6%9C%BA" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E5%8D%95%E7%89%87%E6%9C%BA</code></p></blockquote></li><li><p>微处理器<a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8</code></p></blockquote></li><li><p>数字信号处理器<a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E4%BD%8D%E8%A8%8A%E8%99%9F%E8%99%95%E7%90%86%E5%99%A8" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E6%95%B8%E4%BD%8D%E8%A8%8A%E8%99%9F%E8%99%95%E7%90%86%E5%99%A8</code></p></blockquote></li><li><p>嵌入式操作系统<a href="https://zh.wikipedia.org/wiki/%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F</code></p></blockquote></li><li><p>单片系统<a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E7%89%87%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E5%8D%95%E7%89%87%E7%B3%BB%E7%BB%9F</code></p></blockquote></li><li><p>数字信号控制器<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6%E5%99%A8" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6%E5%99%A8</code></p></blockquote></li><li><p>可编程逻辑控制器<a href="https://zh.wikipedia.org/wiki/%E5%8F%AF%E7%BC%96%E7%A8%8B%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8" target="_blank" rel="noopener">跳转</a></p><blockquote><p><code>https://zh.wikipedia.org/wiki/%E5%8F%AF%E7%BC%96%E7%A8%8B%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8</code></p></blockquote></li></ul><hr><h2 id="补充内容-1"><a href="#补充内容-1" class="headerlink" title="补充内容-1"></a>补充内容-1</h2><h2 id="C-51内核系列"><a href="#C-51内核系列" class="headerlink" title="C 51内核系列"></a>C 51内核系列</h2><h3 id="8051-引脚功能"><a href="#8051-引脚功能" class="headerlink" title="8051 引脚功能"></a>8051 引脚功能</h3><ul><li><p>电源引脚：</p><blockquote><p>两根引脚，VCC（Pin40）为正电源端，接5.0v电压；GND（Pin20）为接地端。</p></blockquote></li><li><p>外接晶振 &amp; 外部振荡器引脚（时钟震荡器功能）：</p><blockquote><p>两根引脚，XTAL1（Pin19）为时钟XTAL1脚，片内震荡电路的输入端；XTAL2（Pin18）为时钟XTAL2脚，片内震荡电路的输入端。</p></blockquote></li><li><p>8051的时钟振荡器有两种工作方式：</p><blockquote><p>一种是片内时钟震荡方式，在18和19脚外界石英体和震荡电容，震荡电容的值一般取10~30pF。<br>另外一种是外部时钟方式，由外部直接提供时钟源。</p></blockquote></li><li><p>P0口：</p><blockquote><p>即为P0.0~P0.7（Pin39~Pin32），输入输出脚，可用于8位并行I/O或分时复用位地址和数据总线。</p></blockquote></li><li>P0定义为I/O口时，为准双向I/O口；<blockquote><p>需外接上拉电阻，在程序中向该端口写入1后，成为高阻抗输入口。</p></blockquote></li><li><p>P0口在作为输入口时，每个引脚可以负载8个TTL。</p><blockquote><p>在外扩存储器时，可以定义为8位地址/数据线。</p></blockquote></li><li><p>P1口：</p><blockquote><p>即P1.0~P1.7（Pin1~Pin8），输入输出脚，8位准双向并行I/O口。<br>P1口内部已经具有上拉电阻，为8位准双向I/O口，能负载4个TTL，在Flash编程和校验时，定义为低8位地址线。</p></blockquote></li><li><p>P2口：</p><blockquote><p>即P2.0~P2.7（Pin21~Pin28），输入输出脚，8位准双向并行I/O口。<br>P2口内部已经具有上拉电阻，为8位准双向I/O口，能负载4个TTL。</p></blockquote></li><li><p>P3口：</p><blockquote><p>即P3.0~P3.7（Pin10~Pin17），输入输出脚，8位准双向并行I/O口。<br>P3口内部已经具有上拉电阻，为8位准双向I/O口，能负载4个TTL。</p></blockquote></li><li><p>P3口每个引脚都具有第二功能：</p><blockquote><p>引脚P3.0（RXD）和引脚P3.1（TXD）分别位串行数据的接受和发送端口，用于串行数据传输；<br>引脚P3.2和引脚P3.3位外部中断请求，分别用于INT0和INT1的中断输入；<br>引脚P3.4（T0）和引脚P3.5（T1），分别为定时器/计数器T0和T1的外部计算输入端；<br>引脚P3.6（WR）和引脚P3.7（RD）用于读写单片机外RAM存储器，分别是外部数据写选通信号和读选通信号。</p></blockquote></li><li><p>RST（Pin9）：</p><blockquote><p>单片机内部CPU的复位信号输入端。<br>在单片机的振荡器启动后，该引脚置两个机器周期以上高电平，便可以实现复位。</p></blockquote></li><li><p>ALE/PROG（Pin30）：</p><blockquote><p>地址封锁使能端和编程脉冲输入端。<br>当访问外部程序设计存储器时，ALE引脚的负跳将低8位地址打入锁存；<br>而非访问内部程序存储器时，ALE引脚将有一个1/6震荡频率的正脉冲信号，该信号可以用于外部计数或时钟信号。<br>当访问外部数据存储器（执行MOVX类命令）时，ALE引脚会跳过一个脉冲。<br>另外，对8EH单元的特殊功能寄存器的D0位置1，可禁止ALE输出，只有在执行MOVX或MOVC类指令时，ALE才被激活，仍输出所存有效。<br>在执行片外程序代码时，该设定禁止ALE位无效。</p></blockquote></li><li><p>PSEN（Pin29）：</p><blockquote><p>访问外部程序存储器的读选通信号。<br>当单片机访问外部程序存储器，读取指令码时，每个机器周期产生2次有效信号，即次脚输入2个负脉冲选通信号；<br>在执行片内程序存储器以及读写外部数据时，不产生PSEN脉冲信号。</p></blockquote></li><li><p>EA/VPP（Pin31）：</p><blockquote><p>EA为访问内部或外部程序存储器选择信号。<br>当8051 CPU访问外部程序存储器时，则EA必须保持低电平；<br>当EA保持高电平时，则8051 CPU先从片内0000H单元开始，执行内部程序存储器程序；<br>如果外部还有扩展程序存储器，则8051 CPU在执行完内部程序存储器程序后，自动转向执行外部程序存储器的程序。</p></blockquote></li></ul><hr><h2 id="关于单片机的开发流程："><a href="#关于单片机的开发流程：" class="headerlink" title="关于单片机的开发流程："></a>关于单片机的开发流程：</h2><ul><li>单片机应用系统的开发主要包括单片机的外部电路设计和单片机的控制程序设计，其中以单片机的控制程序设计为核心。</li><li>一般来说，一个完整的单片机应用系统设计包括系统分析、单片机选型、程序设计、仿真测试并最终下载到实际硬件电路中执行。</li><li>单片机开发的整个流程一般为：<blockquote><p>系统分析 -&gt; 单片机选型 -&gt; 程序设计 -&gt; 仿真测试 -&gt; 程序正确？（如果为是则进行至下一步，如果为否则回到程序设计阶段） -&gt; 程序下载</p></blockquote></li></ul><hr><h3 id="系统分析阶段："><a href="#系统分析阶段：" class="headerlink" title="系统分析阶段："></a>系统分析阶段：</h3><ul><li><p>设计者在开始单片机应用系统开发之前，除了需要掌握单片机的硬件以及程序设计方法外，还需要对整个系统进行可行性分析和系统总体方案分析。</p><blockquote><p>这么可以避免浪费工作时间。<br>可行性分析用于明确整个设计任何在现有的技术条件和个人能力上是可行的。</p></blockquote></li><li><p>首先，要保证设计要求可以利用现有的技术来实现；</p><blockquote><p>大概包括了该项目的功能需求，体积和功耗等，同时需要对当前的技术条件和器件性能非常熟悉，以确保合适的器件能够完成所有的功能。</p></blockquote></li><li>其次，需要了解整个项目开发所需要的至少是否都具备；<blockquote><p>如果不具备，则需要估计在现有的知识背景和时间限制下能否掌握并完成整个设计。<br>必要的时候，可以选用成熟的开发板来加快学习和程序设计的速度。</p></blockquote></li><li>当完成可行性分析后，便可以进入系统总体方案设计阶段；<blockquote><p>设计者可以参考前面的可行性分析中查找到的相关资料以及本系统的应用要求和现有技术条件，初步规划本设计所采用的器件以及实现的功能和技术指标。<br>接着，置顶合理的时间计划表，编写设计任务书，从而完成系统的总体设计方案。</p></blockquote></li></ul><hr><h3 id="关于单片机的选型："><a href="#关于单片机的选型：" class="headerlink" title="关于单片机的选型："></a>关于单片机的选型：</h3><ul><li><p>在单片机系统开发中，单片机是整个设计的核心。</p><blockquote><p>设计者需要为单片机安排合适的外部器件，同时还需要设计整个控制软件，因此选择合适的单片机型号显得尤为重要。<br>目前，市场上的单片机种类繁多，在进行正式的单片机应用系统开发之前，需要根据不同单片机的特效，来从中做出合理的选择。</p></blockquote></li><li><p>单片机的注意事项：</p><blockquote><p>在单片机选型时，需要需要注意以下几点。</p></blockquote></li></ul><ol><li>仔细调查市场，尽量选用主流的、货源充足的单片机型号，这些器件使用的比较广泛，有许多设计资料供学习或参考。</li><li>尽量选择所需的硬件资源集成在单片机内部的型号，例如ADC、DAC、12C、SPI和USB等。</li><li>这样便于整个控制系统的软件管理，减少外部硬件的投入，缩小整个电路板的面积，从而减少总体投资等。</li><li>对于手持式设备、移动谁被或者其他需要低功耗的设备，尽量选择低电压、低功耗的单片机型号。<blockquote><p>这样可以减少能力的消耗，演唱设备的使用寿命。</p></blockquote></li><li>在资金等条件允许的情况下，尽量选择贴片封装的单片机型号，这样可以减少电路板面积，从而降低硬件成本，同时也有助于电磁兼容设计。</li></ol><hr><h3 id="程序设计阶段："><a href="#程序设计阶段：" class="headerlink" title="程序设计阶段："></a>程序设计阶段：</h3><ul><li>当完成系统总体方案并确定单片机型号后，便可以开始电路和程序设计。</li><li><p>在进行电路设计时，需要仔细规划整个硬件电路的资源分配以及扩展器件。</p><blockquote><p>同时，需要规划哪部分的功能用硬件来实现以及用什么器件来实现，哪部分的功能用软件来实现等。</p></blockquote></li><li><p>这里需要注意以下几点：</p></li></ul><ol><li>如果所选单片机的硬件资源丰富且性能指标达到要求，则应尽量使用其内部集成的硬件资源来实现，这样可以减少格外的器件投资，同时提高系统的集成度和降低电路的复杂性。</li><li>合理规划来使用单片机的硬件资源，充分发挥单片机的性能。</li><li>尽量选择一些标准化，结构化的典型电路，这样可以加速电路设计速度，提高设计的灵活性，确保成功率等。</li><li>硬件电路上最好将不用的引脚为扩展的接口，以方便后期的电路维护以及硬件升级。</li><li>要仔细考虑各部分硬件以及驱动能力，以确保电源具有足够的驱动能力，同时也需要保证相连接的两个器件之间的驱动能力，否则将导致系统无法正确运行。</li><li>在整个单片机应用系统设计中，单片机的程序设计至关重要。</li></ol><ul><li>在单片机程序设计时，主要从以下几点来考虑：</li></ul><ol><li>选择合适且易用的程序开发工具，例如Keil μ Vision 等。</li><li>尽量选择使用单片机C51语言来进行设计，避免使用汇编语言，这样可以使程序易懂，便于代码交流和后期维护。</li><li>对于执行速度有特殊要求的场合，可以采用C51语言嵌入汇编代码来实现。</li><li>采用结构化的程序设计，将各个主要的功能部件设计为子程序或者函数，这样便于调试以及后续的移植修改等。</li><li>合理使用单片机的硬件资源，包括RAM、ROM、串口、定时器/计数器和中断等。</li><li>程序中尽量采用执行速度块的指令，以充分发挥单片机的运算性能。</li><li>充分考虑软件运行时的状态，避免未处理的运行状态。<blockquote><p>否则，程序运行时进入未处理的状态便容易出错致使软件死机。</p></blockquote></li><li>必要时可以在软件中采用看门狗定时器来进行强制复位。</li><li>编写程序代码时，要尽量注释，这样可以提高程序的可读性，便于代码交流和维护。</li></ol><hr><h3 id="关于仿真测试："><a href="#关于仿真测试：" class="headerlink" title="关于仿真测试："></a>关于仿真测试：</h3><ul><li>单片机程序在实际使用前，一般均需要进行代码仿真。</li><li>单片机仿真测试和程序设计是紧密相关的。</li><li><p>在实际设计过程中，通过仿真设计，可以及时发现问题，确保模块及程序的正确性。</p><blockquote><p>当发现问题时，需要重新进行设计修改，直到程序通过仿真测试。</p></blockquote></li><li><p>单片机程序的仿真测试需要从如下几点考虑：</p></li></ul><ol><li>对于模块化的程序，可以通过仿真测试来单独测试每一个模块的功能是否正确。</li><li>对于通信接口，如串口等，可以在仿真程序中测试通信的流程。</li><li>通过程序仿真测试可以预先了解软件的整体运行情况是否满足要求。</li><li>选择一个好的程序编译仿真环境，例如Keil公式的μ Vision系列，英国Labcenter electronics公司的PROTEUS软件等。</li><li>如果条件允许，可以选择一款和单片机型号匹配的硬件仿真器。<blockquote><p>硬件仿真器一般支持在线仿真调试，可以实时观察程序中的各个变量，最大程度上对程序进行测试。</p></blockquote></li></ol><hr><h3 id="关于程序下载："><a href="#关于程序下载：" class="headerlink" title="关于程序下载："></a>关于程序下载：</h3><ul><li>在程序设计完毕并初步通过仿真测试后，便可以将其下载到单片机中，并结合硬件电路来测试系统整体运行。</li><li><p>此时，主要测试单片机程序和外部硬件接口是否正常，整个硬件电路的逻辑时序配合是否正确等。</p><blockquote><p>如果发现问题，则要返回设计阶段，逐个解决问题，直至解决所有问题，达到预期设计功能和指标。</p></blockquote></li><li><p>在程序下载和实践电路调试时，可以从如下几点考虑：</p><blockquote><p>在设计调试时，尽量选择可重复编程的单片机，这样便于及时修改程序。<br>在投入生产时，可以根据需要选择一次性编程的器件。<br>尽量选择Flash编程的单片机，相比早期的单片机来说，其程序下载方式简单，下载器投资较少。<br>尽量选择合适的程序下载器，最好同时具有在线调试功能，这样便于硬件的仿真调试。</p></blockquote></li></ul><hr><ul><li>关于单片机的开发语言：</li></ul><blockquote><p>在单片机设计中，一般可以选择单片机汇编语言和单片机C51语言两种。<br>这两种语言各有优势，目前以单片机C51语言使用的最多。</p></blockquote><hr><h2 id="各大单片机厂商简介："><a href="#各大单片机厂商简介：" class="headerlink" title="各大单片机厂商简介："></a>各大单片机厂商简介：</h2><ul><li><p>目前，市场上的单片机种类很多，不同厂商均推出很多不同侧重功能的单片机类型。</p><blockquote><p>设计者需要了解目前主流的一些单片机，这样便于选择合适的芯片进行设计。</p></blockquote></li><li><p>下面分别介绍各个主要厂商提供的单片机系列：</p><blockquote><p>Atmel 单片机介绍<br>Atmel公式的产品非常丰富，除基本的51系列单片机外，还包括针对不同设计领域的专用51内核单片机。</p></blockquote></li></ul><h3 id="Atmel"><a href="#Atmel" class="headerlink" title="Atmel"></a>Atmel</h3><ul><li>Atmel公式的51内核单片机有如下几类：</li></ul><ol><li>单周期8051内核单片机：<blockquote><p>例如AT89LP213、AT89LP214、AT89LP216、AT89LP2052、AT89LP4052等。</p></blockquote></li><li>Flash ISP在系统编程单片机：<blockquote><p>例如AT89C51、AT89LS51、AT89LS52、AT89S2051、AT89S4051、AT89S51、AT89S52、AT90S8253等</p></blockquote></li><li>USB接口单片机：<blockquote><p>例如AT83C5134、AT83C5135、AT83C5136、AT83C5130、AT89C5131、AT89C5132等。</p></blockquote></li><li>智能卡接口单片机：<blockquote><p>例如AT85C51SND3、AT89C51SND2C、AT89C51SND1C、AT83SND2C、AT83SND1C等。</p></blockquote></li></ol><hr><h3 id="Cypress"><a href="#Cypress" class="headerlink" title="Cypress"></a>Cypress</h3><p>Cypress单片机介绍：<br>Cypress公式的51内核单片机主要扩展了USB接口。<br>其中包括USB嵌入式主机、USB低速、全速和高速设备等。<br>其中典型的USB嵌入式主机为SL811HST，典型的USB全速设备为AS21xx系列，使用最广泛的USB高速设备为CY7C68013系列。</p><hr><h3 id="Infineon"><a href="#Infineon" class="headerlink" title="Infineon"></a>Infineon</h3><ul><li>Infineon单片机介绍：<blockquote><p>infineon红石的产品包括标准的8051内核以及复合工业标准的8051单片机，主要包括XC800系列和C500/C800系列。<br>其中，新型的XC800系列单片机采用高性能8051内核、片上集成闪存和ROM存储器以及功能强大的外设组，如增强型CAPCOM6（CC6）、CAN、LIN和10位ADC，包括XC886/888CLM、XC886/888LM、XC886等。<br>C500/C800系列单片机是基于工业标准8051架构的微处理器，具有CAN、SPI等资源，包括C515C、C505CA、C868等。</p></blockquote></li></ul><hr><p><strong>待补充</strong></p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Apr 10 2020 03:58:56 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;MCU/单片机-1&lt;/strong&gt;&lt;/center&gt;&lt;center&gt;&lt;strong&gt;基本概述-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="硬件" scheme="https://unit-serow.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
      <category term="MCU" scheme="https://unit-serow.github.io/categories/%E7%A1%AC%E4%BB%B6/MCU/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="单片机" scheme="https://unit-serow.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>随笔-2020-04-09</title>
    <link href="https://unit-serow.github.io/2020/04/09/%E9%9A%8F%E7%AC%94-2020-04-09/"/>
    <id>https://unit-serow.github.io/2020/04/09/%E9%9A%8F%E7%AC%94-2020-04-09/</id>
    <published>2020-04-09T06:24:19.000Z</published>
    <updated>2020-04-11T19:43:43.254Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="bf33e3e71540e524047285d1a05dda7a579e82ceb054c34afe9778aa7a00894c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      加密文案
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>映射与函数-1</title>
    <link href="https://unit-serow.github.io/2020/04/08/%E6%98%A0%E5%B0%84%E4%B8%8E%E5%87%BD%E6%95%B0/"/>
    <id>https://unit-serow.github.io/2020/04/08/%E6%98%A0%E5%B0%84%E4%B8%8E%E5%87%BD%E6%95%B0/</id>
    <published>2020-04-08T06:57:09.000Z</published>
    <updated>2020-04-08T09:21:15.298Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Apr 08 2020 17:21:21 GMT+0800 (中国标准时间) --><center><strong>映射 & 函数-1</strong></center><center><strong>基本概念-1</strong></center><a id="more"></a><h2 id="映射-amp-函数"><a href="#映射-amp-函数" class="headerlink" title="映射 &amp; 函数"></a>映射 &amp; 函数</h2><ul><li>映射与函数的基本概念<blockquote><p>不涉及集合论</p></blockquote></li></ul><hr><p><strong>涉及内容:</strong></p><ul><li>函数与极限<blockquote><p>映射与函数<br>数列的极限<br>函数的极限<br>无穷小与无穷大<br>极限运算法则<br>极限存在法则 两个重要极限<br>无穷小的比较<br>函数的连续性与间断点<br>连续函数的运算与初等函数的连续性<br>闭区间上连续函数的性质</p></blockquote></li></ul><hr><ul><li>映射，函数，极限，函数的连续性等-基本概念与性质</li></ul><h2 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><strong>概念简述:</strong></p><ul><li><p>定义:</p><blockquote><p>设$X$，$Y$是两个非空集合，如果存在一个法则$f$，使得对$X$中每个元素$x$，按法则$f$，在$Y$中有唯一确定的元素$y$与之对应<br>那么称$f$为从$X$到$Y$的映射<br>记作: $f: X \rightarrow Y$</p></blockquote></li><li><p>其中$y$称为元素$x$(在映射$f$下)的像，并记作$f(x)$，即为: $y = f(x)$</p></li><li><p>而元素$x$称为元素$y$(在映射$f$下)的一个原像</p></li><li><p>集合$X$称为映射$f$的定义域</p><blockquote><p>记作$D_f$，即$D_f = X$</p></blockquote></li><li>$X$中所有元素的像所组成的集合称为映射$f$的值域<blockquote><p>记作$R_f$或$f(X)$，即为: $R_f = f(X) = {f(x) | x ∈ X}$</p></blockquote></li></ul><p><strong>引论&amp;定理:</strong></p><ul><li>可由上述映射定义得出以下定理:</li><li>构成一个映射必须具备最基本的三个要素:</li></ul><ol><li>集合 $X$，即定义域 $D_f = X$</li><li>集合 $Y$，即值域的范围 $R_f \subset Y$</li><li>对应法则 $f$，使对每个 $x ∈ X$，有唯一确定的 $y = f(x)$ 与之对应</li></ol><ul><li>对于每个$x \in X$，元素$x$的像$y$是唯一的</li><li>而对每个$y \in R_f$，元素$y$的原像不一定是唯一的</li><li>映射$f$的值域$R_f$是$Y$的一个子集，即$R_f \subset Y$，但不一定$R_f = Y$</li></ul><p><strong>满射&amp;单射&amp;双射</strong></p><ul><li>满射<blockquote><p>设$f$是从集合$X$到集合$Y$的映射，若$R_f = Y$，即$Y$中任一元素$y$都是$X$中某元素的像，则称$f$为$X$到$Y$上的映射或满射</p></blockquote></li><li>单射<br>若对$X$中任意两个不同元素$x_1 ≠ x_2$，它们的像$f /left(x_1/right) ≠ f /left(x_2/right)$，则称$f$为$X$到$Y$的单射</li><li>双射<br>若映射$f$即是单射，又是满射，则称$f$为一一映射(或称之为双射)</li></ul><p><strong>关于映射的别称</strong></p><ul><li>映射又被称为算子</li><li>根据集合$X$，$Y$的不同情形，在不同的数学分支中，映射又有不同的惯用名称<blockquote><p>例如，从空集合$X$到数集$Y$的映射又称为$X$上的泛函<br>从非空集$X$到它自身的映射又称为$X$上的变换<br>从实数集(或其子集)$X$到实数集$Y$的映射通常称为定义在$X$上的函数</p></blockquote></li></ul><hr><h3 id="逆映射-amp-复合映射"><a href="#逆映射-amp-复合映射" class="headerlink" title="逆映射&amp;复合映射"></a>逆映射&amp;复合映射</h3><p><strong>逆映射基本概念:</strong></p><ul><li><p>设$f$是$X$到$Y$的单射，则由定义，对每个 $y \in R_f$，有唯一的 $x \in X$，适合$f(x) = y$</p><blockquote><p>于是可定义一个从$R_f$到$X$的新映射$g$，即为: $g: R_f \rightarrow X$<br>对于每个$y \in R_f$，规定$g(y) = x$，这$x$满足$f(x) = y$<br>这个映射$g$称为$f$的逆映射，记作$f^{-1}$，其中定义域$D_{f^-1} = R_f$，值域$R_{f^-1} = X$</p></blockquote></li><li><p>按上述定义，只有单射才存在逆映射</p></li></ul><p><strong>复合映射基本概念:</strong></p><ul><li>设有两个映射<blockquote><p>$g: X \rightarrow Y_1$ 与 $f: Y_2 \rightarrow Z$</p></blockquote></li><li><p>其中 $Y_1 \subset Y_2$，则由映射$g$和$f$可以定出一个从$X$到$Z$的对应法则</p><blockquote><p>它将每个$x \in X$映射成$f[ g(x) ] \in Z$<br>这个对应法则随之确定了一个从$X$到$Z$的映射，这个映射称为映射$g$和$f$构成的复合映射<br>记作$f \circ g$，即为: $f \circ g: X \to Z$，$(f \circ g) (x) = f[ g(x) ]$，$x \in X$</p></blockquote></li><li><p>由复合映射的定义可知，映射$g$和$f$构成复合映射的条件是:</p><blockquote><p>$g$的值域$R_g$必须包含在f的定义域内<br>即$R_g \subset D_f$，否则将不能构成复合映射</p></blockquote></li><li><p>由此可知，映射$g$和$f$的复合是有顺序的，$f \circ g$ 有意义并不表示 $g \circ f$ 也有意义</p><blockquote><p>即使 $f \circ g$ 与 $g \circ f$ 都有意义，复合映射 $f \circ g$ 与 $g \circ f$ 也未必相同</p></blockquote></li></ul><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的基本概念"><a href="#函数的基本概念" class="headerlink" title="函数的基本概念"></a>函数的基本概念</h3><p><strong>基本定义:</strong></p><ul><li><p>定义域&amp;值域&amp;映射规则&amp;因变量&amp;自变量</p></li><li><p>设数集$D \subset R$，则称映射$f: D \to R$为定义在$D$上的函数</p><blockquote><p>通常简记为: $y = f(x)$，$x \in D$<br>其中$x$称为自变量，$y$称为因变量，$D$称为定义域，记作$D_f$，即$D_f = D$</p></blockquote></li><li><p>函数的定义中，对每个$x \in D$，按对应法则$f$，总有唯一确定的值$y$与之对应</p><blockquote><p>这个值称为函数$f$在$x$处的函数值，记作$f(x)$，即$y = f(x)$</p></blockquote></li><li><p>因变量$y$与自变量$x$之间的这种依赖关系，通常将其称之为函数关系</p><blockquote><p>函数值$f(x)$的全体所构成的集合称为函数$f$的值域，记作 $R_f$ 或 $f(D)$<br>即为: $R_f = f(D) = {[y|y=f(x)],x \in D}$</p></blockquote></li><li><p>需要指出的一点就是，如果按照以上定义，记号$f$和$f(x)$的含义是是有区别的:</p><blockquote><p>前者表示自变量$x$和因变量$y$之间的对应法则，而后者表示与自变量$x$对应的函数值</p></blockquote></li><li><p>但为了叙述层面的方便，习惯上常用记号”$f(x)$，$x \in D$”或 “$y = f(x)$，$x \in D$”以表示定义在$D$上的函数</p><blockquote><p>此时应理解为由它所确定的函数$f$</p></blockquote></li><li><p>表示函数的记号是可以任意选取的，除了常用的f外，还可用其它的英文字母或希腊字母，对于字母与符号的选择在数理规则中没有限制</p><blockquote><p>只需要将符号相对应的带入公式即可<br>有时还直接用因变量的记号来表示函数，即把函数记作$y = y(x)$</p></blockquote></li><li><p>但在同一个问题中，讨论到几个不同的函数时，为了表示区别，需要用不同的记号来表示它们</p></li><li><p>函数是从实数集到实数集的映射，其值总在$R$内，因此构成函数的要素是:</p><blockquote><p>定义域$D_f$及其对应法则$f$<br>如果两个函数的定义域相同，同时对应法则也相同，那么这两个函数就是相同的，否则就是不同的</p></blockquote></li><li><p>函数的定义域通常按以下两种情况决定:</p><blockquote><p>一种是对有实际背景的函数，根据实际背景中变量的实际意义确定<br>而另一种是抽象地使用算式来表达的函数，通常约定这种函数的定义域是使得算式有意义的一切实数组成的集合<br>这种定义域称为函数的自然定义域</p></blockquote></li><li><p>在这种约定之下，一般的用算式表达式的函数可用”$y = f(x)$”表达，而不必再表示出$D_f$</p><blockquote><p>例如: 函数$y = \sqrt{1-x^2}$的定义域是闭区间$[-1,1]$，函数$y = \frac{1}{\sqrt{1-x^2}}$的定义域是开区间$(-1,1)$</p></blockquote></li></ul><hr><p><strong>关于函数的表示方法:</strong></p><ul><li>对于函数的表示方法主要有三种: 表格法，图形法，解析法(公式法)<blockquote><p>其中，用图形法表示函数是基于函数图形的概念，即坐标平面上的点集<br>即为: ${P(x,y) | y=f(x), x \in D}$<br>称为函数$y = f(x)$，$x \in D$的图形</p></blockquote></li></ul><hr><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Apr 08 2020 17:21:21 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;映射 &amp; 函数-1&lt;/strong&gt;&lt;/center&gt;&lt;center&gt;&lt;strong&gt;基本概念-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="数理" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/"/>
    
      <category term="基础概念归纳" scheme="https://unit-serow.github.io/categories/%E6%95%B0%E7%90%86/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%BD%92%E7%BA%B3/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="数理基础" scheme="https://unit-serow.github.io/tags/%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>实验-1</title>
    <link href="https://unit-serow.github.io/2020/04/08/%E5%AE%9E%E9%AA%8C-1/"/>
    <id>https://unit-serow.github.io/2020/04/08/%E5%AE%9E%E9%AA%8C-1/</id>
    <published>2020-04-07T16:03:58.000Z</published>
    <updated>2020-04-07T17:51:35.924Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Apr 08 2020 01:52:31 GMT+0800 (中国标准时间) --><p>$\sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t$</p><p>$X^{A} X^{B} = X^{A+B}$</p><p>$\frac{X^A} {X^B} = X^{A-B}$</p><p>$\left(X^{A}\right)^{B} = X^{AB}$</p><p>$X^N+X^N = 2X^N ≠ X^2N$</p><p>$2^N + 2^N = 2^{N+1}$</p><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Apr 08 2020 01:52:31 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;$\sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t$&lt;/p&gt;&lt;p&gt;$X^{A} X^{B} = X^{A+B}$&lt;/p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数理基础-1</title>
    <link href="https://unit-serow.github.io/2020/04/07/%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80-1/"/>
    <id>https://unit-serow.github.io/2020/04/07/%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80-1/</id>
    <published>2020-04-07T15:56:01.000Z</published>
    <updated>2020-04-07T21:11:16.750Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Apr 08 2020 05:11:23 GMT+0800 (中国标准时间) --><center><strong>数理基础-1</strong></center><center><strong>数据结构与算法: C语言实现-1</strong></center><a id="more"></a><h3 id="data-structure-amp-algorithm"><a href="#data-structure-amp-algorithm" class="headerlink" title="data structure &amp; algorithm"></a>data structure &amp; algorithm</h3><ul><li>数据结构 &amp; 算法</li><li>C 语言实现-1</li></ul><hr><ul><li>引论</li><li>基本的数理知识<blockquote><p>指数<br>对数<br>级数<br>模运算<br>证明方法<br>递归<br>离散数学</p></blockquote></li></ul><hr><h3 id="引论简述"><a href="#引论简述" class="headerlink" title="引论简述"></a>引论简述</h3><p><strong>问题一:</strong></p><ul><li>设有一组N个数而要确定其中第k个最大者<blockquote><p>可以将这种问题称之为选择问题(selection problem)<br>此种显而易见的问题的解决方法有很多</p></blockquote></li></ul><p><strong>方法一:</strong></p><ul><li>改问题的一种解法就是将这N个数读进一个数组中，再通过某种简单的算法<blockquote><p>比如冒泡排序算法，以递归顺序将数组排序，然后返回位置k上的元素</p></blockquote></li><li><p>还可以先把前k个元素读入数组并以递减的顺序对其排序，接着将剩下的元素再逐个读入</p><blockquote><p>当新元素被读到时，如果它小于数组中的第k个元素时，则忽略，否则就将其放到数组中正确的位置上，同时将数组中的一个元素挤出数组<br>当算法终止时，位于第k个位置上的元素则作为答案返回</p></blockquote></li><li><p>以上两种算法再合理的时间量内均不能结束，如果以存在其它更好的算法为前提</p><blockquote><p>还依旧在现实中对其进行实现则不切合实际<br>关于此种问题的解决算法(方法)还有很多，接下来将会进行刨析，这里不做过多赘述</p></blockquote></li></ul><p><strong>问题二:</strong></p><ul><li><p>第二个问题是解决一个流行的字谜</p><blockquote><p>输入是由一些字母和单词的二维数组组成<br>目标是要找出字谜中的单词，这些单词可能是水平，垂直或沿对角线以任何方向放置的</p></blockquote></li><li><p>以下图所示，该字谜由单词this，two，fat和that组成</p><blockquote><p>单词this从第一行第一列的位置即(1，1)处开始并延伸至(1，4)<br>单词two从(1，1)到(3，1)，fat从(4，1)到(2，3)<br>而that则从(4，4)到(1，1)</p></blockquote></li><li><p>字谜示例图片:</p></li></ul><p><img src="/images/数理基础-1/字谜游戏-1.png" width="40%" height="40%"></p><ul><li>现在至少有两种直观的方法来求解该问题</li></ul><p><strong>方法一:</strong></p><ul><li>对单词表中的每个单词检查，检查到每一个有序三元组(行，列，方向)，验证是否有单词存在<blockquote><p>此种方法需要大量嵌套的for循环，但它基本上是最直观的算法</p></blockquote></li></ul><p><strong>方法二:</strong></p><ul><li><p>对于每一个尚未进行到字谜最后的有序四元组(行，列，方向，字符数)</p><blockquote><p>可以测试所指的单词是否在单词表中，此种方法也将导致使用大量嵌套的for循环<br>如果在任意单词中的最大字符数已知，那么此种算法将有可能比上一种更节省一些时间</p></blockquote></li><li><p>上述两种方法相对来说都不算太难编码并可求解发表于杂志上的许多现实的字谜游戏</p><blockquote><p>这些字谜通常由16行16列以及40个左右的单词<br>然而可以将这些字谜视为只给出谜板(puzzle board)而单词表基本上是译本英语词典<br>则上面提出的两种解法则需要相当可观的时间来解决这个问题，所以两种方法都是不可接受的<br>不过这样的问题还是有可能在数秒内解决的，当然即便单词表很大的情况下也可以</p></blockquote></li><li><p>在许多问题中，一个重要的观念是: 写处一个可以工作的程序并不够</p><blockquote><p>如果这个程序在巨大的数据集上运行，那么运行时间就变成了重要的问题<br>之后的内容将会对此进行解析: 在对于大量数据的输入时，如何去预估程序的运行时间<br>尤其是如何在尚未具体编码的情况下比较两个程序的运行时间<br>还包括了彻底解决并改进程序运行速度以及确定程序瓶颈的方法<br>这些方法可以用于找到需要大力优化的那些代码段</p></blockquote></li></ul><hr><h3 id="基本的数理知识"><a href="#基本的数理知识" class="headerlink" title="基本的数理知识"></a>基本的数理知识</h3><ul><li>包括了:<blockquote><p>需要记住并且熟练运用的基础数理概念<br>并能够基于实际问题来推导出的基本公式<br>与基本证明方法的一些基本数理知识</p></blockquote></li></ul><p><strong>指数:</strong></p><ul><li>指数基本公式图片:</li></ul><p><img src="/images/数理基础-1/指数基本公式-1.png" width="40%" height="40%"></p><ul><li>$X^{A} X^{B} = X^{A+B}$</li><li>$\frac{X^A} {X^B} = X^{A-B}$</li><li>$\left(X^{A}\right)^{B} = X^{AB}$</li><li>$X^N+X^N = 2X^N ≠ X^2N$</li><li>$2^N + 2^N = 2^{N+1}$</li></ul><hr><p><strong>对数公式:</strong></p><ul><li><p>在计算机科学中，除非有特别的声明，所有的对数都是以二为底的</p><blockquote><p>定义: $X^A = B$ ，当且仅当$\log_x{B} = A$</p></blockquote></li><li><p>由此定义得出以下推论&amp;定理等式:</p></li><li><p>定理一: $\log_A{B} = \frac{\log_C{B}} {\log_C{A}}; C&gt;0$</p></li><li><p>证明:</p><blockquote><p>令$X = \log_C{B}$，$Y = \log_C{A}$，以及$Z = \log_A{B}$<br>此时由对数的定义得: $C^X = B$，$C^Y = A$及其$A^Z = B$<br>联合这三个等式则产生$\left(C^Y\right)^Z = C^X = B$<br>因此，$X = YZ$，即意味着$Z = X/Y$<br>定理由此得证</p></blockquote></li><li><p>定理二: $\log AB = \log A + \log B$</p></li><li><p>证明:</p><blockquote><p>令$X = \log A$，$Y = \log B$，以及$Z = \log AB$<br>此时由于假设默认的底为2，$2^X = A$，$2^Y = B$及$2^Z = AB$<br>联合最后的三个等式则有: $2^X2^Y = 2^Z = AB$<br>因此 $X + Y = Z$<br>定理由此可证</p></blockquote></li><li><p>其它一些有用的公式如下，它们都能够用类似的方法去推导</p><blockquote><p>$\log A/B = \log A - \log B$<br>$\log\left(A^B\right) = B \log A$<br>$\log X &lt; X$(对所有的X&gt;0成立)<br>$\log 1 = 0$，$\log 2 = 1$，$\log 1 024 = 10$，$\log 1 048 576 = 20$<br>以上指数公式皆以2为底数</p></blockquote></li><li><p>对数函数f(x)和指数函数g(x)互为反函数</p><blockquote><p>由反函数的相关原理可知道f(1)=0，也就是说对数函数log1=0</p></blockquote></li><li>指数函数和对数函数相应的图像是关于y=x对称的<blockquote><p>对数函数始终过(0,1)点，指数函数则过(1,0)点</p></blockquote></li></ul><hr><p><strong>级数公式:</strong></p><ul><li><p>最基础的公式:</p></li><li><p>$\sum\limits_{i=0}^{N} 2^i=2 = 2^{N+1} - 1$</p></li><li>与</li><li><p>$\sum\limits_{i=0}^{N} = \frac{A^{N+1} - 1} {A - 1}$</p></li><li><p>在第二个公式中，如果$0 &lt; A &lt; 1$，则有:</p><blockquote><p>$\sum\limits_{i=0}^{N} A^i ≤ \frac{1} {1 - A}$</p></blockquote></li><li><p>当N趋于$\infty$时该和趋向于$1/(1 - A)$</p><blockquote><p>这些公式是几何级数公式</p></blockquote></li><li><p>如果用下面的方法推导关于$\sum^{\infty}_{i=0}A^i$ $(0 &lt; A &lt; 1)$的公式</p><blockquote><p>令S表示和，此时 $S = 1 + A + A^2 + A^3 + A^4 + A^5 + ······$<br>于是有: $AS = A + A^2 + A^3 + A^4 + A^5 + ······$</p></blockquote></li><li><p>如果将两个等式相减(这种运算只能对收敛级数进行)，等号右边所有的项取消，只留下1</p><blockquote><p>$S - AS = 1$，这就是说 $S = \frac{1} {1-A}$</p></blockquote></li><li><p>可以用相同的方法计算$\sum_{\infty}^{i=1} i/2^i$，它是一个经常出现的和</p><blockquote><p>可以将其表示为: $S = \frac{1}{2} + \frac{2}{2^2} + \frac{4}{2^4} + \frac{5}{2^5} + ······$<br>用2乘之得到: $2S = 1 + \frac{2}{2} + \frac{3}{2^2} + frac{4}{2^3} + \frac{5}{2^4} + \frac{6}{2^5} + ······$<br>因此得出S=2</p></blockquote></li><li><p>分析中另一种常用类型的级数是算术级数</p></li><li><p>任何这样的级数都可以通过基本公式来计算其值</p><blockquote><p>$\sum\limits_{N}^{i=1} i = \frac{N\left(N+1\right)}{2} ≈ \frac{N^2}{2}$</p></blockquote></li><li><p>例如，为求出和$2+5+8+···+\left(3k - 1\right)$</p><blockquote><p>将其改写为$3(1+2+3+···+k)-(1+1+1+···+1)$，显然，它就是$3k\left(k+1\right)/2-k$<br>另一种记忆的方法则是将第一项与最后一项相加(和为$3k+1$)，第二项与倒数第二项相加(和也是$3k+1$)，等等<br>由于有$k/2$个这样的数对，因此总和就是$k(3k+1)/2$，这与前面的答案相同</p></blockquote></li><li><p>现在介绍下面的两个较为不常见的公式:</p><blockquote><p>$\sum\limits_{i=1}^{N} i^2 = \frac{N\left(N+1\right)\left(2N+1\right)}{6} ≈ \frac{N^3}{3}$<br>$\sum\limits_{i=1}^{N} i^k ≈ \frac{N^{k+1}{| k+1 |}} k ≠ -1$</p></blockquote></li><li><p>当k=-1时，后一个的公式不成立</p><blockquote><p>此时则需要以下公式，这个公式在计算机科学中的使用要远比在数学其它科目中使用的多<br>数$H_N$被称为调和数，其和叫做调和和</p></blockquote></li><li><p>下面近似中的误差趋向于$\gamma ≈ 0.57721566$，这个值被称为欧拉常数(Euler’s constant)</p><blockquote><p>$H_N = \sum\limits_{i=1}^{N}\frac{1}{i} ≈ \log_{e}N$</p></blockquote></li><li><p>以下两个公式只不过是一般的代数运算:</p><blockquote><p>$\sum\limits_{i=1}^{N} f\left(N\right) = Nf\left(N\right)$<br>$\sum\limits_{i=n_0}^{N} f(i) = \sum\limits_{i=1}^{N} f(i) - \sum\limits_{i=1}^{n_{0}-1} f(i)$</p></blockquote></li></ul><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h3><ul><li>数据结构与算法分析 -C 语言描述 第二版<blockquote><p>第一章节</p></blockquote></li></ul><hr><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Wed Apr 08 2020 05:11:23 GMT+0800 (中国标准时间) --&gt;&lt;center&gt;&lt;strong&gt;数理基础-1&lt;/strong&gt;&lt;/center&gt;&lt;center&gt;&lt;strong&gt;数据结构与算法: C语言实现-1&lt;/strong&gt;&lt;/center&gt;
    
    </summary>
    
    
      <category term="软件" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="data structure &amp; algorithm" scheme="https://unit-serow.github.io/categories/%E8%BD%AF%E4%BB%B6/data-structure-algorithm/"/>
    
    
      <category term="随笔" scheme="https://unit-serow.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="data structure &amp; algorithm" scheme="https://unit-serow.github.io/tags/data-structure-algorithm/"/>
    
  </entry>
  
</feed>
